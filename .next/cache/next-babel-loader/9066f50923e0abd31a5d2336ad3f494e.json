{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Cookies from 'js-cookie';\nimport * as Sentry from '@sentry/react';\nimport { SELECTED_WALLET_COOKIE_KEY } from 'lib/constants';\nimport { WalletContext } from 'lib/components/contextProviders/WalletContextProvider';\nimport { ErrorPage } from 'lib/components/ErrorPage';\nexport function CustomErrorBoundary(props) {\n  const {\n    children\n  } = props;\n  const {\n    onboardWallet\n  } = useContext(WalletContext);\n  let walletName = onboardWallet === null || onboardWallet === void 0 ? void 0 : onboardWallet.name;\n\n  if (!walletName) {\n    walletName = Cookies.get(SELECTED_WALLET_COOKIE_KEY);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Sentry.ErrorBoundary, {\n    beforeCapture: scope => {\n      scope.setTag('web3', walletName);\n      scope.setContext('wallet', {\n        name: walletName\n      });\n    },\n    fallback: ({\n      error,\n      componentStack,\n      resetError\n    }) => __jsx(ErrorPage, null)\n  }, children));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/CustomErrorBoundary.jsx"],"names":["React","useContext","Cookies","Sentry","SELECTED_WALLET_COOKIE_KEY","WalletContext","ErrorPage","CustomErrorBoundary","props","children","onboardWallet","walletName","name","get","scope","setTag","setContext","error","componentStack","resetError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,SACEC,0BADF,QAEO,eAFP;AAGA,SAASC,aAAT,QAA8B,uDAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAoBT,UAAU,CAACI,aAAD,CAApC;AAEA,MAAIM,UAAU,GAAGD,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEE,IAAhC;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAGT,OAAO,CAACW,GAAR,CAAYT,0BAAZ,CAAb;AACD;;AAED,SAAO,4BACL,MAAC,MAAD,CAAQ,aAAR;AACE,IAAA,aAAa,EAAGU,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,MAAN,CAAa,MAAb,EAAqBJ,UAArB;AAEAG,MAAAA,KAAK,CAACE,UAAN,CAAiB,QAAjB,EAA2B;AACzBJ,QAAAA,IAAI,EAAED;AADmB,OAA3B;AAGD,KAPH;AAQE,IAAA,QAAQ,EAAE,CAAC;AAAEM,MAAAA,KAAF;AAASC,MAAAA,cAAT;AAAyBC,MAAAA;AAAzB,KAAD,KACR,MAAC,SAAD;AATJ,KAYGV,QAZH,CADK,CAAP;AAgBD","sourcesContent":["import React, { useContext } from 'react'\nimport Cookies from 'js-cookie'\nimport * as Sentry from '@sentry/react'\n\nimport {\n  SELECTED_WALLET_COOKIE_KEY\n} from 'lib/constants'\nimport { WalletContext } from 'lib/components/contextProviders/WalletContextProvider'\nimport { ErrorPage } from 'lib/components/ErrorPage'\n\nexport function CustomErrorBoundary(props) {\n  const { children } = props\n  const { onboardWallet } = useContext(WalletContext)\n\n  let walletName = onboardWallet?.name\n\n  if (!walletName) {\n    walletName = Cookies.get(SELECTED_WALLET_COOKIE_KEY)\n  }\n\n  return <>\n    <Sentry.ErrorBoundary\n      beforeCapture={(scope) => {\n        scope.setTag('web3', walletName)\n\n        scope.setContext('wallet', {\n          name: walletName\n        })\n      }}\n      fallback={({ error, componentStack, resetError }) => (\n        <ErrorPage />\n      )}\n    >\n      {children}\n    </Sentry.ErrorBoundary>\n  </>\n}"]},"metadata":{},"sourceType":"module"}