{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { STRINGS } from 'lib/constants';\nimport { useTranslation } from 'lib/../i18n';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider';\nimport { AccountTicket } from 'lib/components/AccountTicket';\nimport { DropdownInputGroup } from 'lib/components/DropdownInputGroup';\nimport { WithdrawTicketsForm } from 'lib/components/WithdrawTicketsForm';\nimport { usePlayerQuery } from 'lib/hooks/usePlayerQuery';\nimport { testAddress } from 'lib/utils/testAddress';\nexport function ManageTicketsForm(props) {\n  _s();\n\n  var _playerData;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(AuthControllerContext),\n      chainId = _useContext.chainId,\n      pauseQueries = _useContext.pauseQueries,\n      usersAddress = _useContext.usersAddress;\n\n  var _useContext2 = useContext(PoolDataContext),\n      pool = _useContext2.pool;\n\n  var playerAddressError = testAddress(usersAddress);\n  var blockNumber = -1;\n\n  var _usePlayerQuery = usePlayerQuery(pauseQueries, chainId, usersAddress, blockNumber, playerAddressError),\n      status = _usePlayerQuery.status,\n      playerData = _usePlayerQuery.data,\n      error = _usePlayerQuery.error,\n      isFetching = _usePlayerQuery.isFetching;\n\n  if (error) {\n    console.error(error);\n  }\n\n  playerData = (_playerData = playerData) === null || _playerData === void 0 ? void 0 : _playerData.find(function (playerData) {\n    var _playerData$prizePool;\n\n    return (playerData === null || playerData === void 0 ? void 0 : (_playerData$prizePool = playerData.prizePool) === null || _playerData$prizePool === void 0 ? void 0 : _playerData$prizePool.id) === (pool === null || pool === void 0 ? void 0 : pool.id);\n  });\n\n  var _useState = useState(STRINGS.withdraw),\n      action = _useState[0],\n      setAction = _useState[1];\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"pane-title\"\n  }, __jsx(\"div\", {\n    className: \"leading-tight font-bold text-lg xs:text-3xl lg:text-4xl text-inverse mb-4 xs:mb-8\"\n  }, t('manageYourTickets'))), __jsx(\"div\", {\n    className: \"mx-auto mt-4 xs:mb-8\"\n  }, __jsx(AccountTicket, {\n    noMargin: true,\n    key: \"account-pool-row-\".concat(pool === null || pool === void 0 ? void 0 : pool.poolAddress),\n    pool: pool,\n    player: playerData\n  })), __jsx(DropdownInputGroup, {\n    id: \"manage-tickets-action-dropdown\",\n    label: t('whatWouldYouLikeToDoQuestion'),\n    current: action,\n    setCurrent: setAction,\n    options: _defineProperty({}, STRINGS.withdraw, t('withdraw'))\n  }), action === STRINGS.withdraw && __jsx(React.Fragment, null, __jsx(WithdrawTicketsForm, props)));\n}\n\n_s(ManageTicketsForm, \"hhHVOgfEfoyvZY7zPCTetf6QbP4=\", false, function () {\n  return [useTranslation, usePlayerQuery];\n});\n\n_c = ManageTicketsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageTicketsForm\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/ManageTicketsForm.jsx"],"names":["React","useContext","useState","STRINGS","useTranslation","AuthControllerContext","PoolDataContext","AccountTicket","DropdownInputGroup","WithdrawTicketsForm","usePlayerQuery","testAddress","ManageTicketsForm","props","t","chainId","pauseQueries","usersAddress","pool","playerAddressError","blockNumber","status","playerData","data","error","isFetching","console","find","prizePool","id","withdraw","action","setAction","poolAddress"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,eAAT,QAAgC,yDAAhC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,mBAAT,QAAoC,oCAApC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAAA;;AAAA,wBACzBT,cAAc,EADW;AAAA,MAC/BU,CAD+B,mBAC/BA,CAD+B;;AAAA,oBAGSb,UAAU,CAACI,qBAAD,CAHnB;AAAA,MAG/BU,OAH+B,eAG/BA,OAH+B;AAAA,MAGtBC,YAHsB,eAGtBA,YAHsB;AAAA,MAGRC,YAHQ,eAGRA,YAHQ;;AAAA,qBAItBhB,UAAU,CAACK,eAAD,CAJY;AAAA,MAI/BY,IAJ+B,gBAI/BA,IAJ+B;;AAMvC,MAAMC,kBAAkB,GAAGR,WAAW,CAACM,YAAD,CAAtC;AAEA,MAAMG,WAAW,GAAG,CAAC,CAArB;;AARuC,wBAcnCV,cAAc,CAACM,YAAD,EAAeD,OAAf,EAAwBE,YAAxB,EAAsCG,WAAtC,EAAmDD,kBAAnD,CAdqB;AAAA,MAUrCE,MAVqC,mBAUrCA,MAVqC;AAAA,MAW/BC,UAX+B,mBAWrCC,IAXqC;AAAA,MAYrCC,KAZqC,mBAYrCA,KAZqC;AAAA,MAarCC,UAbqC,mBAarCA,UAbqC;;AAgBvC,MAAID,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;;AAGDF,EAAAA,UAAU,kBAAGA,UAAH,gDAAG,YAAYK,IAAZ,CAAiB,UAAAL,UAAU;AAAA;;AAAA,WAAI,CAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,qCAAAA,UAAU,CAAEM,SAAZ,gFAAuBC,EAAvB,OAA8BX,IAA9B,aAA8BA,IAA9B,uBAA8BA,IAAI,CAAEW,EAApC,CAAJ;AAAA,GAA3B,CAAb;;AArBuC,kBAuBX3B,QAAQ,CAACC,OAAO,CAAC2B,QAAT,CAvBG;AAAA,MAuBhCC,MAvBgC;AAAA,MAuBxBC,SAvBwB;;AAyBvC,SAAO,4BACL;AACE,IAAA,SAAS,EAAC;AADZ,KAGE;AACE,IAAA,SAAS;AADX,KAGGlB,CAAC,CAAC,mBAAD,CAHJ,CAHF,CADK,EAWL;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,aAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,GAAG,6BAAsBI,IAAtB,aAAsBA,IAAtB,uBAAsBA,IAAI,CAAEe,WAA5B,CAFL;AAGE,IAAA,IAAI,EAAEf,IAHR;AAIE,IAAA,MAAM,EAAEI;AAJV,IADF,CAXK,EAoBL,MAAC,kBAAD;AACE,IAAA,EAAE,EAAC,gCADL;AAEE,IAAA,KAAK,EAAER,CAAC,CAAC,8BAAD,CAFV;AAGE,IAAA,OAAO,EAAEiB,MAHX;AAIE,IAAA,UAAU,EAAEC,SAJd;AAKE,IAAA,OAAO,sBACJ7B,OAAO,CAAC2B,QADJ,EACehB,CAAC,CAAC,UAAD,CADhB;AALT,IApBK,EAmCJiB,MAAM,KAAK5B,OAAO,CAAC2B,QAAnB,IAA+B,4BAC9B,MAAC,mBAAD,EACMjB,KADN,CAD8B,CAnC3B,CAAP;AA0CD;;GAnEeD,iB;UACAR,c,EAaVM,c;;;KAdUE,iB","sourcesContent":["import React, { useContext, useState } from 'react'\n\nimport { STRINGS } from 'lib/constants'\nimport { useTranslation } from 'lib/../i18n'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider'\nimport { AccountTicket } from 'lib/components/AccountTicket'\nimport { DropdownInputGroup } from 'lib/components/DropdownInputGroup'\nimport { WithdrawTicketsForm } from 'lib/components/WithdrawTicketsForm'\nimport { usePlayerQuery } from 'lib/hooks/usePlayerQuery'\nimport { testAddress } from 'lib/utils/testAddress'\n\nexport function ManageTicketsForm(props) {\n  const { t } = useTranslation()\n\n  const { chainId, pauseQueries, usersAddress } = useContext(AuthControllerContext)\n  const { pool } = useContext(PoolDataContext)\n\n  const playerAddressError = testAddress(usersAddress)\n\n  const blockNumber = -1\n  let {\n    status,\n    data: playerData,\n    error,\n    isFetching\n  } = usePlayerQuery(pauseQueries, chainId, usersAddress, blockNumber, playerAddressError)\n\n  if (error) {\n    console.error(error)\n  }\n\n\n  playerData = playerData?.find(playerData => playerData?.prizePool?.id === pool?.id)\n\n  const [action, setAction] = useState(STRINGS.withdraw)\n\n  return <>\n    <div\n      className='pane-title'\n    >\n      <div\n        className={`leading-tight font-bold text-lg xs:text-3xl lg:text-4xl text-inverse mb-4 xs:mb-8`}\n      >\n        {t('manageYourTickets')}\n      </div>\n    </div>\n\n    <div className='mx-auto mt-4 xs:mb-8'>\n      <AccountTicket\n        noMargin\n        key={`account-pool-row-${pool?.poolAddress}`}\n        pool={pool}\n        player={playerData}\n      />\n    </div>\n\n    <DropdownInputGroup\n      id='manage-tickets-action-dropdown'\n      label={t('whatWouldYouLikeToDoQuestion')}\n      current={action}\n      setCurrent={setAction}\n      options={{\n        [STRINGS.withdraw]: t('withdraw'),\n        // [STRINGS.transfer]: t('transfer')\n      }}\n    />\n\n    {/* {action === STRINGS.transfer && <>\n      <h6 className='mt-2 text-inverse'>Transfer feature coming soon ...</h6>\n    </>} */}\n\n    {action === STRINGS.withdraw && <>\n      <WithdrawTicketsForm\n        {...props}\n      />\n    </>}\n\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}