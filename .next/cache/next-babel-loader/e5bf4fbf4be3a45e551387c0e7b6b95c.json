{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport Link from 'next/link';\nimport { pick, isUndefined } from 'lodash';\nexport function getButtonClasses(props) {\n  let {\n    border,\n    bg,\n    bold,\n    text,\n    hoverBg,\n    hoverBorder,\n    hoverText,\n    noAnim,\n    padding,\n    rounded,\n    secondary,\n    selected,\n    transition,\n    className,\n    textSize,\n    width\n  } = props;\n  let defaultClasses = 'border-2 relative inline-block text-center leading-snug cursor-pointer outline-none focus:outline-none active:outline-none no-underline';\n  let animClass = noAnim ? '' : 'button-scale';\n\n  if (selected) {\n    defaultClasses += ` opacity-50`;\n    animClass = ``;\n  } // eg. textSize='sm', textSize='xl'\n\n\n  textSize = getTextSize(textSize);\n  let defaultPadding = 'px-4 xs:px-6 sm:px-10 lg:px-12 py-2 sm:py-2';\n  let defaultRounded = 'rounded-full';\n  let defaultTrans = 'trans trans-fast';\n  let defaultBorder = 'border-highlight-2';\n  let defaultBg = 'bg-transparent';\n  let defaultText = 'text-highlight-2';\n  let defaultHoverBorder = 'hover:border-highlight-4';\n  let defaultHoverBg = 'hover:bg-highlight-4';\n  let defaultHoverText = 'hover:text-secondary';\n\n  if (secondary) {\n    defaultBorder = 'border-highlight-2 border-2';\n    defaultBg = 'bg-primary';\n    defaultText = 'text-highlight-2';\n    defaultHoverBorder = 'hover:border-highlight-1';\n    defaultHoverBg = 'hover:bg-body';\n    defaultHoverText = 'hover:text-highlight-1';\n  }\n\n  bold = isUndefined(bold) ? 'font-bold' : '';\n  padding = padding ? `${padding}` : defaultPadding;\n  rounded = rounded ? `rounded-${rounded}` : defaultRounded;\n  transition = transition ? `${transition}` : defaultTrans;\n  width = width ? `${width}` : '';\n  border = border ? `border-${border}` : defaultBorder;\n  bg = bg ? `bg-${bg}` : defaultBg;\n  text = text ? `text-${text}` : defaultText;\n  hoverBorder = hoverBorder ? `hover:border-${hoverBorder}` : defaultHoverBorder;\n  hoverBg = hoverBg ? `hover:bg-${hoverBg}` : defaultHoverBg;\n  hoverText = hoverText ? `hover:text-${hoverText}` : defaultHoverText;\n  return classnames(className, defaultClasses, animClass, bold, bg, border, padding, rounded, text, hoverBg, hoverBorder, hoverText, textSize, transition, width);\n}\n\nconst getTextSize = size => {\n  switch (size) {\n    case 'xxxs':\n      return `text-xxxxs xs:text-xxxs sm:text-xxs lg:text-xs`;\n\n    case 'xxs':\n      return `text-xxxs xs:text-xxs sm:text-xs lg:text-sm`;\n\n    case 'xs':\n      return `text-xxs xs:text-xs sm:text-sm lg:text-base`;\n\n    case 'sm':\n      return `text-xs xs:text-sm sm:text-base lg:text-lg`;\n\n    case 'lg':\n      return `text-sm xs:text-lg sm:text-xl lg:text-2xl`;\n\n    case 'xl':\n      return `text-lg xs:text-xl sm:text-2xl lg:text-3xl`;\n\n    case '2xl':\n      return `text-xl xs:text-2xl sm:text-3xl lg:text-4xl`;\n\n    default:\n      return `text-xxs xs:text-xs sm:text-sm lg:text-base`;\n  }\n};\n\nexport function ButtonLink(props) {\n  let {\n    children,\n    as,\n    href\n  } = props;\n  const classes = getButtonClasses(props);\n  const linkProps = pick(props, ['target', 'rel']);\n  return __jsx(Link, {\n    href: href,\n    as: as,\n    scroll: false\n  }, __jsx(\"a\", _extends({}, linkProps, {\n    className: classes,\n    onClick: e => e.stopPropagation()\n  }), children));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/ButtonLink.jsx"],"names":["React","classnames","Link","pick","isUndefined","getButtonClasses","props","border","bg","bold","text","hoverBg","hoverBorder","hoverText","noAnim","padding","rounded","secondary","selected","transition","className","textSize","width","defaultClasses","animClass","getTextSize","defaultPadding","defaultRounded","defaultTrans","defaultBorder","defaultBg","defaultText","defaultHoverBorder","defaultHoverBg","defaultHoverText","size","ButtonLink","children","as","href","classes","linkProps","e","stopPropagation"],"mappings":"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","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport Link from 'next/link'\nimport { pick, isUndefined } from 'lodash'\n\nexport function getButtonClasses(props) {\n  let {\n    border,\n    bg,\n    bold,\n    text,\n    hoverBg,\n    hoverBorder,\n    hoverText,\n    noAnim,\n    padding,\n    rounded,\n    secondary,\n    selected,\n    transition,\n    className,\n    textSize,\n    width,\n  } = props\n\n  let defaultClasses = 'border-2 relative inline-block text-center leading-snug cursor-pointer outline-none focus:outline-none active:outline-none no-underline'\n  let animClass = noAnim ? '' : 'button-scale'\n  \n  if (selected) {\n    defaultClasses += ` opacity-50`\n    animClass = ``\n  }\n  \n  // eg. textSize='sm', textSize='xl'\n  textSize = getTextSize(textSize)\n\n  let defaultPadding = 'px-4 xs:px-6 sm:px-10 lg:px-12 py-2 sm:py-2'\n  let defaultRounded = 'rounded-full'\n  let defaultTrans = 'trans trans-fast'\n\n  let defaultBorder = 'border-highlight-2'\n  let defaultBg = 'bg-transparent'\n  let defaultText = 'text-highlight-2'\n\n  let defaultHoverBorder = 'hover:border-highlight-4'\n  let defaultHoverBg = 'hover:bg-highlight-4'\n  let defaultHoverText = 'hover:text-secondary'\n\n  if (secondary) {\n    defaultBorder = 'border-highlight-2 border-2'\n    defaultBg = 'bg-primary'\n    defaultText = 'text-highlight-2'\n\n    defaultHoverBorder = 'hover:border-highlight-1'\n    defaultHoverBg = 'hover:bg-body'\n    defaultHoverText = 'hover:text-highlight-1'\n  }\n\n  bold = isUndefined(bold) ? 'font-bold' : ''\n\n  padding = padding ? `${padding}` : defaultPadding\n  rounded = rounded ? `rounded-${rounded}` : defaultRounded\n  transition = transition ? `${transition}` : defaultTrans\n  width = width ? `${width}` : ''\n\n  border = border ? `border-${border}` : defaultBorder\n  bg = bg ? `bg-${bg}` : defaultBg\n  text = text ? `text-${text}` : defaultText\n\n  hoverBorder = hoverBorder ? `hover:border-${hoverBorder}` : defaultHoverBorder\n  hoverBg = hoverBg ? `hover:bg-${hoverBg}` : defaultHoverBg\n  hoverText = hoverText ? `hover:text-${hoverText}` : defaultHoverText\n\n  \n  return classnames(\n    className,\n    defaultClasses,\n    animClass,\n    bold,\n    bg,\n    border,\n    padding,\n    rounded,\n    text,\n    hoverBg,\n    hoverBorder,\n    hoverText,\n    textSize,\n    transition,\n    width\n  )\n}\n\nconst getTextSize = (size) => {\n  switch (size) {\n    case 'xxxs':\n      return `text-xxxxs xs:text-xxxs sm:text-xxs lg:text-xs`\n    case 'xxs':\n      return `text-xxxs xs:text-xxs sm:text-xs lg:text-sm`\n    case 'xs':\n      return `text-xxs xs:text-xs sm:text-sm lg:text-base`\n    case 'sm':\n      return `text-xs xs:text-sm sm:text-base lg:text-lg`\n    case 'lg':\n      return `text-sm xs:text-lg sm:text-xl lg:text-2xl`\n    case 'xl':\n      return `text-lg xs:text-xl sm:text-2xl lg:text-3xl`\n    case '2xl':\n      return `text-xl xs:text-2xl sm:text-3xl lg:text-4xl`\n    default:\n      return `text-xxs xs:text-xs sm:text-sm lg:text-base`\n  }\n}\n\nexport function ButtonLink(props) {\n  let {\n    children,\n    as,\n    href,\n  } = props\n\n  const classes = getButtonClasses(props)\n\n  const linkProps = pick(props, [\n    'target',\n    'rel',\n  ])\n  \n  return <Link\n    href={href}\n    as={as}\n    scroll={false}\n  >\n    <a\n      {...linkProps}\n      className={classes}\n      onClick={(e) => e.stopPropagation()}\n    >\n      {children}\n    </a>\n  </Link>\n\n}\n"]},"metadata":{},"sourceType":"module"}