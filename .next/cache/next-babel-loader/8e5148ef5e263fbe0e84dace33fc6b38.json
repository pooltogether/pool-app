{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Onboard from '@pooltogether/bnc-onboard';\nimport { networkNameToChainId } from 'lib/utils/networkNameToChainId';\n\nconst debug = require('debug')('pool-app:initOnboard');\n\nconst INFURA_KEY = process.env.NEXT_JS_INFURA_KEY;\nconst FORTMATIC_KEY = process.env.NEXT_JS_FORTMATIC_PRODUCTION_API_KEY || process.env.NEXT_JS_FORTMATIC_API_KEY;\nconst PORTIS_KEY = process.env.NEXT_JS_PORTIS_API_KEY;\nconst networkName = process.env.NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME;\nconst networkId = networkNameToChainId(networkName);\nconst RPC_URL = networkName && INFURA_KEY ? `https://${networkName}.infura.io/v3/${INFURA_KEY}` : 'http://localhost:8545';\nlet cookieOptions = {\n  sameSite: 'strict'\n};\n\nif (process.env.NEXT_JS_DOMAIN_NAME) {\n  cookieOptions = _objectSpread(_objectSpread({}, cookieOptions), {}, {\n    domain: `.${process.env.NEXT_JS_DOMAIN_NAME}`\n  });\n}\n\nconst APP_NAME = 'PoolTogether';\nconst WALLETS_CONFIG = [{\n  walletName: 'metamask',\n  preferred: true\n}, {\n  walletName: 'coinbase',\n  preferred: true\n}, {\n  walletName: 'trust',\n  preferred: true,\n  rpcUrl: RPC_URL\n}, {\n  walletName: 'trezor',\n  appUrl: 'https://app.pooltogether.com',\n  email: 'hello@pooltogether.com',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'ledger',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'fortmatic',\n  apiKey: FORTMATIC_KEY,\n  preferred: true\n}, {\n  walletName: 'walletConnect',\n  infuraKey: INFURA_KEY,\n  preferred: true\n}, {\n  walletName: 'walletLink',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'imToken',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'dcent'\n}, {\n  walletName: 'huobiwallet',\n  rpcUrl: RPC_URL\n}, {\n  walletName: 'portis',\n  apiKey: PORTIS_KEY\n}, {\n  walletName: 'authereum'\n}, {\n  walletName: 'dapper'\n}, {\n  walletName: 'status'\n}, {\n  walletName: 'torus'\n}, {\n  walletName: 'lattice',\n  rpcUrl: RPC_URL,\n  appName: APP_NAME\n}, {\n  walletName: 'mykey',\n  rpcUrl: RPC_URL\n}, {\n  walletName: 'opera'\n}, {\n  walletName: 'operaTouch'\n}, {\n  walletName: 'web3Wallet'\n}];\nexport const initOnboard = subscriptions => {\n  const onboard = Onboard;\n  debug('RUNNING initOnboard!');\n  return onboard({\n    hideBranding: true,\n    networkId,\n    darkMode: true,\n    subscriptions,\n    walletSelect: {\n      wallets: WALLETS_CONFIG\n    },\n    walletCheck: [{\n      checkName: 'derivationPath'\n    }, {\n      checkName: 'connect'\n    }, {\n      checkName: 'accounts'\n    }, {\n      checkName: 'network'\n    } // { checkName: 'balance' }\n    ]\n  });\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/services/initOnboard.js"],"names":["Onboard","networkNameToChainId","debug","require","INFURA_KEY","process","env","NEXT_JS_INFURA_KEY","FORTMATIC_KEY","NEXT_JS_FORTMATIC_PRODUCTION_API_KEY","NEXT_JS_FORTMATIC_API_KEY","PORTIS_KEY","NEXT_JS_PORTIS_API_KEY","networkName","NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME","networkId","RPC_URL","cookieOptions","sameSite","NEXT_JS_DOMAIN_NAME","domain","APP_NAME","WALLETS_CONFIG","walletName","preferred","rpcUrl","appUrl","email","apiKey","infuraKey","appName","initOnboard","subscriptions","onboard","hideBranding","darkMode","walletSelect","wallets","walletCheck","checkName"],"mappings":"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","sourcesContent":["import Onboard from '@pooltogether/bnc-onboard'\n\nimport { networkNameToChainId } from 'lib/utils/networkNameToChainId'\n\nconst debug = require('debug')('pool-app:initOnboard')\n\nconst INFURA_KEY = process.env.NEXT_JS_INFURA_KEY\nconst FORTMATIC_KEY = process.env.NEXT_JS_FORTMATIC_PRODUCTION_API_KEY || \n  process.env.NEXT_JS_FORTMATIC_API_KEY\nconst PORTIS_KEY = process.env.NEXT_JS_PORTIS_API_KEY\n\nconst networkName = process.env.NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME\nconst networkId = networkNameToChainId(networkName)\nconst RPC_URL = (networkName && INFURA_KEY) ?\n  `https://${networkName}.infura.io/v3/${INFURA_KEY}` :\n  'http://localhost:8545'\n\nlet cookieOptions = { sameSite: 'strict' }\nif (process.env.NEXT_JS_DOMAIN_NAME) {\n  cookieOptions = {\n    ...cookieOptions,\n    domain: `.${process.env.NEXT_JS_DOMAIN_NAME}`\n  }\n}\n\nconst APP_NAME = 'PoolTogether'\n\nconst WALLETS_CONFIG = [\n  { walletName: 'metamask', preferred: true },\n  { walletName: 'coinbase', preferred: true },\n  { walletName: 'trust', preferred: true, rpcUrl: RPC_URL },\n  {\n    walletName: 'trezor',\n    appUrl: 'https://app.pooltogether.com',\n    email: 'hello@pooltogether.com',\n    rpcUrl: RPC_URL,\n    preferred: true\n  },\n  {\n    walletName: 'ledger',\n    rpcUrl: RPC_URL,\n    preferred: true\n  },\n  {\n    walletName: 'fortmatic',\n    apiKey: FORTMATIC_KEY,\n    preferred: true\n  },\n  {\n    walletName: 'walletConnect',\n    infuraKey: INFURA_KEY,\n    preferred: true\n  },\n  {\n    walletName: 'walletLink',\n    rpcUrl: RPC_URL,\n    preferred: true\n  },\n  {\n    walletName: 'imToken',\n    rpcUrl: RPC_URL,\n    preferred: true\n  },\n  { walletName: 'dcent' },\n  {\n    walletName: 'huobiwallet',\n    rpcUrl: RPC_URL\n  },\n  {\n    walletName: 'portis',\n    apiKey: PORTIS_KEY,\n  },\n  { walletName: 'authereum' },\n  { walletName: 'dapper' },\n  { walletName: 'status' },\n  { walletName: 'torus' },\n  {\n    walletName: 'lattice',\n    rpcUrl: RPC_URL,\n    appName: APP_NAME\n  },\n  { walletName: 'mykey', rpcUrl: RPC_URL },\n  { walletName: 'opera' },\n  { walletName: 'operaTouch' },\n  { walletName: 'web3Wallet' },\n]\n\nexport const initOnboard = (subscriptions) => {\n  const onboard = Onboard\n\n  debug('RUNNING initOnboard!')\n\n  return onboard({\n    hideBranding: true,\n    networkId,\n    darkMode: true,\n    subscriptions,\n    walletSelect: {\n      wallets: WALLETS_CONFIG\n    },\n    walletCheck: [\n      { checkName: 'derivationPath' },\n      { checkName: 'connect' },\n      { checkName: 'accounts' },\n      { checkName: 'network' },\n      // { checkName: 'balance' }\n    ]\n  })\n}"]},"metadata":{},"sourceType":"module"}