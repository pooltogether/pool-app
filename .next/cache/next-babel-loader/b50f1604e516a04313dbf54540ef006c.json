{"ast":null,"code":"import gql from 'graphql-tag';\nimport { prizePoolFragment } from 'lib/fragments/prizePoolFragment';\nexport const prizePoolsQuery = number => {\n  const blockFilter = number > 0 ? `, block: { number: ${number} }` : '';\n  return gql`\n    query prizePoolsQuery($poolAddresses: [String!]!) {\n      prizePools(where: { id_in: $poolAddresses } ${blockFilter}) {\n        ...prizePoolFragment\n      }\n    }\n    ${prizePoolFragment}\n  `;\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/queries/prizePoolsQuery.jsx"],"names":["gql","prizePoolFragment","prizePoolsQuery","number","blockFilter"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AACzC,QAAMC,WAAW,GAAGD,MAAM,GAAG,CAAT,GAAc,sBAAqBA,MAAO,IAA1C,GAAgD,EAApE;AAEA,SAAOH,GAAI;;oDAEuCI,WAAY;;;;MAI1DH,iBAAkB;GANtB;AAQD,CAXM","sourcesContent":["import gql from 'graphql-tag'\n\nimport { prizePoolFragment } from 'lib/fragments/prizePoolFragment'\n\nexport const prizePoolsQuery = (number) => {\n  const blockFilter = number > 0 ? `, block: { number: ${number} }` : ''\n\n  return gql`\n    query prizePoolsQuery($poolAddresses: [String!]!) {\n      prizePools(where: { id_in: $poolAddresses } ${blockFilter}) {\n        ...prizePoolFragment\n      }\n    }\n    ${prizePoolFragment}\n  `\n}"]},"metadata":{},"sourceType":"module"}