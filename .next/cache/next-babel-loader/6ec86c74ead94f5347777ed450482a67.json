{"ast":null,"code":"import { request } from 'graphql-request';\nimport { POOLTOGETHER_GRAPH_URIS } from 'lib/constants';\nimport { sponsorQuery } from 'lib/queries/sponsorQuery';\nexport const getSponsorData = async (chainId, sponsorAddress, blockNumber) => {\n  var _data;\n\n  const query = sponsorQuery(blockNumber);\n  const variables = {\n    sponsorAddress\n  };\n  let data;\n\n  try {\n    data = await request(POOLTOGETHER_GRAPH_URIS[chainId], query, variables);\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2));\n  }\n\n  return (_data = data) === null || _data === void 0 ? void 0 : _data.sponsor;\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/fetchers/getSponsorData.js"],"names":["request","POOLTOGETHER_GRAPH_URIS","sponsorQuery","getSponsorData","chainId","sponsorAddress","blockNumber","query","variables","data","error","console","JSON","stringify","undefined","sponsor"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,uBAAT,QAAwC,eAAxC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG,OAAOC,OAAP,EAAgBC,cAAhB,EAAgCC,WAAhC,KAAgD;AAAA;;AAC5E,QAAMC,KAAK,GAAGL,YAAY,CAACI,WAAD,CAA1B;AAEA,QAAME,SAAS,GAAG;AAChBH,IAAAA;AADgB,GAAlB;AAIA,MAAII,IAAJ;;AACA,MAAI;AACFA,IAAAA,IAAI,GAAG,MAAMT,OAAO,CAClBC,uBAAuB,CAACG,OAAD,CADL,EAElBG,KAFkB,EAGlBC,SAHkB,CAApB;AAKD,GAND,CAME,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcE,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsBI,SAAtB,EAAiC,CAAjC,CAAd;AACD;;AAED,kBAAOL,IAAP,0CAAO,MAAMM,OAAb;AACD,CAnBM","sourcesContent":["import { request } from 'graphql-request'\n\nimport { POOLTOGETHER_GRAPH_URIS } from 'lib/constants'\nimport { sponsorQuery } from 'lib/queries/sponsorQuery'\n\nexport const getSponsorData = async (chainId, sponsorAddress, blockNumber) => {\n  const query = sponsorQuery(blockNumber)\n\n  const variables = {\n    sponsorAddress,\n  }\n\n  let data\n  try {\n    data = await request(\n      POOLTOGETHER_GRAPH_URIS[chainId],\n      query,\n      variables\n    )\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2))\n  }\n\n  return data?.sponsor\n}\n"]},"metadata":{},"sourceType":"module"}