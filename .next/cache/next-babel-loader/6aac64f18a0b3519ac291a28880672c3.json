{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport { Trans, useTranslation } from 'lib/../i18n';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { PlayerDataContext } from 'lib/components/contextProviders/PlayerDataContextProvider';\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider';\nimport { ButtonDrawer } from 'lib/components/ButtonDrawer';\nimport { Button } from 'lib/components/Button';\nimport { ErrorsBox } from 'lib/components/ErrorsBox';\nimport { NoMoreTicketsPane } from 'lib/components/NoMoreTicketsPane';\nimport { Odds } from 'lib/components/Odds';\nimport { PaneTitle } from 'lib/components/PaneTitle';\nimport { TextInputGroup } from 'lib/components/TextInputGroup';\nimport { WyreTopUpBalanceDropdown } from 'lib/components/WyreTopUpBalanceDropdown';\nimport { queryParamUpdater } from 'lib/utils/queryParamUpdater';\nimport { numberWithCommas } from 'lib/utils/numberWithCommas';\nimport { usersDataForPool } from 'lib/utils/usersDataForPool';\nconst bn = ethers.utils.bigNumberify;\nexport function DepositTicketQuantityForm(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    balanceJsx,\n    formName,\n    formSubName,\n    iconSrc,\n    nextStep\n  } = props;\n  const router = useRouter();\n  const quantity = router.query.quantity;\n  const {\n    usersAddress\n  } = useContext(AuthControllerContext);\n  const {\n    pool,\n    usersChainData\n  } = useContext(PoolDataContext);\n  const {\n    usersTicketBalance,\n    usersTicketBalanceBN\n  } = useContext(PlayerDataContext);\n  const liquidityCap = (pool === null || pool === void 0 ? void 0 : pool.liquidityCap) ? bn(pool === null || pool === void 0 ? void 0 : pool.liquidityCap) : bn(0);\n  let remainingTickets;\n\n  if (liquidityCap.gt(0)) {\n    remainingTickets = liquidityCap.sub(pool.ticketSupply).div(ethers.constants.WeiPerEther);\n  }\n\n  const ticker = pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralSymbol;\n  const tickerUpcased = ticker === null || ticker === void 0 ? void 0 : ticker.toUpperCase();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState,\n    watch,\n    setValue\n  } = useForm({\n    mode: 'all',\n    reValidateMode: 'onChange'\n  });\n  useEffect(() => {\n    if (quantity) {\n      setValue('quantity', quantity, {\n        shouldValidate: true\n      });\n    }\n  }, []);\n  const watchQuantity = watch('quantity');\n  const {\n    usersTokenBalance\n  } = usersDataForPool(pool, usersChainData);\n\n  const onSubmit = values => {\n    if (formState.isValid) {\n      queryParamUpdater.add(router, {\n        quantity: values.quantity,\n        prevBalance: usersTicketBalanceBN.toString()\n      });\n      nextStep();\n    }\n  };\n\n  const continueButton = __jsx(Button, {\n    textSize: \"lg\",\n    disabled: !formState.isValid,\n    onClick: handleSubmit(onSubmit),\n    className: 'mx-auto'\n  }, t('continue'));\n\n  if (remainingTickets && remainingTickets.lt('1')) {\n    return __jsx(NoMoreTicketsPane, null);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"pane-title\"\n  }, __jsx(PaneTitle, {\n    short: true\n  }, formName), __jsx(\"div\", {\n    className: \"mb-6 -mt-2\"\n  }, __jsx(PaneTitle, {\n    small: true\n  }, formSubName))), balanceJsx && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"mb-12\"\n  }, balanceJsx)), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \"w-full mx-auto\"\n  }, __jsx(TextInputGroup, {\n    unsignedNumber: true,\n    autoFocus: true,\n    id: \"quantity\",\n    name: \"quantity\",\n    register: register,\n    label: t('ticketAmount'),\n    required: t('ticketQuantityRequired'),\n    autoComplete: \"off\",\n    bottomRightLabel: usersAddress && tickerUpcased && __jsx(React.Fragment, null, __jsx(WyreTopUpBalanceDropdown, {\n      label: __jsx(React.Fragment, null, __jsx(Trans, {\n        i18nKey: \"topUpBalance\",\n        defaults: \"<visibleMobile>Buy crypto</visibleMobile><hiddenMobile>Buy more crypto</hiddenMobile>\",\n        components: {\n          visibleMobile: __jsx(\"span\", {\n            className: \"xs:hidden ml-1\"\n          }),\n          hiddenMobile: __jsx(\"span\", {\n            className: \"hidden xs:inline-block ml-1\"\n          })\n        }\n      })),\n      textColor: \"text-default-soft\",\n      hoverTextColor: \"text-highlight-1\",\n      tickerUpcased: tickerUpcased,\n      usersAddress: usersAddress\n    })),\n    rightLabel: usersAddress && tickerUpcased && __jsx(React.Fragment, null, __jsx(\"button\", {\n      type: \"button\",\n      className: \"font-bold inline-flex items-center\",\n      onClick: e => {\n        e.preventDefault();\n        setValue('quantity', usersTokenBalance, {\n          shouldValidate: true\n        });\n      }\n    }, __jsx(\"img\", {\n      src: iconSrc,\n      className: \"mr-2\",\n      style: {\n        maxHeight: 12\n      }\n    }), \" \", numberWithCommas(usersTokenBalance, {\n      precision: 2\n    }), \" \", tickerUpcased))\n  })), __jsx(\"div\", {\n    className: \"mt-2 text-sm text-highlight-1 font-bold mb-2\",\n    style: {\n      minHeight: 24\n    }\n  }, Object.values(errors).length > 0 ? __jsx(React.Fragment, null, __jsx(ErrorsBox, {\n    errors: errors\n  })) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"odds-box\"\n  }, __jsx(Odds, {\n    sayEveryWeek: true,\n    showLabel: true,\n    splitLines: true,\n    pool: pool,\n    usersBalance: usersTicketBalance,\n    additionalQuantity: watchQuantity\n  })))), __jsx(\"div\", {\n    className: \"flex flex-col mx-auto w-full mx-auto items-center justify-center\"\n  }, __jsx(ButtonDrawer, null, continueButton))), remainingTickets && remainingTickets.lt('1000000') && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"mt-4 xs:mt-10 sm:mt-20 p-2 liquidity-cap text-xxs xs:text-xs sm:text-base text-white bg-raspberry border-highlight-7 border-2 rounded-sm\"\n  }, __jsx(\"span\", {\n    className: `text-red font-bold block sm:inline-block text-lg sm:text-base sm:relative`,\n    role: \"img\",\n    \"aria-label\": \"double exclaimation\",\n    style: {\n      top: 1\n    }\n  }, \"\\u203C\"), \" \", t('onlyAmountTicketsRemaining', {\n    amount: numberWithCommas(remainingTickets.toString(), {\n      precision: 0\n    })\n  }), \" \", __jsx(\"span\", {\n    className: `text-red font-bold hidden sm:inline-block sm:relative`,\n    role: \"img\",\n    \"aria-label\": \"double exclaimation\",\n    style: {\n      top: 1\n    }\n  }, \"\\u203C\"))));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/DepositTicketQuantityForm.jsx"],"names":["React","useContext","useEffect","ethers","useForm","useRouter","Trans","useTranslation","AuthControllerContext","PlayerDataContext","PoolDataContext","ButtonDrawer","Button","ErrorsBox","NoMoreTicketsPane","Odds","PaneTitle","TextInputGroup","WyreTopUpBalanceDropdown","queryParamUpdater","numberWithCommas","usersDataForPool","bn","utils","bigNumberify","DepositTicketQuantityForm","props","t","balanceJsx","formName","formSubName","iconSrc","nextStep","router","quantity","query","usersAddress","pool","usersChainData","usersTicketBalance","usersTicketBalanceBN","liquidityCap","remainingTickets","gt","sub","ticketSupply","div","constants","WeiPerEther","ticker","underlyingCollateralSymbol","tickerUpcased","toUpperCase","handleSubmit","register","errors","formState","watch","setValue","mode","reValidateMode","shouldValidate","watchQuantity","usersTokenBalance","onSubmit","values","isValid","add","prevBalance","toString","continueButton","lt","visibleMobile","hiddenMobile","e","preventDefault","maxHeight","precision","minHeight","Object","length","top","amount"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { useForm } from 'react-hook-form'\nimport { useRouter } from 'next/router'\n\nimport { Trans, useTranslation } from 'lib/../i18n'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { PlayerDataContext } from 'lib/components/contextProviders/PlayerDataContextProvider'\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider'\nimport { ButtonDrawer } from 'lib/components/ButtonDrawer'\nimport { Button } from 'lib/components/Button'\nimport { ErrorsBox } from 'lib/components/ErrorsBox'\nimport { NoMoreTicketsPane } from 'lib/components/NoMoreTicketsPane'\nimport { Odds } from 'lib/components/Odds'\nimport { PaneTitle } from 'lib/components/PaneTitle'\nimport { TextInputGroup } from 'lib/components/TextInputGroup'\nimport { WyreTopUpBalanceDropdown } from 'lib/components/WyreTopUpBalanceDropdown'\nimport { queryParamUpdater } from 'lib/utils/queryParamUpdater'\nimport { numberWithCommas } from 'lib/utils/numberWithCommas'\nimport { usersDataForPool } from 'lib/utils/usersDataForPool'\n\nconst bn = ethers.utils.bigNumberify\n\nexport function DepositTicketQuantityForm(props) {\n  const { t } = useTranslation()\n\n  const {\n    balanceJsx,\n    formName,\n    formSubName,\n    iconSrc,\n    nextStep,\n  } = props\n  \n  const router = useRouter()\n  const quantity = router.query.quantity\n\n  const { usersAddress } = useContext(AuthControllerContext)\n  const { pool, usersChainData } = useContext(PoolDataContext)\n  const { usersTicketBalance, usersTicketBalanceBN } = useContext(PlayerDataContext)\n\n  const liquidityCap = pool?.liquidityCap ? bn(pool?.liquidityCap) : bn(0)\n  let remainingTickets\n  if (liquidityCap.gt(0)) {\n    remainingTickets = liquidityCap\n      .sub(pool.ticketSupply).div(ethers.constants.WeiPerEther)\n  }\n\n  const ticker = pool?.underlyingCollateralSymbol\n  const tickerUpcased = ticker?.toUpperCase()\n\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState,\n    watch,\n    setValue\n  } = useForm({\n    mode: 'all',\n    reValidateMode: 'onChange',\n  })\n\n  useEffect(() => {\n    if (quantity) {\n      setValue('quantity', quantity, { shouldValidate: true })\n    }\n  }, [])\n\n  const watchQuantity = watch('quantity')\n\n  const {\n    usersTokenBalance,\n  } = usersDataForPool(pool, usersChainData)\n\n  const onSubmit = (values) => {\n    if (formState.isValid) {\n      queryParamUpdater.add(router, {\n        quantity: values.quantity,\n        prevBalance: usersTicketBalanceBN.toString()\n      })\n\n      nextStep()\n    }\n  }\n\n  const continueButton = <Button\n    textSize='lg'\n    disabled={!formState.isValid}\n    onClick={handleSubmit(onSubmit)}\n    className={'mx-auto'}\n  >\n    {t('continue')}\n  </Button>\n\n  if (remainingTickets && remainingTickets.lt('1')) {\n    return <NoMoreTicketsPane />\n  }\n\n  return <>\n    <div\n      className='pane-title'\n    >\n      <PaneTitle\n        short\n      >\n        {formName}\n      </PaneTitle>\n      <div className='mb-6 -mt-2'>\n        <PaneTitle\n          small\n        >\n          {formSubName}\n        </PaneTitle>\n      </div>\n    </div>\n\n    {balanceJsx && <>\n      <div className='mb-12'>\n        {balanceJsx}\n      </div>\n    </>}\n\n    {/* {poolIsLocked && <>\n      <Modal\n        header={`${tickerUpcased} Pool locked`}\n        visible={true}\n      >\n        <h3>\n          This Pool's prize is currently being awarded - until awarding is complete it can not accept deposits or withdrawals.\n\n          <br/>\n          Show time til unlocked: ...\n        </h3>\n      </Modal>\n    </>} */}\n\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div\n        className='w-full mx-auto'\n      >\n        <TextInputGroup\n          unsignedNumber\n          autoFocus\n          id='quantity'\n          name='quantity'\n          register={register}\n          label={t('ticketAmount')}\n          required={t('ticketQuantityRequired')}\n          autoComplete='off'\n          bottomRightLabel={usersAddress && tickerUpcased && <>\n            <WyreTopUpBalanceDropdown\n              label={<>\n                <Trans\n                  i18nKey='topUpBalance'\n                  defaults='<visibleMobile>Buy crypto</visibleMobile><hiddenMobile>Buy more crypto</hiddenMobile>'\n                  components={{\n                    visibleMobile: <span\n                      className='xs:hidden ml-1'\n                    />,\n                    hiddenMobile: <span\n                      className='hidden xs:inline-block ml-1'\n                    />\n                  }}\n                />\n              </>}\n              textColor='text-default-soft'\n              hoverTextColor='text-highlight-1'\n              tickerUpcased={tickerUpcased}\n              usersAddress={usersAddress}\n            />\n          </>}\n          rightLabel={usersAddress && tickerUpcased && <>\n              <button\n                type='button'\n                className='font-bold inline-flex items-center'\n                onClick={(e) => {\n                  e.preventDefault()\n                  setValue('quantity', usersTokenBalance, { shouldValidate: true })\n                }}\n              >\n                <img\n                  src={iconSrc}\n                  className='mr-2'\n                  style={{ maxHeight: 12 }}\n                /> {numberWithCommas(usersTokenBalance, { precision: 2 })} {tickerUpcased}\n              </button>\n          </>}\n        />\n      </div>\n      <div\n        className='mt-2 text-sm text-highlight-1 font-bold mb-2'\n        style={{\n          minHeight: 24\n        }}\n      >\n        {Object.values(errors).length > 0 ? <>\n          <ErrorsBox\n            errors={errors}\n          />\n        </> : <>\n          <div\n            className='odds-box'\n          >\n            <Odds\n              sayEveryWeek\n              showLabel\n              splitLines\n              pool={pool}\n              usersBalance={usersTicketBalance}\n              additionalQuantity={watchQuantity}\n            />\n          </div>\n        </>}\n      </div>\n\n      \n\n      <div\n        className='flex flex-col mx-auto w-full mx-auto items-center justify-center'\n      >\n        <ButtonDrawer>\n          {continueButton}\n        </ButtonDrawer>\n      </div>\n\n\n    </form>\n\n    {remainingTickets && remainingTickets.lt('1000000') && <>\n      <div\n        className='mt-4 xs:mt-10 sm:mt-20 p-2 liquidity-cap text-xxs xs:text-xs sm:text-base text-white bg-raspberry border-highlight-7 border-2 rounded-sm'\n      >\n        <span\n          className={`text-red font-bold block sm:inline-block text-lg sm:text-base sm:relative`}\n          role='img'\n          aria-label='double exclaimation'\n          style={{\n            top: 1\n          }}\n        >&#x203c;</span> {t('onlyAmountTicketsRemaining', {\n          amount: numberWithCommas(remainingTickets.toString(), { precision: 0 })\n        })} <span\n          className={`text-red font-bold hidden sm:inline-block sm:relative`}\n          role='img'\n          aria-label='double exclaimation'\n          style={{\n            top: 1\n          }}\n        >&#x203c;</span>\n      </div>\n    </>}\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}