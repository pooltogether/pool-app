{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { ethers } from 'ethers';\nimport { useTranslation } from 'lib/../i18n';\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider';\nimport { IndexUILoader } from 'lib/components/IndexUILoader';\nimport { PageTitleAndBreadcrumbs } from 'lib/components/PageTitleAndBreadcrumbs';\nimport { PoolList } from 'lib/components/PoolList';\nimport { Tagline } from 'lib/components/Tagline';\nimport { V2MessageLarge } from 'lib/components/V2MessageLarge';\nimport { normalizeTo18Decimals } from 'lib/utils/normalizeTo18Decimals';\nexport const IndexUI = props => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    loading,\n    pools\n  } = useContext(PoolDataContext);\n  let totalPrizes = ethers.utils.bigNumberify(0);\n  pools === null || pools === void 0 ? void 0 : pools.forEach(_pool => {\n    const decimals = _pool === null || _pool === void 0 ? void 0 : _pool.underlyingCollateralDecimals;\n    const cumulativePrizeAmountsForPool = normalizeTo18Decimals(_pool.prizeAmountUSD, decimals);\n    totalPrizes = totalPrizes.add(cumulativePrizeAmountsForPool);\n  });\n\n  const nope = e => {\n    methodDoesNotExist;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(V2MessageLarge, null), __jsx(PageTitleAndBreadcrumbs, {\n    title: `${t('pools')}`,\n    breadcrumbs: []\n  }), loading ? __jsx(IndexUILoader, null) : __jsx(PoolList, {\n    pools: pools\n  }), __jsx(Tagline, null), __jsx(\"button\", {\n    onClick: nope\n  }, \".\"));\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/IndexUI.jsx"],"names":["React","useContext","ethers","useTranslation","PoolDataContext","IndexUILoader","PageTitleAndBreadcrumbs","PoolList","Tagline","V2MessageLarge","normalizeTo18Decimals","IndexUI","props","t","loading","pools","totalPrizes","utils","bigNumberify","forEach","_pool","decimals","underlyingCollateralDecimals","cumulativePrizeAmountsForPool","prizeAmountUSD","add","nope","e","methodDoesNotExist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,eAAT,QAAgC,yDAAhC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,uBAAT,QAAwC,wCAAxC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AAEA,OAAO,MAAMC,OAAO,GAClBC,KADqB,IAElB;AACH,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AAEA,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBd,UAAU,CAACG,eAAD,CAArC;AAEA,MAAIY,WAAW,GAAGd,MAAM,CAACe,KAAP,CAAaC,YAAb,CAA0B,CAA1B,CAAlB;AACAH,EAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,OAAP,CAAeC,KAAK,IAAI;AACtB,UAAMC,QAAQ,GAAGD,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,4BAAxB;AAEA,UAAMC,6BAA6B,GAAGb,qBAAqB,CACzDU,KAAK,CAACI,cADmD,EAEzDH,QAFyD,CAA3D;AAKAL,IAAAA,WAAW,GAAGA,WAAW,CAACS,GAAZ,CACZF,6BADY,CAAd;AAGD,GAXD;;AAaA,QAAMG,IAAI,GAAIC,CAAD,IAAO;AAClBC,IAAAA,kBAAkB;AACnB,GAFD;;AAIA,SAAO,4BACL,MAAC,cAAD,OADK,EAGL,MAAC,uBAAD;AACE,IAAA,KAAK,EAAG,GAAEf,CAAC,CAAC,OAAD,CAAU,EADvB;AAEE,IAAA,WAAW,EAAE;AAFf,IAHK,EAQJC,OAAO,GACN,MAAC,aAAD,OADM,GAEN,MAAC,QAAD;AACE,IAAA,KAAK,EAAEC;AADT,IAVG,EAeL,MAAC,OAAD,OAfK,EAgBL;AAAQ,IAAA,OAAO,EAAEW;AAAjB,SAhBK,CAAP;AAkBD,CA3CM","sourcesContent":["import React, { useContext } from 'react'\nimport { ethers } from 'ethers'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider'\nimport { IndexUILoader } from 'lib/components/IndexUILoader'\nimport { PageTitleAndBreadcrumbs } from 'lib/components/PageTitleAndBreadcrumbs'\nimport { PoolList } from 'lib/components/PoolList'\nimport { Tagline } from 'lib/components/Tagline'\nimport { V2MessageLarge } from 'lib/components/V2MessageLarge'\nimport { normalizeTo18Decimals } from 'lib/utils/normalizeTo18Decimals'\n\nexport const IndexUI = (\n  props,\n) => {\n  const { t } = useTranslation()\n  \n  const { loading, pools } = useContext(PoolDataContext)\n\n  let totalPrizes = ethers.utils.bigNumberify(0)\n  pools?.forEach(_pool => {\n    const decimals = _pool?.underlyingCollateralDecimals\n\n    const cumulativePrizeAmountsForPool = normalizeTo18Decimals(\n      _pool.prizeAmountUSD,\n      decimals\n    )\n\n    totalPrizes = totalPrizes.add(\n      cumulativePrizeAmountsForPool\n    )\n  })\n\n  const nope = (e) => {\n    methodDoesNotExist\n  }\n\n  return <>\n    <V2MessageLarge />\n\n    <PageTitleAndBreadcrumbs\n      title={`${t('pools')}`}\n      breadcrumbs={[]}\n    />\n\n    {loading ?\n      <IndexUILoader /> :\n      <PoolList\n        pools={pools}\n      />\n    }\n\n    <Tagline />\n    <button onClick={nope}>.</button>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}