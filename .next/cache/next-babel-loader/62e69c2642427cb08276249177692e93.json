{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport FeatherIcon from 'feather-icons-react';\nimport { Menu, MenuList, MenuButton, MenuItem } from '@reach/menu-button';\nexport function DropdownList(props) {\n  const {\n    id,\n    className,\n    current,\n    formatValue,\n    hoverTextColor,\n    label,\n    textColor,\n    values,\n    onValueSet\n  } = props;\n  const {\n    0: currentValue,\n    1: setCurrentValue\n  } = useState(current ? current : '');\n\n  const handleChangeValueClick = newValue => {\n    if (current !== null) {\n      setCurrentValue(newValue);\n    }\n\n    onValueSet(newValue);\n  };\n\n  let valuesArray = [];\n\n  if (typeof values === 'object') {\n    valuesArray = Object.keys(values).map(v => v);\n  }\n\n  const menuItems = valuesArray.map(valueItem => {\n    let value = valueItem;\n    const selected = value === currentValue;\n    return __jsx(MenuItem, {\n      key: `${id}-value-picker-item-${value}`,\n      onSelect: () => {\n        handleChangeValueClick(value);\n      },\n      className: classnames({\n        selected\n      })\n    }, formatValue ? formatValue(value) : value);\n  });\n  const inactiveTextColorClasses = `${textColor} hover:${hoverTextColor}`;\n  const activeTextColorClasses = `${hoverTextColor} hover:${hoverTextColor}`;\n  return __jsx(React.Fragment, null, __jsx(Menu, null, ({\n    isExpanded\n  }) => __jsx(React.Fragment, null, __jsx(MenuButton, {\n    className: classnames(className, 'inline-flex items-center justify-center trans font-bold', {\n      [inactiveTextColorClasses]: !isExpanded,\n      [activeTextColorClasses]: isExpanded\n    })\n  }, label ? label : currentValue, \" \", __jsx(FeatherIcon, {\n    icon: isExpanded ? 'chevron-up' : 'chevron-down',\n    className: \"relative w-4 h-4 inline-block ml-2\",\n    strokeWidth: \"0.15rem\"\n  })), __jsx(MenuList, {\n    className: \"slide-down\"\n  }, menuItems))));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/DropdownList.jsx"],"names":["React","useState","classnames","FeatherIcon","Menu","MenuList","MenuButton","MenuItem","DropdownList","props","id","className","current","formatValue","hoverTextColor","label","textColor","values","onValueSet","currentValue","setCurrentValue","handleChangeValueClick","newValue","valuesArray","Object","keys","map","v","menuItems","valueItem","value","selected","inactiveTextColorClasses","activeTextColorClasses","isExpanded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,QAJF,QAKO,oBALP;AAOA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,MARI;AASJC,IAAAA;AATI,MAUFT,KAVJ;AAYA,QAAM;AAAA,OAACU,YAAD;AAAA,OAAeC;AAAf,MAAkCnB,QAAQ,CAACW,OAAO,GAAGA,OAAH,GAAa,EAArB,CAAhD;;AAEA,QAAMS,sBAAsB,GAAIC,QAAD,IAAc;AAC3C,QAAIV,OAAO,KAAK,IAAhB,EAAsB;AACpBQ,MAAAA,eAAe,CAACE,QAAD,CAAf;AACD;;AACDJ,IAAAA,UAAU,CAACI,QAAD,CAAV;AACD,GALD;;AAOA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgC;AAC9BM,IAAAA,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,GAApB,CAAwBC,CAAC,IAAIA,CAA7B,CAAd;AACD;;AAED,QAAMC,SAAS,GAAGL,WAAW,CAACG,GAAZ,CAAgBG,SAAS,IAAI;AAC7C,QAAIC,KAAK,GAAGD,SAAZ;AAEA,UAAME,QAAQ,GAAGD,KAAK,KAAKX,YAA3B;AAEA,WAAO,MAAC,QAAD;AACL,MAAA,GAAG,EAAG,GAAET,EAAG,sBAAqBoB,KAAM,EADjC;AAEL,MAAA,QAAQ,EAAE,MAAM;AAAET,QAAAA,sBAAsB,CAACS,KAAD,CAAtB;AAA+B,OAF5C;AAGL,MAAA,SAAS,EAAE5B,UAAU,CACnB;AACE6B,QAAAA;AADF,OADmB;AAHhB,OASJlB,WAAW,GAAGA,WAAW,CAACiB,KAAD,CAAd,GAAwBA,KAT/B,CAAP;AAWD,GAhBiB,CAAlB;AAkBA,QAAME,wBAAwB,GAAI,GAAEhB,SAAU,UAASF,cAAe,EAAtE;AACA,QAAMmB,sBAAsB,GAAI,GAAEnB,cAAe,UAASA,cAAe,EAAzE;AAEA,SAAO,4BACL,MAAC,IAAD,QACG,CAAC;AAAEoB,IAAAA;AAAF,GAAD,KACC,4BACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEhC,UAAU,CACnBS,SADmB,EAEnB,yDAFmB,EAGnB;AACE,OAACqB,wBAAD,GAA4B,CAACE,UAD/B;AAEE,OAACD,sBAAD,GAA0BC;AAF5B,KAHmB;AADvB,KAUGnB,KAAK,GAAGA,KAAH,GAAWI,YAVnB,OAUiC,MAAC,WAAD;AAC7B,IAAA,IAAI,EAAEe,UAAU,GAAG,YAAH,GAAkB,cADL;AAE7B,IAAA,SAAS,EAAC,oCAFmB;AAG7B,IAAA,WAAW,EAAC;AAHiB,IAVjC,CADF,EAkBE,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC;AAApB,KACGN,SADH,CAlBF,CAFJ,CADK,CAAP;AA6BD","sourcesContent":["import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport FeatherIcon from 'feather-icons-react'\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from '@reach/menu-button'\n\nexport function DropdownList(props) {\n  const {\n    id,\n    className,\n    current,\n    formatValue,\n    hoverTextColor,\n    label,\n    textColor,\n    values,\n    onValueSet\n  } = props\n\n  const [currentValue, setCurrentValue] = useState(current ? current : '')\n\n  const handleChangeValueClick = (newValue) => {\n    if (current !== null) {\n      setCurrentValue(newValue)\n    }\n    onValueSet(newValue)\n  }\n\n  let valuesArray = []\n  if (typeof values === 'object') {\n    valuesArray = Object.keys(values).map(v => v)\n  }\n\n  const menuItems = valuesArray.map(valueItem => {\n    let value = valueItem\n\n    const selected = value === currentValue\n\n    return <MenuItem\n      key={`${id}-value-picker-item-${value}`}\n      onSelect={() => { handleChangeValueClick(value) }}\n      className={classnames(\n        {\n          selected\n        }\n      )}\n    >\n      {formatValue ? formatValue(value) : value}\n    </MenuItem>\n  })\n\n  const inactiveTextColorClasses = `${textColor} hover:${hoverTextColor}`\n  const activeTextColorClasses = `${hoverTextColor} hover:${hoverTextColor}`\n\n  return <>\n    <Menu>\n      {({ isExpanded }) => (\n        <>\n          <MenuButton\n            className={classnames(\n              className,\n              'inline-flex items-center justify-center trans font-bold',\n              {\n                [inactiveTextColorClasses]: !isExpanded,\n                [activeTextColorClasses]: isExpanded,\n              }\n            )}\n          >\n            {label ? label : currentValue} <FeatherIcon\n              icon={isExpanded ? 'chevron-up' : 'chevron-down'}\n              className='relative w-4 h-4 inline-block ml-2'\n              strokeWidth='0.15rem'\n            />\n          </MenuButton>\n\n          <MenuList className='slide-down'>\n            {menuItems}\n          </MenuList>\n        </>\n      )}\n    </Menu>\n\n  </>\n}"]},"metadata":{},"sourceType":"module"}