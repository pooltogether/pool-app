{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'lib/../i18n';\nimport { ConfirmWithdrawNoFee } from 'lib/components/ConfirmWithdrawNoFee';\nimport { ConfirmWithdrawWithFee } from 'lib/components/ConfirmWithdrawWithFee';\nimport { PaneTitle } from 'lib/components/PaneTitle';\nimport { useExitFees } from 'lib/hooks/useExitFees';\nexport function WithdrawInstant(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var quantity = props.quantity,\n      nextStep = props.nextStep,\n      previousStep = props.previousStep,\n      setTotalWizardSteps = props.setTotalWizardSteps,\n      pool = props.pool;\n\n  var _useExitFees = useExitFees(quantity),\n      exitFees = _useExitFees.exitFees;\n\n  var notEnoughCredit = null;\n\n  if (exitFees && exitFees.exitFee) {\n    notEnoughCredit = exitFees.exitFee.gt(0);\n  }\n\n  useEffect(function () {\n    setTotalWizardSteps(notEnoughCredit ? 4 : 3);\n  }, [notEnoughCredit]);\n  useEffect(function () {\n    if (exitFees === 'error') {\n      poolToast.error('There was an error fetching exit fees');\n      previousStep();\n    }\n  }, [exitFees]);\n  return __jsx(React.Fragment, null, notEnoughCredit === null ? __jsx(React.Fragment, null, __jsx(PaneTitle, null, t('gettingAvailableCredit'))) : notEnoughCredit ? __jsx(ConfirmWithdrawWithFee, {\n    pool: pool,\n    nextStep: nextStep,\n    previousStep: previousStep,\n    exitFees: exitFees\n  }) : __jsx(ConfirmWithdrawNoFee, {\n    nextStep: nextStep,\n    previousStep: previousStep\n  }));\n}\n\n_s(WithdrawInstant, \"VqhFoIZ4TZd8tP3QJI5Jw/N+2sU=\", false, function () {\n  return [useTranslation, useExitFees];\n});\n\n_c = WithdrawInstant;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithdrawInstant\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/WithdrawInstant.jsx"],"names":["React","useEffect","useTranslation","ConfirmWithdrawNoFee","ConfirmWithdrawWithFee","PaneTitle","useExitFees","WithdrawInstant","props","t","quantity","nextStep","previousStep","setTotalWizardSteps","pool","exitFees","notEnoughCredit","exitFee","gt","poolToast","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,SAASC,sBAAT,QAAuC,uCAAvC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA,wBACvBN,cAAc,EADS;AAAA,MAC7BO,CAD6B,mBAC7BA,CAD6B;;AAAA,MAInCC,QAJmC,GASjCF,KATiC,CAInCE,QAJmC;AAAA,MAKnCC,QALmC,GASjCH,KATiC,CAKnCG,QALmC;AAAA,MAMnCC,YANmC,GASjCJ,KATiC,CAMnCI,YANmC;AAAA,MAOnCC,mBAPmC,GASjCL,KATiC,CAOnCK,mBAPmC;AAAA,MAQnCC,IARmC,GASjCN,KATiC,CAQnCM,IARmC;;AAAA,qBAWhBR,WAAW,CAACI,QAAD,CAXK;AAAA,MAW7BK,QAX6B,gBAW7BA,QAX6B;;AAarC,MAAIC,eAAe,GAAG,IAAtB;;AACA,MAAID,QAAQ,IAAIA,QAAQ,CAACE,OAAzB,EAAkC;AAChCD,IAAAA,eAAe,GAAGD,QAAQ,CAACE,OAAT,CAAiBC,EAAjB,CAAoB,CAApB,CAAlB;AACD;;AAEDjB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,mBAAmB,CAACG,eAAe,GAAG,CAAH,GAAO,CAAvB,CAAnB;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,QAAQ,KAAK,OAAjB,EAA0B;AACxBI,MAAAA,SAAS,CAACC,KAAV,CAAgB,uCAAhB;AACAR,MAAAA,YAAY;AACb;AACF,GALQ,EAKN,CAACG,QAAD,CALM,CAAT;AAOA,SAAO,4BACJC,eAAe,KAAK,IAApB,GAA2B,4BAC1B,MAAC,SAAD,QACGP,CAAC,CAAC,wBAAD,CADJ,CAD0B,CAA3B,GAKCO,eAAe,GACb,MAAC,sBAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,QAAQ,EAAEH,QAFZ;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,QAAQ,EAAEG;AAJZ,IADa,GAOb,MAAC,oBAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,YAAY,EAAEC;AAFhB,IAbC,CAAP;AAmBD;;GAhDeL,e;UACAL,c,EAUOI,W;;;KAXPC,e","sourcesContent":["import React, { useEffect } from 'react'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { ConfirmWithdrawNoFee } from 'lib/components/ConfirmWithdrawNoFee'\nimport { ConfirmWithdrawWithFee } from 'lib/components/ConfirmWithdrawWithFee'\nimport { PaneTitle } from 'lib/components/PaneTitle'\nimport { useExitFees } from 'lib/hooks/useExitFees'\n\nexport function WithdrawInstant(props) {\n  const { t } = useTranslation()\n\n  const {\n    quantity,\n    nextStep,\n    previousStep,\n    setTotalWizardSteps,\n    pool,\n  } = props\n\n  const { exitFees } = useExitFees(quantity)\n\n  let notEnoughCredit = null\n  if (exitFees && exitFees.exitFee) {\n    notEnoughCredit = exitFees.exitFee.gt(0)\n  }\n\n  useEffect(() => {\n    setTotalWizardSteps(notEnoughCredit ? 4 : 3)\n  }, [notEnoughCredit])\n\n  useEffect(() => {\n    if (exitFees === 'error') {\n      poolToast.error('There was an error fetching exit fees')\n      previousStep()\n    }\n  }, [exitFees])\n  \n  return <>\n    {notEnoughCredit === null ? <>\n      <PaneTitle>\n        {t('gettingAvailableCredit')}\n      </PaneTitle>\n    </> :\n      notEnoughCredit ?\n        <ConfirmWithdrawWithFee\n          pool={pool}\n          nextStep={nextStep}\n          previousStep={previousStep}\n          exitFees={exitFees}\n        /> :\n        <ConfirmWithdrawNoFee\n          nextStep={nextStep}\n          previousStep={previousStep}\n        />\n    }\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}