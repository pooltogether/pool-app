{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport classnames from 'classnames';\nimport FeatherIcon from 'feather-icons-react';\nimport { Menu, MenuList, MenuButton, MenuItem } from '@reach/menu-button';\nimport { DEFAULT_INPUT_CLASSES } from 'lib/constants';\nexport function DropdownInputGroup(props) {\n  var _optionsArray;\n\n  var id = props.id,\n      className = props.className,\n      current = props.current,\n      setCurrent = props.setCurrent,\n      label = props.label,\n      textColor = props.textColor,\n      hoverTextColor = props.hoverTextColor,\n      options = props.options;\n  var optionsArray = [];\n\n  if (typeof options === 'object') {\n    optionsArray = Object.keys(options).map(function (v) {\n      return v;\n    });\n  }\n\n  var currentValue = current ? current : (_optionsArray = optionsArray) === null || _optionsArray === void 0 ? void 0 : _optionsArray[0];\n\n  var handleChange = function handleChange(newValue) {\n    setCurrent(newValue);\n  };\n\n  var menuItems = optionsArray.map(function (valueItem) {\n    var value = valueItem;\n    var selected = value === currentValue;\n    return __jsx(MenuItem, {\n      key: \"\".concat(id, \"-value-picker-item-\").concat(value),\n      onSelect: function onSelect() {\n        handleChange(value);\n      },\n      className: classnames({\n        selected: selected\n      })\n    }, options[value]);\n  });\n  var inactiveTextColorClasses = \"\".concat(textColor, \" hover:\").concat(hoverTextColor);\n  var activeTextColorClasses = \"\".concat(hoverTextColor, \" hover:\").concat(hoverTextColor);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: id,\n    className: \"fieldset\"\n  }, __jsx(\"div\", {\n    className: \"flex justify-between\"\n  }, __jsx(\"label\", null, label)), __jsx(Menu, null, function (_ref) {\n    var _classnames;\n\n    var isExpanded = _ref.isExpanded;\n    return __jsx(React.Fragment, null, __jsx(MenuButton, {\n      className: classnames('text-xxs xs:text-sm sm:text-xl lg:text-2xl', 'mb-2 lg:mb-2', 'rounded-full', DEFAULT_INPUT_CLASSES, className, (_classnames = {}, _defineProperty(_classnames, inactiveTextColorClasses, !isExpanded), _defineProperty(_classnames, activeTextColorClasses, isExpanded), _classnames))\n    }, __jsx(\"span\", null, options[currentValue]), \" \", __jsx(FeatherIcon, {\n      icon: isExpanded ? 'chevron-up' : 'chevron-down',\n      className: \"relative w-4 h-4 inline-block ml-2\",\n      strokeWidth: \"0.15rem\"\n    })), __jsx(MenuList, {\n      className: \"slide-down\"\n    }, menuItems));\n  })));\n}\n_c = DropdownInputGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownInputGroup\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/DropdownInputGroup.jsx"],"names":["React","classnames","FeatherIcon","Menu","MenuList","MenuButton","MenuItem","DEFAULT_INPUT_CLASSES","DropdownInputGroup","props","id","className","current","setCurrent","label","textColor","hoverTextColor","options","optionsArray","Object","keys","map","v","currentValue","handleChange","newValue","menuItems","valueItem","value","selected","inactiveTextColorClasses","activeTextColorClasses","isExpanded"],"mappings":"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","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport FeatherIcon from 'feather-icons-react'\nimport {\n  Menu,\n  MenuList,\n  MenuButton,\n  MenuItem,\n} from '@reach/menu-button'\n\nimport { DEFAULT_INPUT_CLASSES } from 'lib/constants'\n\nexport function DropdownInputGroup(props) {\n  const {\n    id,\n    className,\n    current,\n    setCurrent,\n    label,\n    textColor,\n    hoverTextColor,\n    options,\n  } = props\n\n  let optionsArray = []\n  if (typeof options === 'object') {\n    optionsArray = Object.keys(options).map(v => v)\n  }\n\n  const currentValue = current ? current : optionsArray?.[0]\n\n  const handleChange = (newValue) => {\n    setCurrent(newValue)\n  }\n\n  const menuItems = optionsArray.map(valueItem => {\n    let value = valueItem\n\n    const selected = value === currentValue\n\n    return <MenuItem\n      key={`${id}-value-picker-item-${value}`}\n      onSelect={() => { handleChange(value) }}\n      className={classnames(\n        {\n          selected\n        }\n      )}\n    >\n      {options[value]}\n    </MenuItem>\n  })\n\n  const inactiveTextColorClasses = `${textColor} hover:${hoverTextColor}`\n  const activeTextColorClasses = `${hoverTextColor} hover:${hoverTextColor}`\n\n  return <>\n    <div\n      id={id}\n      className='fieldset'\n    >\n      <div className='flex justify-between'>\n        <label>\n          {label}\n        </label>\n      </div>\n      <Menu>\n        {({ isExpanded }) => (\n          <>\n            <MenuButton\n              className={classnames(\n                'text-xxs xs:text-sm sm:text-xl lg:text-2xl',\n                'mb-2 lg:mb-2',\n                'rounded-full',\n                DEFAULT_INPUT_CLASSES,\n                className,\n                {\n                  [inactiveTextColorClasses]: !isExpanded,\n                  [activeTextColorClasses]: isExpanded,\n                }\n              )}\n            >\n              <span>{options[currentValue]}</span> <FeatherIcon\n                icon={isExpanded ? 'chevron-up' : 'chevron-down'}\n                className='relative w-4 h-4 inline-block ml-2'\n                strokeWidth='0.15rem'\n              />\n            </MenuButton>\n\n            <MenuList className='slide-down'>\n              {menuItems}\n            </MenuList>\n          </>\n        )}\n      </Menu>\n    </div>\n\n  </>\n}"]},"metadata":{},"sourceType":"module"}