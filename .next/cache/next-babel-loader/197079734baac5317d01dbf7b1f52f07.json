{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Input } from 'lib/components/Input';\nexport const TextInputGroup = props => {\n  const {\n    id,\n    label,\n    disabled,\n    unsignedNumber,\n    unsignedWholeNumber,\n    bottomRightLabel,\n    centerLabel,\n    rightLabel\n  } = props;\n  let {\n    type\n  } = props;\n  let pattern = {};\n\n  if (type === 'email') {\n    pattern = {\n      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: \"invalid email address\"\n    };\n  } else if (unsignedNumber) {\n    type = 'number';\n    pattern = {\n      value: /^\\d*\\.?\\d*$/,\n      message: 'please enter a positive number'\n    };\n  } else if (unsignedWholeNumber) {\n    type = 'number';\n    pattern = {\n      value: /^\\d+$/,\n      message: 'please enter a positive number'\n    };\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"fieldset\"\n  }, __jsx(\"div\", {\n    className: classnames('flex justify-between items-end')\n  }, __jsx(\"label\", {\n    htmlFor: id,\n    className: classnames('mt-0 sm:pr-2 trans', {\n      'sm:pl-8 w-1/2': rightLabel && !centerLabel,\n      'sm:pl-8 w-1/3': rightLabel && centerLabel,\n      'font-bold text-primary cursor-not-allowed': disabled,\n      'font-bold text-default-soft hover:text-default': !disabled\n    })\n  }, label), centerLabel && __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: classnames('mt-0 trans w-1/3 text-center', {\n      'font-bold text-primary cursor-not-allowed': disabled,\n      'font-bold text-default-soft hover:text-default': !disabled\n    })\n  }, centerLabel)), rightLabel && __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: classnames('mt-0 sm:pr-8 sm:pl-2 trans text-right', {\n      'w-1/2': rightLabel && !centerLabel,\n      'w-1/3': rightLabel && centerLabel,\n      'font-bold text-primary cursor-not-allowed': disabled,\n      'font-bold text-default-soft hover:text-default': !disabled\n    })\n  }, rightLabel))), __jsx(Input, _extends({}, props, {\n    pattern: pattern,\n    type: type || 'text'\n  })), bottomRightLabel && __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: classnames('mt-0 sm:pr-8 sm:pl-2 trans w-full text-right font-bold text-default-soft hover:text-default')\n  }, bottomRightLabel))));\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/TextInputGroup.jsx"],"names":["React","classnames","Input","TextInputGroup","props","id","label","disabled","unsignedNumber","unsignedWholeNumber","bottomRightLabel","centerLabel","rightLabel","type","pattern","value","message"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,OAAO,MAAMC,cAAc,GACzBC,KAD4B,IAEzB;AACH,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,cAJI;AAKJC,IAAAA,mBALI;AAMJC,IAAAA,gBANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;AAWA,MAAI;AACFS,IAAAA;AADE,MAEAT,KAFJ;AAIA,MAAIU,OAAO,GAAG,EAAd;;AAEA,MAAID,IAAI,KAAK,OAAb,EAAsB;AACpBC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE,0CADC;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAV;AAID,GALD,MAKO,IAAIR,cAAJ,EAAoB;AACzBK,IAAAA,IAAI,GAAG,QAAP;AACAC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE,aADC;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAV;AAID,GANM,MAMA,IAAIP,mBAAJ,EAAyB;AAC9BI,IAAAA,IAAI,GAAG,QAAP;AACAC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAV;AAID;;AAED,SAAO,4BACL;AACE,IAAA,SAAS,EAAC;AADZ,KAGE;AACE,IAAA,SAAS,EAAEf,UAAU,CACnB,gCADmB;AADvB,KAIE;AACE,IAAA,OAAO,EAAEI,EADX;AAEE,IAAA,SAAS,EAAEJ,UAAU,CACnB,oBADmB,EAEnB;AACE,uBAAiBW,UAAU,IAAI,CAACD,WADlC;AAEE,uBAAiBC,UAAU,IAAID,WAFjC;AAGE,mDAA6CJ,QAH/C;AAIE,wDAAkD,CAACA;AAJrD,KAFmB;AAFvB,KAYGD,KAZH,CAJF,EAmBGK,WAAW,IAAI,4BACd;AACE,IAAA,SAAS,EAAEV,UAAU,CACnB,8BADmB,EAEnB;AACE,mDAA6CM,QAD/C;AAEE,wDAAkD,CAACA;AAFrD,KAFmB;AADvB,KASGI,WATH,CADc,CAnBlB,EAiCGC,UAAU,IAAI,4BACb;AACE,IAAA,SAAS,EAAEX,UAAU,CACnB,uCADmB,EAEnB;AACE,eAASW,UAAU,IAAI,CAACD,WAD1B;AAEE,eAASC,UAAU,IAAID,WAFzB;AAGE,mDAA6CJ,QAH/C;AAIE,wDAAkD,CAACA;AAJrD,KAFmB;AADvB,KAWGK,UAXH,CADa,CAjCjB,CAHF,EAqDE,MAAC,KAAD,eACMR,KADN;AAEE,IAAA,OAAO,EAAEU,OAFX;AAGE,IAAA,IAAI,EAAED,IAAI,IAAI;AAHhB,KArDF,EA2DGH,gBAAgB,IAAI,4BACnB;AACE,IAAA,SAAS,EAAET,UAAU,CACnB,6FADmB;AADvB,KAKGS,gBALH,CADmB,CA3DvB,CADK,CAAP;AAuED,CA9GM","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\n\nimport { Input } from 'lib/components/Input'\n\nexport const TextInputGroup = (\n  props,\n) => {\n  const {\n    id,\n    label,\n    disabled,\n    unsignedNumber,\n    unsignedWholeNumber,\n    bottomRightLabel,\n    centerLabel,\n    rightLabel,\n  } = props\n\n  let {\n    type\n  } = props\n\n  let pattern = {}\n\n  if (type === 'email') {\n    pattern = {\n      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: \"invalid email address\"\n    }\n  } else if (unsignedNumber) {\n    type = 'number'\n    pattern = {\n      value: /^\\d*\\.?\\d*$/,\n      message: 'please enter a positive number'\n    }\n  } else if (unsignedWholeNumber) {\n    type = 'number'\n    pattern = { \n      value: /^\\d+$/,\n      message: 'please enter a positive number'\n    }\n  }\n\n  return <>\n    <div\n      className='fieldset'\n    >\n      <div\n        className={classnames(\n          'flex justify-between items-end',\n        )}>\n        <label\n          htmlFor={id}\n          className={classnames(\n            'mt-0 sm:pr-2 trans',\n            {\n              'sm:pl-8 w-1/2': rightLabel && !centerLabel,\n              'sm:pl-8 w-1/3': rightLabel && centerLabel,\n              'font-bold text-primary cursor-not-allowed': disabled,\n              'font-bold text-default-soft hover:text-default': !disabled,\n            }\n          )}\n        >\n          {label}\n        </label>\n\n        {centerLabel && <>\n          <label\n            className={classnames(\n              'mt-0 trans w-1/3 text-center',\n              {\n                'font-bold text-primary cursor-not-allowed': disabled,\n                'font-bold text-default-soft hover:text-default': !disabled,\n              }\n            )}\n          >\n            {centerLabel}\n          </label>\n        </>}\n\n        {rightLabel && <>\n          <label\n            className={classnames(\n              'mt-0 sm:pr-8 sm:pl-2 trans text-right',\n              {\n                'w-1/2': rightLabel && !centerLabel,\n                'w-1/3': rightLabel && centerLabel,\n                'font-bold text-primary cursor-not-allowed': disabled,\n                'font-bold text-default-soft hover:text-default': !disabled,\n              }\n            )}\n          >\n            {rightLabel}\n          </label>\n        </>}\n      </div>\n\n      <Input\n        {...props}\n        pattern={pattern}\n        type={type || 'text'}\n      />\n\n      {bottomRightLabel && <>\n        <label\n          className={classnames(\n            'mt-0 sm:pr-8 sm:pl-2 trans w-full text-right font-bold text-default-soft hover:text-default',\n          )}\n        >\n          {bottomRightLabel}\n        </label>\n      </>}\n    </div>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}