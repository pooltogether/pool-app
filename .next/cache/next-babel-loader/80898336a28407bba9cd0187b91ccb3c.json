{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { omit } from 'lodash';\nimport { isBrowser } from 'react-device-detect';\nimport { DEFAULT_INPUT_CLASSES } from 'lib/constants';\nexport function Input(props) {\n  let {\n    autoFocus,\n    // placeholder,\n    // handleChange,\n    // value,\n    marginClasses,\n    large,\n    textClasses,\n    roundedClasses,\n    pattern,\n    isError,\n    required,\n    register,\n    validate\n  } = props;\n\n  if (roundedClasses === undefined) {\n    roundedClasses = 'rounded-full';\n  }\n\n  if (marginClasses === undefined) {\n    marginClasses = 'mb-2 lg:mb-2';\n  }\n\n  if (textClasses === undefined) {\n    textClasses = large ? 'font-bold text-3xl sm:text-5xl' : 'text-xxs xs:text-sm sm:text-xl lg:text-2xl';\n  }\n\n  const className = classnames(DEFAULT_INPUT_CLASSES, marginClasses, textClasses, roundedClasses, props.className, {\n    'text-red': isError\n  });\n  const newProps = omit(props, ['label', 'large', 'marginClasses', 'roundedClasses', 'textClasses', 'isError', 'isLight', 'register', 'required', // required is consumed by the register func but we don't want it on the <input />\n  'pattern', 'validate', 'unsignedNumber', 'unsignedWholeNumber', 'centerLabel', 'rightLabel', 'bottomRightLabel']);\n  return __jsx(React.Fragment, null, __jsx(\"input\", _extends({}, newProps, {\n    autoFocus: autoFocus && isBrowser,\n    ref: register({\n      required,\n      pattern,\n      validate\n    }) // rounded-full\n    ,\n    className: classnames(className, 'focus:outline-none pl-6')\n  })));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/Input.jsx"],"names":["React","classnames","omit","isBrowser","DEFAULT_INPUT_CLASSES","Input","props","autoFocus","marginClasses","large","textClasses","roundedClasses","pattern","isError","required","register","validate","undefined","className","newProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,SAASC,qBAAT,QAAsC,eAAtC;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAC3B,MAAI;AACFC,IAAAA,SADE;AAEF;AACA;AACA;AACAC,IAAAA,aALE;AAMFC,IAAAA,KANE;AAOFC,IAAAA,WAPE;AAQFC,IAAAA,cARE;AASFC,IAAAA,OATE;AAUFC,IAAAA,OAVE;AAWFC,IAAAA,QAXE;AAYFC,IAAAA,QAZE;AAaFC,IAAAA;AAbE,MAcAV,KAdJ;;AAgBA,MAAIK,cAAc,KAAKM,SAAvB,EAAkC;AAChCN,IAAAA,cAAc,GAAG,cAAjB;AACD;;AAED,MAAIH,aAAa,KAAKS,SAAtB,EAAiC;AAC/BT,IAAAA,aAAa,GAAG,cAAhB;AACD;;AAED,MAAIE,WAAW,KAAKO,SAApB,EAA+B;AAC7BP,IAAAA,WAAW,GAAGD,KAAK,GAAG,gCAAH,GAAsC,4CAAzD;AACD;;AAED,QAAMS,SAAS,GAAGjB,UAAU,CAC1BG,qBAD0B,EAE1BI,aAF0B,EAG1BE,WAH0B,EAI1BC,cAJ0B,EAK1BL,KAAK,CAACY,SALoB,EAM1B;AACE,gBAAYL;AADd,GAN0B,CAA5B;AAWA,QAAMM,QAAQ,GAAGjB,IAAI,CAACI,KAAD,EAAQ,CAC3B,OAD2B,EAE3B,OAF2B,EAG3B,eAH2B,EAI3B,gBAJ2B,EAK3B,aAL2B,EAM3B,SAN2B,EAO3B,SAP2B,EAQ3B,UAR2B,EAS3B,UAT2B,EASf;AACZ,WAV2B,EAW3B,UAX2B,EAY3B,gBAZ2B,EAa3B,qBAb2B,EAc3B,aAd2B,EAe3B,YAf2B,EAgB3B,kBAhB2B,CAAR,CAArB;AAmBA,SAAO,4BACL,4BACMa,QADN;AAEE,IAAA,SAAS,EAAEZ,SAAS,IAAIJ,SAF1B;AAGE,IAAA,GAAG,EAAEY,QAAQ,CAAC;AACZD,MAAAA,QADY;AAEZF,MAAAA,OAFY;AAGZI,MAAAA;AAHY,KAAD,CAHf,CASE;AATF;AAUE,IAAA,SAAS,EAAEf,UAAU,CACnBiB,SADmB,EAEnB,yBAFmB;AAVvB,KADK,CAAP;AAkBD","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { omit } from 'lodash'\nimport { isBrowser } from 'react-device-detect'\n\nimport { DEFAULT_INPUT_CLASSES } from 'lib/constants'\n\nexport function Input(props) {\n  let {\n    autoFocus,\n    // placeholder,\n    // handleChange,\n    // value,\n    marginClasses,\n    large,\n    textClasses,\n    roundedClasses,\n    pattern,\n    isError,\n    required,\n    register,\n    validate,\n  } = props\n\n  if (roundedClasses === undefined) {\n    roundedClasses = 'rounded-full'\n  }\n\n  if (marginClasses === undefined) {\n    marginClasses = 'mb-2 lg:mb-2'\n  }\n\n  if (textClasses === undefined) {\n    textClasses = large ? 'font-bold text-3xl sm:text-5xl' : 'text-xxs xs:text-sm sm:text-xl lg:text-2xl'\n  }\n\n  const className = classnames(\n    DEFAULT_INPUT_CLASSES,\n    marginClasses,\n    textClasses,\n    roundedClasses,\n    props.className, \n    {\n      'text-red': isError,\n    }\n  )\n\n  const newProps = omit(props, [\n    'label',\n    'large',\n    'marginClasses',\n    'roundedClasses',\n    'textClasses',\n    'isError',\n    'isLight',\n    'register',\n    'required', // required is consumed by the register func but we don't want it on the <input />\n    'pattern',\n    'validate',\n    'unsignedNumber',\n    'unsignedWholeNumber',\n    'centerLabel',\n    'rightLabel',\n    'bottomRightLabel',\n  ])\n\n  return <>\n    <input\n      {...newProps}\n      autoFocus={autoFocus && isBrowser}\n      ref={register({\n        required,\n        pattern,\n        validate\n      })}\n\n      // rounded-full\n      className={classnames(\n        className,\n        'focus:outline-none pl-6',\n      )}\n    />\n\n  </>\n}"]},"metadata":{},"sourceType":"module"}