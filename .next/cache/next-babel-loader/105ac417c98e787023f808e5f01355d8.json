{"ast":null,"code":"import { ethers } from 'ethers';\nimport { batch, contract } from '@pooltogether/etherplex';\nimport PrizePoolAbi from '@pooltogether/pooltogether-contracts/abis/PrizePool';\nimport { readProvider } from 'lib/services/readProvider';\nexport const fetchExitFees = async (networkName, usersAddress, poolAddress, ticketAddress, quantityBN) => {\n  const provider = await readProvider(networkName);\n  const exitFees = {\n    timelockDurationSeconds: ethers.utils.bigNumberify(0),\n    exitFee: ethers.utils.bigNumberify(0)\n  };\n\n  try {\n    const etherplexPrizePoolContract = contract('prizePool', PrizePoolAbi, poolAddress);\n    const values = await batch(provider, etherplexPrizePoolContract // .balanceOfCredit(usersAddress, ticketAddress)\n    .calculateTimelockDuration(usersAddress, ticketAddress, quantityBN).calculateEarlyExitFee(usersAddress, ticketAddress, quantityBN)); // Instant Withdrawal Credit/Fee\n    // exitFees.burnedCredit = values.prizePool.balanceOfCredit[0]\n    // exitFees.balanceOfCredit = values.prizePool.balanceOfCredit[0]\n\n    exitFees.timelockDurationSeconds = values.prizePool.calculateTimelockDuration.durationSeconds;\n    exitFees.exitFee = values.prizePool.calculateEarlyExitFee.exitFee;\n  } catch (e) {\n    console.warn(e.message);\n  } finally {\n    return exitFees;\n  }\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/utils/fetchExitFees.js"],"names":["ethers","batch","contract","PrizePoolAbi","readProvider","fetchExitFees","networkName","usersAddress","poolAddress","ticketAddress","quantityBN","provider","exitFees","timelockDurationSeconds","utils","bigNumberify","exitFee","etherplexPrizePoolContract","values","calculateTimelockDuration","calculateEarlyExitFee","prizePool","durationSeconds","e","console","warn","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,yBAAhC;AAEA,OAAOC,YAAP,MAAyB,qDAAzB;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,OAC3BC,WAD2B,EAE3BC,YAF2B,EAG3BC,WAH2B,EAI3BC,aAJ2B,EAK3BC,UAL2B,KAMxB;AACH,QAAMC,QAAQ,GAAG,MAAMP,YAAY,CAACE,WAAD,CAAnC;AACA,QAAMM,QAAQ,GAAG;AACfC,IAAAA,uBAAuB,EAAEb,MAAM,CAACc,KAAP,CAAaC,YAAb,CAA0B,CAA1B,CADV;AAEfC,IAAAA,OAAO,EAAEhB,MAAM,CAACc,KAAP,CAAaC,YAAb,CAA0B,CAA1B;AAFM,GAAjB;;AAKA,MAAI;AACF,UAAME,0BAA0B,GAAGf,QAAQ,CACzC,WADyC,EAEzCC,YAFyC,EAGzCK,WAHyC,CAA3C;AAMA,UAAMU,MAAM,GAAG,MAAMjB,KAAK,CACxBU,QADwB,EAExBM,0BAA0B,CACxB;AADwB,KAEvBE,yBAFH,CAE6BZ,YAF7B,EAE2CE,aAF3C,EAE0DC,UAF1D,EAGGU,qBAHH,CAGyBb,YAHzB,EAGuCE,aAHvC,EAGsDC,UAHtD,CAFwB,CAA1B,CAPE,CAeF;AACA;AACA;;AACAE,IAAAA,QAAQ,CAACC,uBAAT,GAAmCK,MAAM,CAACG,SAAP,CAAiBF,yBAAjB,CAA2CG,eAA9E;AACAV,IAAAA,QAAQ,CAACI,OAAT,GAAmBE,MAAM,CAACG,SAAP,CAAiBD,qBAAjB,CAAuCJ,OAA1D;AACD,GApBD,CAqBA,OAAOO,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,IAAR,CAAaF,CAAC,CAACG,OAAf;AACD,GAvBD,SAwBQ;AACN,WAAOd,QAAP;AACD;AACF,CAxCM","sourcesContent":["import { ethers } from 'ethers'\nimport { batch, contract } from '@pooltogether/etherplex'\n\nimport PrizePoolAbi from '@pooltogether/pooltogether-contracts/abis/PrizePool'\n\nimport { readProvider } from 'lib/services/readProvider'\n\nexport const fetchExitFees = async (\n  networkName,\n  usersAddress,\n  poolAddress,\n  ticketAddress,\n  quantityBN,\n) => {\n  const provider = await readProvider(networkName)\n  const exitFees = {\n    timelockDurationSeconds: ethers.utils.bigNumberify(0),\n    exitFee: ethers.utils.bigNumberify(0),\n  }\n\n  try {\n    const etherplexPrizePoolContract = contract(\n      'prizePool',\n      PrizePoolAbi,\n      poolAddress\n    )\n\n    const values = await batch(\n      provider,\n      etherplexPrizePoolContract\n        // .balanceOfCredit(usersAddress, ticketAddress)\n        .calculateTimelockDuration(usersAddress, ticketAddress, quantityBN)\n        .calculateEarlyExitFee(usersAddress, ticketAddress, quantityBN)\n    )\n\n    // Instant Withdrawal Credit/Fee\n    // exitFees.burnedCredit = values.prizePool.balanceOfCredit[0]\n    // exitFees.balanceOfCredit = values.prizePool.balanceOfCredit[0]\n    exitFees.timelockDurationSeconds = values.prizePool.calculateTimelockDuration.durationSeconds\n    exitFees.exitFee = values.prizePool.calculateEarlyExitFee.exitFee\n  }\n  catch (e) {\n    console.warn(e.message)\n  }\n  finally {\n    return exitFees\n  }\n}\n"]},"metadata":{},"sourceType":"module"}