{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'lib/../i18n';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { Button } from 'lib/components/Button';\nimport { PTHint } from 'lib/components/PTHint';\nimport PoolTogetherTrophyDetailed from 'assets/images/pooltogether-trophy--detailed.svg';\nexport function SignInForm(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // const { handleSubmit, register, errors, formState } = useForm({ mode: 'onBlur' })\n\n\n  var hideImg = props.hideImg,\n      descriptionClassName = props.descriptionClassName,\n      postSignInCallback = props.postSignInCallback;\n\n  var _useContext = useContext(AuthControllerContext),\n      connectWallet = _useContext.connectWallet; // const onSubmit = (values) => {\n  //   if (formState.isValid) {\n  //     authControllerContext.signInMagic(values.email, postSignInCallback)\n  //   }\n  // }\n\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"text-inverse\"\n  }, !hideImg && __jsx(React.Fragment, null, __jsx(\"img\", {\n    src: PoolTogetherTrophyDetailed,\n    className: \"mx-auto mb-6 w-16 xs:w-1/12\"\n  })), __jsx(\"h5\", {\n    className: descriptionClassName\n  }, t('connectAWalletToManageTicketsAndRewards')), __jsx(Button, {\n    textSize: \"lg\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      connectWallet(postSignInCallback);\n    }\n  }, t('connectWallet')), __jsx(PTHint, {\n    title: \"Ethereum\",\n    className: \"mt-4 mx-auto w-48\",\n    tip: __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"my-2 text-xs sm:text-sm\"\n    }, t('whatIsEthereumOne')), __jsx(\"div\", {\n      className: \"text-xs sm:text-sm\"\n    }, t('whatIsEthereumTwo')))\n  }, __jsx(\"span\", {\n    className: \"font-bold text-caption hidden sm:block w-48\"\n  }, t('whatsAnEthereum')))));\n}\n\n_s(SignInForm, \"d/o6otlE/NOs8Jwlx8zIjfmOXFs=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/SignInForm.jsx"],"names":["React","useContext","useTranslation","AuthControllerContext","Button","PTHint","PoolTogetherTrophyDetailed","SignInForm","props","t","hideImg","descriptionClassName","postSignInCallback","connectWallet","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,OAAOC,0BAAP,MAAuC,iDAAvC;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,wBAClBN,cAAc,EADI;AAAA,MACxBO,CADwB,mBACxBA,CADwB,EAEhC;;;AAFgC,MAK9BC,OAL8B,GAQ5BF,KAR4B,CAK9BE,OAL8B;AAAA,MAM9BC,oBAN8B,GAQ5BH,KAR4B,CAM9BG,oBAN8B;AAAA,MAO9BC,kBAP8B,GAQ5BJ,KAR4B,CAO9BI,kBAP8B;;AAAA,oBAUNX,UAAU,CAACE,qBAAD,CAVJ;AAAA,MAUxBU,aAVwB,eAUxBA,aAVwB,EAYhC;AACA;AACA;AACA;AACA;;;AAEA,SAAO,4BACL;AACE,IAAA,SAAS,EAAC;AADZ,KAGG,CAACH,OAAD,IAAY,4BACX;AACE,IAAA,GAAG,EAAEJ,0BADP;AAEE,IAAA,SAAS,EAAC;AAFZ,IADW,CAHf,EAUE;AACE,IAAA,SAAS,EAAEK;AADb,KAGGF,CAAC,CAAC,yCAAD,CAHJ,CAVF,EAgBE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAC,IADX;AAEE,IAAA,OAAO,EAAE,iBAACK,CAAD,EAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAF,MAAAA,aAAa,CAACD,kBAAD,CAAb;AACD;AALH,KAOGH,CAAC,CAAC,eAAD,CAPJ,CAhBF,EA2BE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAIE,IAAA,GAAG,EAAE,4BACH;AAAK,MAAA,SAAS,EAAC;AAAf,OACGA,CAAC,CAAC,mBAAD,CADJ,CADG,EAIH;AACE,MAAA,SAAS,EAAC;AADZ,OAGGA,CAAC,CAAC,mBAAD,CAHJ,CAJG;AAJP,KAeE;AACE,IAAA,SAAS,EAAC;AADZ,KAGGA,CAAC,CAAC,iBAAD,CAHJ,CAfF,CA3BF,CADK,CAAP;AAqGD;;GAvHeF,U;UACAL,c;;;KADAK,U","sourcesContent":["import React, { useContext } from 'react'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { Button } from 'lib/components/Button'\nimport { PTHint } from 'lib/components/PTHint'\n\nimport PoolTogetherTrophyDetailed from 'assets/images/pooltogether-trophy--detailed.svg'\n\nexport function SignInForm(props) {\n  const { t } = useTranslation()\n  // const { handleSubmit, register, errors, formState } = useForm({ mode: 'onBlur' })\n\n  const {\n    hideImg,\n    descriptionClassName,\n    postSignInCallback\n  } = props\n\n  const { connectWallet } = useContext(AuthControllerContext)\n\n  // const onSubmit = (values) => {\n  //   if (formState.isValid) {\n  //     authControllerContext.signInMagic(values.email, postSignInCallback)\n  //   }\n  // }\n\n  return <>\n    <div\n      className='text-inverse'\n    >\n      {!hideImg && <>\n        <img\n          src={PoolTogetherTrophyDetailed}\n          className='mx-auto mb-6 w-16 xs:w-1/12'\n        />\n      </>}\n\n      <h5\n        className={descriptionClassName}\n      >\n        {t('connectAWalletToManageTicketsAndRewards')}\n      </h5>\n\n      <Button\n        textSize='lg'\n        onClick={(e) => {\n          e.preventDefault()\n          connectWallet(postSignInCallback)\n        }}\n      >\n        {t('connectWallet')}\n      </Button>\n\n\n      <PTHint\n        title='Ethereum'\n        className='mt-4 mx-auto w-48'\n\n        tip={<>\n          <div className='my-2 text-xs sm:text-sm'>\n            {t('whatIsEthereumOne')}\n          </div>\n          <div\n            className='text-xs sm:text-sm'\n          >\n            {t('whatIsEthereumTwo')}\n          </div>\n        </>}\n      >\n        <span\n          className='font-bold text-caption hidden sm:block w-48'\n        >\n          {t('whatsAnEthereum')}\n        </span>\n      </PTHint>\n    </div>\n\n    {/* <div\n      className='font-bold mb-2 py-2 text-xl sm:text-3xl lg:text-5xl text-inverse'\n    >\n      Enter your email address to continue.\n    </div>\n\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div className='w-full mx-auto'>\n        <TextInputGroup\n          id='email'\n          name='email'\n          type='email'\n          register={register}\n          label={'Email address:'}\n          placeholder='Your email'\n          required='Email address required'\n        />\n      </div>\n      <div className='text-red'>\n        {errors.email && errors.email.message}\n      </div>\n\n      <div\n        className='my-5'\n      >\n        <Button\n          textSize='lg'\n          disabled={!formState.isValid}\n          // type='submit'\n        >\n          Continue\n        </Button>\n      </div>\n    </form> \n\n    <div>\n      <button\n        onClick={(e) => {\n          e.preventDefault()\n          connectWallet(postSignInCallback)\n        }}\n        className='font-bold inline mb-2 py-2 text-sm sm:text-base text-primary-soft hover:text-primary trans border-b-2 border-transparent hover:border-secondary'\n      >\n        or connect to MetaMask, etc.\n      </button>\n    </div>\n    */}\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}