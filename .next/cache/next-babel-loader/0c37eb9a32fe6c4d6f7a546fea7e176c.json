{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { DripQueries } from 'lib/components/queryComponents/DripQueries';\nexport function GraphPoolDripQueries(props) {\n  const {\n    children,\n    pools\n  } = props; // TODO!\n  /// hard-coded to just the DAI pool for now since that's all we have at the moment\n\n  const pool = pools === null || pools === void 0 ? void 0 : pools.find(_pool => (_pool === null || _pool === void 0 ? void 0 : _pool.symbol) === 'PT-cDAI');\n\n  if (!pool) {\n    return children({\n      dripDataLoading: null,\n      graphDripData: null\n    });\n  }\n\n  return __jsx(DripQueries, _extends({}, props, {\n    pool: pool\n  }), ({\n    dripDataLoading,\n    graphDripData\n  }) => {\n    return children({\n      dripDataLoading: dripDataLoading || !graphDripData,\n      graphDripData\n    });\n  });\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/queryComponents/GraphPoolDripQueries.jsx"],"names":["React","DripQueries","GraphPoolDripQueries","props","children","pools","pool","find","_pool","symbol","dripDataLoading","graphDripData"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,4CAA5B;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBF,KAA5B,CAD0C,CAG1C;AACA;;AACA,QAAMG,IAAI,GAAGD,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,IAAP,CAAYC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,MAAP,MAAkB,SAAvC,CAAb;;AAEA,MAAI,CAACH,IAAL,EAAW;AACT,WAAOF,QAAQ,CAAC;AACdM,MAAAA,eAAe,EAAE,IADH;AAEdC,MAAAA,aAAa,EAAE;AAFD,KAAD,CAAf;AAID;;AAED,SAAO,MAAC,WAAD,eACDR,KADC;AAEL,IAAA,IAAI,EAAEG;AAFD,MAIJ,CAAC;AACAI,IAAAA,eADA;AAEAC,IAAAA;AAFA,GAAD,KAGK;AACJ,WAAOP,QAAQ,CAAC;AACdM,MAAAA,eAAe,EAAEA,eAAe,IAAI,CAACC,aADvB;AAEdA,MAAAA;AAFc,KAAD,CAAf;AAID,GAZI,CAAP;AAcD","sourcesContent":["import React from 'react'\n\nimport { DripQueries } from 'lib/components/queryComponents/DripQueries'\n\nexport function GraphPoolDripQueries(props) {\n  const { children, pools } = props\n\n  // TODO!\n  /// hard-coded to just the DAI pool for now since that's all we have at the moment\n  const pool = pools?.find(_pool => _pool?.symbol === 'PT-cDAI')\n\n  if (!pool) {\n    return children({\n      dripDataLoading: null,\n      graphDripData: null\n    })\n  }\n\n  return <DripQueries\n    {...props}\n    pool={pool}\n  >\n    {({\n      dripDataLoading,\n      graphDripData,\n    }) => {\n      return children({\n        dripDataLoading: dripDataLoading || !graphDripData,\n        graphDripData,\n      })\n    }}\n  </DripQueries>\n}"]},"metadata":{},"sourceType":"module"}