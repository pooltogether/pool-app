{"ast":null,"code":"import { useQuery } from 'react-query';\nimport { MAINNET_POLLING_INTERVAL, QUERY_KEYS } from 'lib/constants';\nimport { getPlayerData } from 'lib/fetchers/getPlayerData';\nexport function usePlayerQuery(pauseQueries, chainId, playerAddress, blockNumber = -1, error = null) {\n  const refetchInterval = !pauseQueries && blockNumber === -1 ? MAINNET_POLLING_INTERVAL : false;\n  return useQuery([QUERY_KEYS.playerQuery, chainId, playerAddress, blockNumber], async () => {\n    return getPlayerData(chainId, playerAddress, blockNumber);\n  }, {\n    enabled: !pauseQueries && chainId && playerAddress && blockNumber && !error,\n    refetchInterval\n  });\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/usePlayerQuery.js"],"names":["useQuery","MAINNET_POLLING_INTERVAL","QUERY_KEYS","getPlayerData","usePlayerQuery","pauseQueries","chainId","playerAddress","blockNumber","error","refetchInterval","playerQuery","enabled"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,SACEC,wBADF,EAEEC,UAFF,QAGO,eAHP;AAIA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,OAAO,SAASC,cAAT,CAAwBC,YAAxB,EAAsCC,OAAtC,EAA+CC,aAA/C,EAA8DC,WAAW,GAAG,CAAC,CAA7E,EAAgFC,KAAK,GAAG,IAAxF,EAA8F;AACnG,QAAMC,eAAe,GAAG,CAACL,YAAD,IAAkBG,WAAW,KAAK,CAAC,CAAnC,GACtBP,wBADsB,GAEtB,KAFF;AAIA,SAAOD,QAAQ,CACb,CAACE,UAAU,CAACS,WAAZ,EAAyBL,OAAzB,EAAkCC,aAAlC,EAAiDC,WAAjD,CADa,EAEb,YAAY;AAAE,WAAOL,aAAa,CAACG,OAAD,EAAUC,aAAV,EAAyBC,WAAzB,CAApB;AAA2D,GAF5D,EAGb;AACEI,IAAAA,OAAO,EAAE,CAACP,YAAD,IAAiBC,OAAjB,IAA4BC,aAA5B,IAA6CC,WAA7C,IAA4D,CAACC,KADxE;AAEEC,IAAAA;AAFF,GAHa,CAAf;AAQD","sourcesContent":["import { useQuery } from 'react-query'\n\nimport {\n  MAINNET_POLLING_INTERVAL,\n  QUERY_KEYS\n} from 'lib/constants'\nimport { getPlayerData } from 'lib/fetchers/getPlayerData'\n\nexport function usePlayerQuery(pauseQueries, chainId, playerAddress, blockNumber = -1, error = null) {\n  const refetchInterval = !pauseQueries && (blockNumber === -1) ?\n    MAINNET_POLLING_INTERVAL :\n    false\n\n  return useQuery(\n    [QUERY_KEYS.playerQuery, chainId, playerAddress, blockNumber],\n    async () => { return getPlayerData(chainId, playerAddress, blockNumber) },\n    { \n      enabled: !pauseQueries && chainId && playerAddress && blockNumber && !error,\n      refetchInterval\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}