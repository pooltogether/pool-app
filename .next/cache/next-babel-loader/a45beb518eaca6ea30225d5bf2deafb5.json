{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { COOKIE_OPTIONS } from 'lib/constants';\nvar THEME = 'theme';\nexport var ThemeContext = /*#__PURE__*/React.createContext();\nexport function ThemeContextProvider(props) {\n  _s();\n\n  // if (!window) {\n  //   return null\n  // }\n  var _useState = useState('dark'),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  useEffect(function () {\n    var stored = Cookies.get(THEME);\n    var body = document.body;\n    body.classList.add('theme-dark');\n\n    if (true && window.matchMedia) {\n      var setThemeAutomatically = function setThemeAutomatically(newValue) {\n        if (newValue === 'dark') {\n          body.classList.add('theme-dark');\n          body.classList.remove('theme-light');\n          setTheme('dark');\n        } else if (newValue === 'light') {\n          body.classList.add('theme-light');\n          body.classList.remove('theme-dark');\n          setTheme('light');\n        }\n      }; // onLoad\n\n\n      setThemeAutomatically(stored);\n    }\n  }, []);\n\n  var toggleTheme = function toggleTheme(e) {\n    e.preventDefault();\n    var body = document.body;\n\n    if (body.classList.contains('theme-dark')) {\n      body.classList.remove('theme-dark');\n      body.classList.add('theme-light');\n      Cookies.set(THEME, 'light', COOKIE_OPTIONS);\n      setTheme('light');\n    } else {\n      body.classList.remove('theme-light');\n      body.classList.add('theme-dark');\n      Cookies.set(THEME, 'dark', COOKIE_OPTIONS);\n      setTheme('dark');\n    }\n  };\n\n  return __jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    }\n  }, props.children);\n}\n\n_s(ThemeContextProvider, \"D0ekClnfIGVExrH5c3Ka+aWcxxE=\");\n\n_c = ThemeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/contextProviders/ThemeContextProvider.jsx"],"names":["React","useEffect","useState","Cookies","COOKIE_OPTIONS","THEME","ThemeContext","createContext","ThemeContextProvider","props","theme","setTheme","stored","get","body","document","classList","add","window","matchMedia","setThemeAutomatically","newValue","remove","toggleTheme","e","preventDefault","contains","set","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,IAAMC,KAAK,GAAG,OAAd;AAEA,OAAO,IAAMC,YAAY,gBAAGN,KAAK,CAACO,aAAN,EAArB;AAEP,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AAC1C;AACA;AACA;AAH0C,kBAKhBP,QAAQ,CAAC,MAAD,CALQ;AAAA,MAKnCQ,KALmC;AAAA,MAK5BC,QAL4B;;AAO1CV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,MAAM,GAAGT,OAAO,CAACU,GAAR,CAAYR,KAAZ,CAAb;AAEA,QAAMS,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACAA,IAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,YAAnB;;AAEA,QAAI,QAAiCC,MAAM,CAACC,UAA5C,EAAwD;AACtD,UAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,QAAD,EAAc;AAC1C,YAAIA,QAAQ,KAAK,MAAjB,EAAyB;AACvBP,UAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,YAAnB;AACAH,UAAAA,IAAI,CAACE,SAAL,CAAeM,MAAf,CAAsB,aAAtB;AAEAX,UAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,SALD,MAKO,IAAIU,QAAQ,KAAK,OAAjB,EAA0B;AAC/BP,UAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,aAAnB;AACAH,UAAAA,IAAI,CAACE,SAAL,CAAeM,MAAf,CAAsB,YAAtB;AAEAX,UAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,OAZD,CADsD,CAetD;;;AACAS,MAAAA,qBAAqB,CAACR,MAAD,CAArB;AACD;AACF,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BA,MAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAMX,IAAI,GAAGC,QAAQ,CAACD,IAAtB;;AAEA,QAAIA,IAAI,CAACE,SAAL,CAAeU,QAAf,CAAwB,YAAxB,CAAJ,EAA2C;AACzCZ,MAAAA,IAAI,CAACE,SAAL,CAAeM,MAAf,CAAsB,YAAtB;AACAR,MAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,aAAnB;AAEAd,MAAAA,OAAO,CAACwB,GAAR,CACEtB,KADF,EAEE,OAFF,EAGED,cAHF;AAMAO,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,KAXD,MAWO;AACLG,MAAAA,IAAI,CAACE,SAAL,CAAeM,MAAf,CAAsB,aAAtB;AACAR,MAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,YAAnB;AAEAd,MAAAA,OAAO,CAACwB,GAAR,CACEtB,KADF,EAEE,MAFF,EAGED,cAHF;AAMAO,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD;AACF,GA5BD;;AA8BA,SAAO,MAAC,YAAD,CAAc,QAAd;AACL,IAAA,KAAK,EAAE;AACLD,MAAAA,KAAK,EAALA,KADK;AAELa,MAAAA,WAAW,EAAXA;AAFK;AADF,KAMJd,KAAK,CAACmB,QANF,CAAP;AAQD;;GAvEepB,oB;;KAAAA,oB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Cookies from 'js-cookie'\n\nimport { COOKIE_OPTIONS } from 'lib/constants'\n\nconst THEME = 'theme'\n\nexport const ThemeContext = React.createContext()\n\nexport function ThemeContextProvider(props) {\n  // if (!window) {\n  //   return null\n  // }\n\n  const [theme, setTheme] = useState('dark')\n\n  useEffect(() => {\n    let stored = Cookies.get(THEME)\n    \n    const body = document.body\n    body.classList.add('theme-dark')\n\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      const setThemeAutomatically = (newValue) => {\n        if (newValue === 'dark') {\n          body.classList.add('theme-dark')\n          body.classList.remove('theme-light')\n\n          setTheme('dark')\n        } else if (newValue === 'light') {\n          body.classList.add('theme-light')\n          body.classList.remove('theme-dark')\n\n          setTheme('light')\n        }\n      }\n\n      // onLoad\n      setThemeAutomatically(stored)\n    }\n  }, [])\n\n  const toggleTheme = (e) => {\n    e.preventDefault()\n\n    const body = document.body\n\n    if (body.classList.contains('theme-dark')) {\n      body.classList.remove('theme-dark')\n      body.classList.add('theme-light')\n\n      Cookies.set(\n        THEME,\n        'light',\n        COOKIE_OPTIONS\n      )\n\n      setTheme('light')\n    } else {\n      body.classList.remove('theme-light')\n      body.classList.add('theme-dark')\n\n      Cookies.set(\n        THEME,\n        'dark',\n        COOKIE_OPTIONS\n      )\n\n      setTheme('dark')\n    }\n  }\n\n  return <ThemeContext.Provider\n    value={{\n      theme,\n      toggleTheme\n    }}\n  >\n    {props.children}\n  </ThemeContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}