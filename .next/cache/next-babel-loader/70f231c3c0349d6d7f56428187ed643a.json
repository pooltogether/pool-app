{"ast":null,"code":"import { callTransaction } from 'lib/utils/callTransaction';\nimport { createTransaction } from 'lib/services/createTransaction';\nexport var useSendTransaction = function useSendTransaction(txName, transactions, setTransactions) {\n  var sendTx = function sendTx(t, provider, usersAddress, contractAbi, contractAddress, method) {\n    var params = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n    var txId = transactions.length + 1;\n    var newTx = {\n      __typename: 'Transaction',\n      id: txId,\n      name: txName,\n      inWallet: true,\n      method: method,\n      hash: ''\n    };\n    transactions = createTransaction(newTx, transactions, setTransactions);\n    callTransaction(t, transactions, setTransactions, newTx, provider, usersAddress, contractAbi, contractAddress, method, params);\n    return txId;\n  };\n\n  return [sendTx];\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/useSendTransaction.js"],"names":["callTransaction","createTransaction","useSendTransaction","txName","transactions","setTransactions","sendTx","t","provider","usersAddress","contractAbi","contractAddress","method","params","txId","length","newTx","__typename","id","name","inWallet","hash"],"mappings":"AAAA,SAASA,eAAT,QAAgC,2BAAhC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,MAAV,EAAkBC,YAAlB,EAAgCC,eAAhC,EAAiD;AACjF,MAAMC,MAAM,GAAG,SAATA,MAAS,CACbC,CADa,EAEbC,QAFa,EAGbC,YAHa,EAIbC,WAJa,EAKbC,eALa,EAMbC,MANa,EAQV;AAAA,QADHC,MACG,uEADM,EACN;AACH,QAAMC,IAAI,GAAGV,YAAY,CAACW,MAAb,GAAsB,CAAnC;AAEA,QAAIC,KAAK,GAAG;AACVC,MAAAA,UAAU,EAAE,aADF;AAEVC,MAAAA,EAAE,EAAEJ,IAFM;AAGVK,MAAAA,IAAI,EAAEhB,MAHI;AAIViB,MAAAA,QAAQ,EAAE,IAJA;AAKVR,MAAAA,MAAM,EAANA,MALU;AAMVS,MAAAA,IAAI,EAAE;AANI,KAAZ;AASAjB,IAAAA,YAAY,GAAGH,iBAAiB,CAACe,KAAD,EAAQZ,YAAR,EAAsBC,eAAtB,CAAhC;AAEAL,IAAAA,eAAe,CACbO,CADa,EAEbH,YAFa,EAGbC,eAHa,EAIbW,KAJa,EAKbR,QALa,EAMbC,YANa,EAObC,WAPa,EAQbC,eARa,EASbC,MATa,EAUbC,MAVa,CAAf;AAaA,WAAOC,IAAP;AACD,GApCD;;AAsCA,SAAO,CAACR,MAAD,CAAP;AACD,CAxCM","sourcesContent":["import { callTransaction } from 'lib/utils/callTransaction'\nimport { createTransaction } from 'lib/services/createTransaction'\n\nexport const useSendTransaction = function (txName, transactions, setTransactions) {\n  const sendTx = (\n    t,\n    provider,\n    usersAddress,\n    contractAbi,\n    contractAddress,\n    method,\n    params = []\n  ) => {\n    const txId = transactions.length + 1\n\n    let newTx = {\n      __typename: 'Transaction',\n      id: txId,\n      name: txName,\n      inWallet: true,\n      method,\n      hash: '',\n    }\n\n    transactions = createTransaction(newTx, transactions, setTransactions)\n\n    callTransaction(\n      t,\n      transactions,\n      setTransactions,\n      newTx,\n      provider,\n      usersAddress,\n      contractAbi,\n      contractAddress,\n      method,\n      params,\n    )\n\n    return txId\n  }\n\n  return [sendTx]\n}\n"]},"metadata":{},"sourceType":"module"}