{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport classnames from 'classnames';\nimport Link from 'next/link';\nimport { pick, isUndefined } from 'lodash';\nexport function getButtonClasses(props) {\n  var border = props.border,\n      bg = props.bg,\n      bold = props.bold,\n      text = props.text,\n      hoverBg = props.hoverBg,\n      hoverBorder = props.hoverBorder,\n      hoverText = props.hoverText,\n      noAnim = props.noAnim,\n      padding = props.padding,\n      rounded = props.rounded,\n      secondary = props.secondary,\n      selected = props.selected,\n      transition = props.transition,\n      className = props.className,\n      textSize = props.textSize,\n      width = props.width;\n  var defaultClasses = 'border-2 relative inline-block text-center leading-snug cursor-pointer outline-none focus:outline-none active:outline-none no-underline';\n  var animClass = noAnim ? '' : 'button-scale';\n\n  if (selected) {\n    defaultClasses += \" opacity-50\";\n    animClass = \"\";\n  } // eg. textSize='sm', textSize='xl'\n\n\n  textSize = getTextSize(textSize);\n  var defaultPadding = 'px-4 xs:px-6 sm:px-10 lg:px-12 py-2 sm:py-2';\n  var defaultRounded = 'rounded-full';\n  var defaultTrans = 'trans trans-fast';\n  var defaultBorder = 'border-highlight-2';\n  var defaultBg = 'bg-transparent';\n  var defaultText = 'text-highlight-2';\n  var defaultHoverBorder = 'hover:border-highlight-4';\n  var defaultHoverBg = 'hover:bg-highlight-4';\n  var defaultHoverText = 'hover:text-secondary';\n\n  if (secondary) {\n    defaultBorder = 'border-highlight-2 border-2';\n    defaultBg = 'bg-primary';\n    defaultText = 'text-highlight-2';\n    defaultHoverBorder = 'hover:border-highlight-1';\n    defaultHoverBg = 'hover:bg-body';\n    defaultHoverText = 'hover:text-highlight-1';\n  }\n\n  bold = isUndefined(bold) ? 'font-bold' : '';\n  padding = padding ? \"\".concat(padding) : defaultPadding;\n  rounded = rounded ? \"rounded-\".concat(rounded) : defaultRounded;\n  transition = transition ? \"\".concat(transition) : defaultTrans;\n  width = width ? \"\".concat(width) : '';\n  border = border ? \"border-\".concat(border) : defaultBorder;\n  bg = bg ? \"bg-\".concat(bg) : defaultBg;\n  text = text ? \"text-\".concat(text) : defaultText;\n  hoverBorder = hoverBorder ? \"hover:border-\".concat(hoverBorder) : defaultHoverBorder;\n  hoverBg = hoverBg ? \"hover:bg-\".concat(hoverBg) : defaultHoverBg;\n  hoverText = hoverText ? \"hover:text-\".concat(hoverText) : defaultHoverText;\n  return classnames(className, defaultClasses, animClass, bold, bg, border, padding, rounded, text, hoverBg, hoverBorder, hoverText, textSize, transition, width);\n}\n\nvar getTextSize = function getTextSize(size) {\n  switch (size) {\n    case 'xxxs':\n      return \"text-xxxxs xs:text-xxxs sm:text-xxs lg:text-xs\";\n\n    case 'xxs':\n      return \"text-xxxs xs:text-xxs sm:text-xs lg:text-sm\";\n\n    case 'xs':\n      return \"text-xxs xs:text-xs sm:text-sm lg:text-base\";\n\n    case 'sm':\n      return \"text-xs xs:text-sm sm:text-base lg:text-lg\";\n\n    case 'lg':\n      return \"text-sm xs:text-lg sm:text-xl lg:text-2xl\";\n\n    case 'xl':\n      return \"text-lg xs:text-xl sm:text-2xl lg:text-3xl\";\n\n    case '2xl':\n      return \"text-xl xs:text-2xl sm:text-3xl lg:text-4xl\";\n\n    default:\n      return \"text-xxs xs:text-xs sm:text-sm lg:text-base\";\n  }\n};\n\nexport function ButtonLink(props) {\n  var children = props.children,\n      as = props.as,\n      href = props.href;\n  var classes = getButtonClasses(props);\n  var linkProps = pick(props, ['target', 'rel']);\n  return __jsx(Link, {\n    href: href,\n    as: as,\n    scroll: false\n  }, __jsx(\"a\", _extends({}, linkProps, {\n    className: classes,\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    }\n  }), children));\n}\n_c = ButtonLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonLink\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/ButtonLink.jsx"],"names":["React","classnames","Link","pick","isUndefined","getButtonClasses","props","border","bg","bold","text","hoverBg","hoverBorder","hoverText","noAnim","padding","rounded","secondary","selected","transition","className","textSize","width","defaultClasses","animClass","getTextSize","defaultPadding","defaultRounded","defaultTrans","defaultBorder","defaultBg","defaultText","defaultHoverBorder","defaultHoverBg","defaultHoverText","size","ButtonLink","children","as","href","classes","linkProps","e","stopPropagation"],"mappings":"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","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport Link from 'next/link'\nimport { pick, isUndefined } from 'lodash'\n\nexport function getButtonClasses(props) {\n  let {\n    border,\n    bg,\n    bold,\n    text,\n    hoverBg,\n    hoverBorder,\n    hoverText,\n    noAnim,\n    padding,\n    rounded,\n    secondary,\n    selected,\n    transition,\n    className,\n    textSize,\n    width,\n  } = props\n\n  let defaultClasses = 'border-2 relative inline-block text-center leading-snug cursor-pointer outline-none focus:outline-none active:outline-none no-underline'\n  let animClass = noAnim ? '' : 'button-scale'\n  \n  if (selected) {\n    defaultClasses += ` opacity-50`\n    animClass = ``\n  }\n  \n  // eg. textSize='sm', textSize='xl'\n  textSize = getTextSize(textSize)\n\n  let defaultPadding = 'px-4 xs:px-6 sm:px-10 lg:px-12 py-2 sm:py-2'\n  let defaultRounded = 'rounded-full'\n  let defaultTrans = 'trans trans-fast'\n\n  let defaultBorder = 'border-highlight-2'\n  let defaultBg = 'bg-transparent'\n  let defaultText = 'text-highlight-2'\n\n  let defaultHoverBorder = 'hover:border-highlight-4'\n  let defaultHoverBg = 'hover:bg-highlight-4'\n  let defaultHoverText = 'hover:text-secondary'\n\n  if (secondary) {\n    defaultBorder = 'border-highlight-2 border-2'\n    defaultBg = 'bg-primary'\n    defaultText = 'text-highlight-2'\n\n    defaultHoverBorder = 'hover:border-highlight-1'\n    defaultHoverBg = 'hover:bg-body'\n    defaultHoverText = 'hover:text-highlight-1'\n  }\n\n  bold = isUndefined(bold) ? 'font-bold' : ''\n\n  padding = padding ? `${padding}` : defaultPadding\n  rounded = rounded ? `rounded-${rounded}` : defaultRounded\n  transition = transition ? `${transition}` : defaultTrans\n  width = width ? `${width}` : ''\n\n  border = border ? `border-${border}` : defaultBorder\n  bg = bg ? `bg-${bg}` : defaultBg\n  text = text ? `text-${text}` : defaultText\n\n  hoverBorder = hoverBorder ? `hover:border-${hoverBorder}` : defaultHoverBorder\n  hoverBg = hoverBg ? `hover:bg-${hoverBg}` : defaultHoverBg\n  hoverText = hoverText ? `hover:text-${hoverText}` : defaultHoverText\n\n  \n  return classnames(\n    className,\n    defaultClasses,\n    animClass,\n    bold,\n    bg,\n    border,\n    padding,\n    rounded,\n    text,\n    hoverBg,\n    hoverBorder,\n    hoverText,\n    textSize,\n    transition,\n    width\n  )\n}\n\nconst getTextSize = (size) => {\n  switch (size) {\n    case 'xxxs':\n      return `text-xxxxs xs:text-xxxs sm:text-xxs lg:text-xs`\n    case 'xxs':\n      return `text-xxxs xs:text-xxs sm:text-xs lg:text-sm`\n    case 'xs':\n      return `text-xxs xs:text-xs sm:text-sm lg:text-base`\n    case 'sm':\n      return `text-xs xs:text-sm sm:text-base lg:text-lg`\n    case 'lg':\n      return `text-sm xs:text-lg sm:text-xl lg:text-2xl`\n    case 'xl':\n      return `text-lg xs:text-xl sm:text-2xl lg:text-3xl`\n    case '2xl':\n      return `text-xl xs:text-2xl sm:text-3xl lg:text-4xl`\n    default:\n      return `text-xxs xs:text-xs sm:text-sm lg:text-base`\n  }\n}\n\nexport function ButtonLink(props) {\n  let {\n    children,\n    as,\n    href,\n  } = props\n\n  const classes = getButtonClasses(props)\n\n  const linkProps = pick(props, [\n    'target',\n    'rel',\n  ])\n  \n  return <Link\n    href={href}\n    as={as}\n    scroll={false}\n  >\n    <a\n      {...linkProps}\n      className={classes}\n      onClick={(e) => e.stopPropagation()}\n    >\n      {children}\n    </a>\n  </Link>\n\n}\n"]},"metadata":{},"sourceType":"module"}