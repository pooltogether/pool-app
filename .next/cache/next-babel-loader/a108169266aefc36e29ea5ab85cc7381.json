{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\n\nconst {\n  getProfile\n} = require('3box/lib/api');\n\nconst isValidImage = image => {\n  if (image && image[0] && image[0].contentUrl) {\n    return true;\n  }\n\n  return false;\n};\n\nexport function ProfileAvatar(props) {\n  const {\n    xl\n  } = props;\n  const {\n    0: profile,\n    1: setProfile\n  } = useState();\n  const {\n    usersAddress\n  } = useContext(AuthControllerContext);\n  const diameter = xl ? 40 : 20;\n  useEffect(() => {\n    const get3BoxProfile = async () => {\n      const boxProfile = await getProfile(usersAddress);\n      setProfile(boxProfile);\n    };\n\n    if (usersAddress) {\n      get3BoxProfile();\n    }\n  }, [usersAddress]);\n\n  if (!usersAddress) {\n    return null;\n  }\n\n  const image = profile && isValidImage(profile.image) ? __jsx(\"img\", {\n    alt: \"profile avatar\",\n    src: `https://ipfs.infura.io/ipfs/${profile.image[0].contentUrl['/']}`,\n    className: classnames('profile-img relative inline-block rounded-full mr-1', {\n      'w-6 h-6': !xl,\n      'w-12 h-12': xl\n    })\n  }) : __jsx(\"div\", {\n    className: \"profile-img profile-img--jazzicon relative inline-block ml-2 xs:ml-0 mr-2\"\n  }, __jsx(Jazzicon, {\n    diameter: diameter,\n    seed: jsNumberForAddress(usersAddress)\n  }));\n  return image;\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/ProfileAvatar.jsx"],"names":["React","useContext","useState","useEffect","classnames","Jazzicon","jsNumberForAddress","AuthControllerContext","getProfile","require","isValidImage","image","contentUrl","ProfileAvatar","props","xl","profile","setProfile","usersAddress","diameter","get3BoxProfile","boxProfile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,IAAmBC,kBAAnB,QAA6C,gBAA7C;AAEA,SAASC,qBAAT,QAAsC,+DAAtC;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAiBC,OAAO,CAAC,cAAD,CAA9B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,MAAIA,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAAL,CAASC,UAAlC,EAA8C;AAC5C,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAND;;AAQA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAf;AAEA,QAAM;AAAA,OAACE,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,EAAtC;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAmBjB,UAAU,CAACM,qBAAD,CAAnC;AAEA,QAAMY,QAAQ,GAAGJ,EAAE,GAAG,EAAH,GAAQ,EAA3B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,cAAc,GAAG,YAAY;AACjC,YAAMC,UAAU,GAAG,MAAMb,UAAU,CAACU,YAAD,CAAnC;AACAD,MAAAA,UAAU,CAACI,UAAD,CAAV;AACD,KAHD;;AAKA,QAAIH,YAAJ,EAAkB;AAChBE,MAAAA,cAAc;AACf;AACF,GATQ,EASN,CAACF,YAAD,CATM,CAAT;;AAYA,MAAI,CAACA,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,QAAMP,KAAK,GAAIK,OAAO,IAAIN,YAAY,CAACM,OAAO,CAACL,KAAT,CAAxB,GACZ;AACE,IAAA,GAAG,EAAC,gBADN;AAEE,IAAA,GAAG,EAAG,+BAA8BK,OAAO,CAACL,KAAR,CAAc,CAAd,EAAiBC,UAAjB,CAA4B,GAA5B,CAAiC,EAFvE;AAGE,IAAA,SAAS,EAAER,UAAU,CACnB,qDADmB,EAEnB;AACE,iBAAW,CAACW,EADd;AAEE,mBAAaA;AAFf,KAFmB;AAHvB,IADY,GAYZ;AACE,IAAA,SAAS,EAAC;AADZ,KAGE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEI,QADZ;AAEE,IAAA,IAAI,EAAEb,kBAAkB,CAACY,YAAD;AAF1B,IAHF,CAZF;AAqBA,SAAOP,KAAP;AACD","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport classnames from 'classnames'\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\n\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\n\nconst { getProfile } = require('3box/lib/api')\n\nconst isValidImage = (image) => {\n  if (image && image[0] && image[0].contentUrl) {\n    return true\n  }\n\n  return false\n}\n\nexport function ProfileAvatar(props) {\n  const { xl } = props\n\n  const [profile, setProfile] = useState()\n\n  const { usersAddress } = useContext(AuthControllerContext)\n\n  const diameter = xl ? 40 : 20\n\n  useEffect(() => {\n    const get3BoxProfile = async () => {\n      const boxProfile = await getProfile(usersAddress)\n      setProfile(boxProfile)\n    }\n\n    if (usersAddress) {\n      get3BoxProfile()\n    }\n  }, [usersAddress])\n\n\n  if (!usersAddress) {\n    return null\n  }\n\n  const image = (profile && isValidImage(profile.image)) ?\n    <img\n      alt='profile avatar'\n      src={`https://ipfs.infura.io/ipfs/${profile.image[0].contentUrl['/']}`}\n      className={classnames(\n        'profile-img relative inline-block rounded-full mr-1',\n        {\n          'w-6 h-6': !xl,\n          'w-12 h-12': xl,\n        }\n      )}\n    /> :\n    <div\n      className='profile-img profile-img--jazzicon relative inline-block ml-2 xs:ml-0 mr-2'\n    >\n      <Jazzicon\n        diameter={diameter}\n        seed={jsNumberForAddress(usersAddress)}\n      />\n    </div>\n\n  return image\n}\n"]},"metadata":{},"sourceType":"module"}