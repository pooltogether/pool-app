{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport classnames from 'classnames';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { chainIdToNetworkName } from 'lib/utils/chainIdToNetworkName';\nimport { networkTextColorClassname } from 'lib/utils/networkColorClassnames';\nexport function NetworkText(props) {\n  _s();\n\n  var openTransactions = props.openTransactions;\n\n  var _useContext = useContext(AuthControllerContext),\n      supportedNetwork = _useContext.supportedNetwork,\n      chainId = _useContext.chainId;\n\n  var networkName = null;\n\n  if (chainId && supportedNetwork) {\n    networkName = chainIdToNetworkName(chainId);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: openTransactions,\n    className: classnames('font-bold tracking-wide flex items-center capitalize trans trans-fast', \"bg-default hover:bg-body text-\".concat(networkTextColorClassname(chainId), \" hover:text-inverse border-2 border-accent-4 hover:border-primary\"), 'text-xxs sm:text-xs pl-2 xs:pl-10 pr-2 rounded-full ml-2 xs:-ml-8 h-8')\n  }, networkName));\n}\n\n_s(NetworkText, \"VMRgbOGm9gtSyMWRXthPUXkWz+A=\");\n\n_c = NetworkText;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetworkText\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/NetworkText.jsx"],"names":["React","useContext","classnames","AuthControllerContext","chainIdToNetworkName","networkTextColorClassname","NetworkText","props","openTransactions","supportedNetwork","chainId","networkName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,yBAAT,QAA0C,kCAA1C;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,MACzBC,gBADyB,GACJD,KADI,CACzBC,gBADyB;;AAAA,oBAGKP,UAAU,CAACE,qBAAD,CAHf;AAAA,MAGzBM,gBAHyB,eAGzBA,gBAHyB;AAAA,MAGPC,OAHO,eAGPA,OAHO;;AAKjC,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAID,OAAO,IAAID,gBAAf,EAAiC;AAC/BE,IAAAA,WAAW,GAAGP,oBAAoB,CAACM,OAAD,CAAlC;AACD;;AAED,SAAO,4BACL;AACE,IAAA,OAAO,EAAEF,gBADX;AAEE,IAAA,SAAS,EAAEN,UAAU,CACnB,uEADmB,0CAEcG,yBAAyB,CAACK,OAAD,CAFvC,wEAGnB,uEAHmB;AAFvB,KAQGC,WARH,CADK,CAAP;AAYD;;GAtBeL,W;;KAAAA,W","sourcesContent":["import React, { useContext } from 'react'\nimport classnames from 'classnames'\n\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { chainIdToNetworkName } from 'lib/utils/chainIdToNetworkName'\nimport { networkTextColorClassname } from 'lib/utils/networkColorClassnames'\n\nexport function NetworkText(props) {\n  const { openTransactions } = props\n\n  const { supportedNetwork, chainId } = useContext(AuthControllerContext)\n\n  let networkName = null\n  if (chainId && supportedNetwork) {\n    networkName = chainIdToNetworkName(chainId)\n  }\n\n  return <>\n    <button\n      onClick={openTransactions}\n      className={classnames(\n        'font-bold tracking-wide flex items-center capitalize trans trans-fast',\n        `bg-default hover:bg-body text-${networkTextColorClassname(chainId)} hover:text-inverse border-2 border-accent-4 hover:border-primary`,\n        'text-xxs sm:text-xs pl-2 xs:pl-10 pr-2 rounded-full ml-2 xs:-ml-8 h-8',\n      )}\n    >\n      {networkName}\n    </button>\n  </>\n}"]},"metadata":{},"sourceType":"module"}