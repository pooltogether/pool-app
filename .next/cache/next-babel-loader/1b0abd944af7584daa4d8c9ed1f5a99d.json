{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { ethers } from 'ethers';\nimport { STORED_CHAIN_ID_KEY, COOKIE_OPTIONS, SELECTED_WALLET_COOKIE_KEY } from 'lib/constants';\nimport { MagicContext } from 'lib/components/contextProviders/MagicContextProvider';\n\nvar debug = require('debug')('WalletContextProvider');\n\nvar provider;\nexport var WalletContext = /*#__PURE__*/React.createContext();\nexport function WalletContextProvider(props) {\n  _s();\n\n  var children = props.children,\n      postConnectCallback = props.postConnectCallback;\n\n  var _useState = useState(null),\n      address = _useState[0],\n      setAddress = _useState[1];\n\n  var _useState2 = useState(null),\n      network = _useState2[0],\n      setNetwork = _useState2[1];\n\n  var _useState3 = useState(null),\n      balance = _useState3[0],\n      setBalance = _useState3[1];\n\n  var _useState4 = useState({}),\n      wallet = _useState4[0],\n      setWallet = _useState4[1];\n\n  var _useState5 = useState(null),\n      onboard = _useState5[0],\n      setOnboard = _useState5[1];\n\n  var _useContext = useContext(MagicContext),\n      magic = _useContext.magic;\n\n  var disconnectWallet = function disconnectWallet() {\n    if (onboard) {\n      onboard.walletReset();\n    } else {\n      console.log('no onboard?');\n    }\n\n    Cookies.remove(STORED_CHAIN_ID_KEY, COOKIE_OPTIONS);\n    Cookies.remove(SELECTED_WALLET_COOKIE_KEY, COOKIE_OPTIONS);\n  };\n\n  var getOnboard = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var initOnboardModule;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!onboard) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", onboard);\n\n            case 2:\n              _context.next = 4;\n              return import('lib/services/initOnboard');\n\n            case 4:\n              initOnboardModule = _context.sent;\n              return _context.abrupt(\"return\", initOnboardModule.initOnboard({\n                address: setAddress,\n                network: setNetwork,\n                balance: setBalance,\n                wallet: function wallet(_wallet) {\n                  if (_wallet.provider) {\n                    if (magic) {\n                      magicContext.signOut();\n                    }\n\n                    setWallet(_wallet);\n                    Cookies.set(SELECTED_WALLET_COOKIE_KEY, _wallet.name, COOKIE_OPTIONS);\n                    provider = new ethers.providers.Web3Provider(_wallet.provider); // postConnectCallback()\n                  } else {\n                    provider = null;\n                    setWallet({});\n                    Cookies.remove(SELECTED_WALLET_COOKIE_KEY, COOKIE_OPTIONS);\n                  }\n                }\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOnboard() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleLoadOnboard = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var ob;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getOnboard();\n\n            case 2:\n              ob = _context2.sent;\n              setOnboard(ob);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleLoadOnboard() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var hasWalletCookie = Cookies.get(SELECTED_WALLET_COOKIE_KEY);\n\n    if (hasWalletCookie) {\n      // console.log('handleLoadOnboard from cookie')\n      handleLoadOnboard();\n    }\n  }, []);\n\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(postSignInCallback) {\n      var _onboard;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _onboard = onboard;\n\n              if (_onboard) {\n                _context3.next = 8;\n                break;\n              }\n\n              console.warn(\"onboard wasn't ready when user clicked \\\"connect wallet\\\"! (this is slow)\");\n              _context3.next = 5;\n              return handleLoadOnboard();\n\n            case 5:\n              _context3.next = 7;\n              return getOnboard();\n\n            case 7:\n              _onboard = _context3.sent;\n\n            case 8:\n              _context3.next = 10;\n              return _onboard.walletSelect();\n\n            case 10:\n              if (!_onboard.getState().wallet.type) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 13;\n              return _onboard.walletCheck();\n\n            case 13:\n              if (postSignInCallback) {\n                postSignInCallback();\n              }\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function connectWallet(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var reconnectWallet = function reconnectWallet(previouslySelectedWallet) {\n    onboard.walletReset();\n\n    if (previouslySelectedWallet && onboard) {\n      onboard.walletSelect(previouslySelectedWallet);\n    }\n  };\n\n  return __jsx(WalletContext.Provider, {\n    value: {\n      onboard: onboard,\n      onboardAddress: address,\n      onboardBalance: balance,\n      onboardNetwork: network,\n      onboardProvider: provider,\n      onboardWallet: wallet,\n      connectWallet: connectWallet,\n      disconnectWallet: disconnectWallet,\n      reconnectWallet: reconnectWallet,\n      handleLoadOnboard: handleLoadOnboard\n    }\n  }, children);\n}\n\n_s(WalletContextProvider, \"zg1CWoGQo64ePKXdyQPZS2OE21c=\");\n\n_c = WalletContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletContextProvider\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/contextProviders/WalletContextProvider.jsx"],"names":["React","useContext","useEffect","useState","Cookies","ethers","STORED_CHAIN_ID_KEY","COOKIE_OPTIONS","SELECTED_WALLET_COOKIE_KEY","MagicContext","debug","require","provider","WalletContext","createContext","WalletContextProvider","props","children","postConnectCallback","address","setAddress","network","setNetwork","balance","setBalance","wallet","setWallet","onboard","setOnboard","magic","disconnectWallet","walletReset","console","log","remove","getOnboard","initOnboardModule","initOnboard","magicContext","signOut","set","name","providers","Web3Provider","handleLoadOnboard","ob","hasWalletCookie","get","connectWallet","postSignInCallback","_onboard","warn","walletSelect","getState","type","walletCheck","reconnectWallet","previouslySelectedWallet","onboardAddress","onboardBalance","onboardNetwork","onboardProvider","onboardWallet"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SACEC,mBADF,EAEEC,cAFF,EAGEC,0BAHF,QAIO,eAJP;AAKA,SAASC,YAAT,QAA6B,sDAA7B;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,uBAAjB,CAAd;;AAEA,IAAIC,QAAJ;AAEA,OAAO,IAAMC,aAAa,gBAAGb,KAAK,CAACc,aAAN,EAAtB;AAEP,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAAA,MAEzCC,QAFyC,GAIvCD,KAJuC,CAEzCC,QAFyC;AAAA,MAGzCC,mBAHyC,GAIvCF,KAJuC,CAGzCE,mBAHyC;;AAAA,kBAMbf,QAAQ,CAAC,IAAD,CANK;AAAA,MAMpCgB,OANoC;AAAA,MAM3BC,UAN2B;;AAAA,mBAObjB,QAAQ,CAAC,IAAD,CAPK;AAAA,MAOpCkB,OAPoC;AAAA,MAO3BC,UAP2B;;AAAA,mBAQbnB,QAAQ,CAAC,IAAD,CARK;AAAA,MAQpCoB,OARoC;AAAA,MAQ3BC,UAR2B;;AAAA,mBASfrB,QAAQ,CAAC,EAAD,CATO;AAAA,MASpCsB,MAToC;AAAA,MAS5BC,SAT4B;;AAAA,mBAWbvB,QAAQ,CAAC,IAAD,CAXK;AAAA,MAWpCwB,OAXoC;AAAA,MAW3BC,UAX2B;;AAAA,oBAazB3B,UAAU,CAACQ,YAAD,CAbe;AAAA,MAanCoB,KAbmC,eAanCA,KAbmC;;AAe3C,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAIH,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACI,WAAR;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;AAED7B,IAAAA,OAAO,CAAC8B,MAAR,CACE5B,mBADF,EAEEC,cAFF;AAKAH,IAAAA,OAAO,CAAC8B,MAAR,CACE1B,0BADF,EAEED,cAFF;AAID,GAhBD;;AAkBA,MAAM4B,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACbR,OADa;AAAA;AAAA;AAAA;;AAAA,+CAERA,OAFQ;;AAAA;AAAA;AAAA,qBAKe,OAAO,0BAAP,CALf;;AAAA;AAKXS,cAAAA,iBALW;AAAA,+CAOVA,iBAAiB,CAACC,WAAlB,CAA8B;AACnClB,gBAAAA,OAAO,EAAEC,UAD0B;AAEnCC,gBAAAA,OAAO,EAAEC,UAF0B;AAGnCC,gBAAAA,OAAO,EAAEC,UAH0B;AAInCC,gBAAAA,MAAM,EAAE,gBAAAA,OAAM,EAAI;AAChB,sBAAIA,OAAM,CAACb,QAAX,EAAqB;AACnB,wBAAIiB,KAAJ,EAAW;AACTS,sBAAAA,YAAY,CAACC,OAAb;AACD;;AAEDb,oBAAAA,SAAS,CAACD,OAAD,CAAT;AAEArB,oBAAAA,OAAO,CAACoC,GAAR,CACEhC,0BADF,EAEEiB,OAAM,CAACgB,IAFT,EAGElC,cAHF;AAMAK,oBAAAA,QAAQ,GAAG,IAAIP,MAAM,CAACqC,SAAP,CAAiBC,YAArB,CAAkClB,OAAM,CAACb,QAAzC,CAAX,CAbmB,CAenB;AACD,mBAhBD,MAgBO;AACLA,oBAAAA,QAAQ,GAAG,IAAX;AACAc,oBAAAA,SAAS,CAAC,EAAD,CAAT;AACAtB,oBAAAA,OAAO,CAAC8B,MAAR,CACE1B,0BADF,EAEED,cAFF;AAID;AACF;AA7BkC,eAA9B,CAPU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAV4B,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAwCA,MAAMS,iBAAiB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPT,UAAU,EADH;;AAAA;AAClBU,cAAAA,EADkB;AAExBjB,cAAAA,UAAU,CAACiB,EAAD,CAAV;;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBD,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAKA1C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM4C,eAAe,GAAG1C,OAAO,CAAC2C,GAAR,CAAYvC,0BAAZ,CAAxB;;AAEA,QAAIsC,eAAJ,EAAqB;AACnB;AACAF,MAAAA,iBAAiB;AAClB;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMI,aAAa;AAAA,yEAAG,kBACpBC,kBADoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGhBC,cAAAA,QAHgB,GAGLvB,OAHK;;AAAA,kBAKfuB,QALe;AAAA;AAAA;AAAA;;AAMlBlB,cAAAA,OAAO,CAACmB,IAAR;AANkB;AAAA,qBAQZP,iBAAiB,EARL;;AAAA;AAAA;AAAA,qBASDT,UAAU,EATT;;AAAA;AASlBe,cAAAA,QATkB;;AAAA;AAAA;AAAA,qBAYdA,QAAQ,CAACE,YAAT,EAZc;;AAAA;AAAA,mBAchBF,QAAQ,CAACG,QAAT,GAAoB5B,MAApB,CAA2B6B,IAdX;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAeZJ,QAAQ,CAACK,WAAT,EAfY;;AAAA;AAiBlB,kBAAIN,kBAAJ,EAAwB;AACtBA,gBAAAA,kBAAkB;AACnB;;AAnBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbD,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAuBA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,wBAAD,EAA8B;AACpD9B,IAAAA,OAAO,CAACI,WAAR;;AAEA,QAAI0B,wBAAwB,IAAI9B,OAAhC,EAAyC;AACvCA,MAAAA,OAAO,CAACyB,YAAR,CAAqBK,wBAArB;AACD;AACF,GAND;;AAQA,SAAO,MAAC,aAAD,CAAe,QAAf;AACL,IAAA,KAAK,EAAE;AACL9B,MAAAA,OAAO,EAAPA,OADK;AAEL+B,MAAAA,cAAc,EAAEvC,OAFX;AAGLwC,MAAAA,cAAc,EAAEpC,OAHX;AAILqC,MAAAA,cAAc,EAAEvC,OAJX;AAKLwC,MAAAA,eAAe,EAAEjD,QALZ;AAMLkD,MAAAA,aAAa,EAAErC,MANV;AAOLuB,MAAAA,aAAa,EAAbA,aAPK;AAQLlB,MAAAA,gBAAgB,EAAhBA,gBARK;AASL0B,MAAAA,eAAe,EAAfA,eATK;AAULZ,MAAAA,iBAAiB,EAAjBA;AAVK;AADF,KAcJ3B,QAdI,CAAP;AAgBD;;GAtIeF,qB;;KAAAA,qB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport Cookies from 'js-cookie'\nimport { ethers } from 'ethers'\n\nimport {\n  STORED_CHAIN_ID_KEY,\n  COOKIE_OPTIONS,\n  SELECTED_WALLET_COOKIE_KEY\n} from 'lib/constants'\nimport { MagicContext } from 'lib/components/contextProviders/MagicContextProvider'\n\nconst debug = require('debug')('WalletContextProvider')\n\nlet provider\n\nexport const WalletContext = React.createContext()\n\nexport function WalletContextProvider(props) {\n  const {\n    children,\n    postConnectCallback,\n  } = props\n\n  const [address, setAddress] = useState(null)\n  const [network, setNetwork] = useState(null)\n  const [balance, setBalance] = useState(null)\n  const [wallet, setWallet] = useState({})\n  \n  const [onboard, setOnboard] = useState(null)\n\n  const { magic } = useContext(MagicContext)\n\n  const disconnectWallet = () => {\n    if (onboard) {\n      onboard.walletReset()\n    } else {\n      console.log('no onboard?')\n    }\n\n    Cookies.remove(\n      STORED_CHAIN_ID_KEY,\n      COOKIE_OPTIONS\n    )\n\n    Cookies.remove(\n      SELECTED_WALLET_COOKIE_KEY,\n      COOKIE_OPTIONS\n    )\n  }\n\n  const getOnboard = async () => {\n    if (onboard) {\n      return onboard\n    }\n\n    const initOnboardModule = await import('lib/services/initOnboard')\n\n    return initOnboardModule.initOnboard({\n      address: setAddress,\n      network: setNetwork,\n      balance: setBalance,\n      wallet: wallet => {\n        if (wallet.provider) {\n          if (magic) {\n            magicContext.signOut()\n          }\n\n          setWallet(wallet)\n\n          Cookies.set(\n            SELECTED_WALLET_COOKIE_KEY,\n            wallet.name,\n            COOKIE_OPTIONS\n          )\n\n          provider = new ethers.providers.Web3Provider(wallet.provider)\n\n          // postConnectCallback()\n        } else {\n          provider = null\n          setWallet({})\n          Cookies.remove(\n            SELECTED_WALLET_COOKIE_KEY,\n            COOKIE_OPTIONS\n          )\n        }\n      }\n    })\n  }\n\n  const handleLoadOnboard = async () => {\n    const ob = await getOnboard()\n    setOnboard(ob)\n  }\n\n  useEffect(() => {\n    const hasWalletCookie = Cookies.get(SELECTED_WALLET_COOKIE_KEY)\n\n    if (hasWalletCookie) {\n      // console.log('handleLoadOnboard from cookie')\n      handleLoadOnboard()\n    }\n  }, [])\n\n  const connectWallet = async (\n    postSignInCallback\n  ) => {\n    let _onboard = onboard\n\n    if (!_onboard) {\n      console.warn(`onboard wasn't ready when user clicked \"connect wallet\"! (this is slow)`)\n      \n      await handleLoadOnboard()\n      _onboard = await getOnboard()\n    }\n\n    await _onboard.walletSelect()\n\n    if (_onboard.getState().wallet.type) {\n      await _onboard.walletCheck()\n\n      if (postSignInCallback) {\n        postSignInCallback()\n      }\n    }\n  }\n  \n  const reconnectWallet = (previouslySelectedWallet) => {\n    onboard.walletReset()\n\n    if (previouslySelectedWallet && onboard) {\n      onboard.walletSelect(previouslySelectedWallet)\n    }\n  }\n\n  return <WalletContext.Provider\n    value={{\n      onboard,\n      onboardAddress: address,\n      onboardBalance: balance,\n      onboardNetwork: network,\n      onboardProvider: provider,\n      onboardWallet: wallet,\n      connectWallet,\n      disconnectWallet,\n      reconnectWallet,\n      handleLoadOnboard,\n    }}\n  >\n    {children}\n  </WalletContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}