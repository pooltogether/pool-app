{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { ethers } from 'ethers';\nimport { useRouter } from 'next/router';\nimport { motion } from 'framer-motion';\nimport { useAtom } from 'jotai';\nimport PrizePoolAbi from '@pooltogether/pooltogether-contracts/abis/PrizePool';\nimport { Trans, useTranslation } from 'lib/../i18n';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { transactionsAtom } from 'lib/atoms/transactionsAtom';\nimport { Button } from 'lib/components/Button';\nimport { CheckboxInputGroup } from 'lib/components/CheckboxInputGroup';\nimport { PaneTitle } from 'lib/components/PaneTitle';\nimport { PoolNumber } from 'lib/components/PoolNumber';\nimport { PTHint } from 'lib/components/PTHint';\nimport { QuestionMarkCircle } from 'lib/components/QuestionMarkCircle';\nimport { RadioInputGroup } from 'lib/components/RadioInputGroup';\nimport { TransactionsTakeTimeMessage } from 'lib/components/TransactionsTakeTimeMessage';\nimport { useExitFees } from 'lib/hooks/useExitFees';\nimport { useSendTransaction } from 'lib/hooks/useSendTransaction';\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther';\nimport { handleCloseWizard } from 'lib/utils/handleCloseWizard';\nimport IconLightning from 'assets/images/icon-lightning.svg';\nexport function ConfirmWithdrawWithFeeForm(props) {\n  var _pool$prizeStrategy, _pool$prizeStrategy$s, _pool$prizeStrategy$s2;\n\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n  const [transactions, setTransactions] = useAtom(transactionsAtom);\n  const {\n    nextStep,\n    previousStep,\n    pool,\n    quantity\n  } = props;\n  const {\n    usersAddress,\n    provider\n  } = useContext(AuthControllerContext);\n  const ticker = pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralSymbol;\n  const decimals = pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals;\n  const poolAddress = pool === null || pool === void 0 ? void 0 : pool.poolAddress;\n  const controlledTokenAddress = pool === null || pool === void 0 ? void 0 : (_pool$prizeStrategy = pool.prizeStrategy) === null || _pool$prizeStrategy === void 0 ? void 0 : (_pool$prizeStrategy$s = _pool$prizeStrategy.singleRandomWinner) === null || _pool$prizeStrategy$s === void 0 ? void 0 : (_pool$prizeStrategy$s2 = _pool$prizeStrategy$s.ticket) === null || _pool$prizeStrategy$s2 === void 0 ? void 0 : _pool$prizeStrategy$s2.id;\n  const tickerUpcased = ticker === null || ticker === void 0 ? void 0 : ticker.toUpperCase();\n  const {\n    exitFees\n  } = useExitFees(quantity);\n  const {\n    exitFee\n  } = exitFees;\n  useEffect(() => {\n    if (exitFees === 'error') {\n      poolToast.error('There was an error fetching exit fees');\n      previousStep();\n    }\n  }, [exitFees]);\n  const {\n    0: iUnderstandChecked,\n    1: setIUnderstandChecked\n  } = useState(false);\n\n  const handleIUnderstandChange = e => {\n    setIUnderstandChecked(!iUnderstandChecked);\n  };\n\n  let tipJsx = null;\n  let gross = ethers.utils.bigNumberify(0);\n  let net = ethers.utils.bigNumberify(0);\n  let grossFormatted, netFormatted, feeFormatted;\n\n  if (exitFee && quantity && decimals) {\n    gross = ethers.utils.parseUnits(quantity, parseInt(decimals, 10));\n    grossFormatted = displayAmountInEther(gross, {\n      decimals,\n      precision: 8\n    });\n    net = ethers.utils.parseUnits(quantity, parseInt(decimals, 10)).sub(exitFee);\n    netFormatted = displayAmountInEther(net, {\n      decimals,\n      precision: 8\n    });\n    feeFormatted = displayAmountInEther(exitFee, {\n      decimals,\n      precision: 2\n    });\n    tipJsx = __jsx(React.Fragment, null, t('toMaintainFairnessDescription'), __jsx(\"br\", null), __jsx(\"br\", null), t('withdrawScheduledDescription', {\n      amount: quantity,\n      ticker\n    }), __jsx(\"br\", null), __jsx(\"br\", null), t('withdrawInstantDescription', {\n      amount: displayAmountInEther(exitFee, {\n        decimals,\n        precision: 8\n      }),\n      ticker\n    }));\n  }\n\n  const {\n    0: txId,\n    1: setTxId\n  } = useState();\n  const method = 'withdrawInstantlyFrom'; // `Withdraw ${quantity} ${tickerUpcased} (fee: $${feeFormatted})`\n\n  const txName = t('withdrawWithFeeTxName', {\n    quantity,\n    tickerUpcased,\n    feeFormatted\n  });\n  const [sendTx] = useSendTransaction(txName, transactions, setTransactions);\n  const tx = transactions === null || transactions === void 0 ? void 0 : transactions.find(tx => tx.id === txId);\n\n  const runTx = () => {\n    const params = [usersAddress, ethers.utils.bigNumberify(gross), controlledTokenAddress, ethers.utils.bigNumberify(exitFee)];\n    const id = sendTx(t, provider, usersAddress, PrizePoolAbi, poolAddress, method, params);\n    setTxId(id);\n  };\n\n  useEffect(() => {\n    if ((tx === null || tx === void 0 ? void 0 : tx.cancelled) || (tx === null || tx === void 0 ? void 0 : tx.error)) {\n      previousStep();\n    } else if (tx === null || tx === void 0 ? void 0 : tx.completed) {\n      nextStep();\n    }\n  }, [tx]);\n  return __jsx(React.Fragment, null, grossFormatted && !(tx === null || tx === void 0 ? void 0 : tx.sent) && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"text-inverse\"\n  }, __jsx(PaneTitle, null, __jsx(Trans, {\n    i18nKey: \"withdrawAmountTickets\",\n    defaults: \"Withdraw <number>{{amount}}</number> tickets\",\n    components: {\n      number: __jsx(PoolNumber, null)\n    },\n    values: {\n      amount: quantity\n    }\n  })), __jsx(RadioInputGroup, {\n    label: \"\",\n    name: \"withdrawType\",\n    onChange: () => {},\n    value: 'instant',\n    radios: [{\n      value: 'instant',\n      icon: __jsx(\"img\", {\n        src: IconLightning,\n        className: \"w-7 h-7 xs:w-auto xs:h-auto\"\n      }),\n      label: __jsx(React.Fragment, null, t('instantly'), \" \", __jsx(PTHint, {\n        className: \"inline-block relative -t-6 r-2\",\n        tip: tipJsx\n      }, __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"inline-bold relative\"\n      }, __jsx(QuestionMarkCircle, null))))),\n      description: __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"mb-2 xs:mb-0\"\n      }, t('finalAmount'), \" \", __jsx(\"span\", {\n        className: \"block xs:inline font-bold\"\n      }, __jsx(PoolNumber, null, netFormatted))), __jsx(\"div\", {\n        className: \"mb-2 xs:mb-0\"\n      }, t('when'), \" \", __jsx(\"span\", {\n        className: \"block xs:inline font-bold\"\n      }, t('now'))))\n    }]\n  }), __jsx(motion.div, {\n    animate: \"enter\",\n    initial: \"exit\",\n    variants: {\n      enter: {\n        scale: 1,\n        height: 'auto',\n        transition: {\n          duration: 0.25\n        }\n      },\n      exit: {\n        scale: 0,\n        height: 0\n      }\n    },\n    className: classnames('flex flex-col items-center justify-between w-full mx-auto rounded-xl sm:mx-auto text-inverse text-xs xs:text-sm sm:text-lg', 'overflow-hidden py-2 xs:py-4 px-6 h-40'),\n    style: {\n      maxWidth: 420\n    }\n  }, __jsx(CheckboxInputGroup, {\n    large: true,\n    id: \"withdraw-i-understand\",\n    name: \"withdraw-i-understand\",\n    label: t('iUnderstand'),\n    title: '',\n    hint: null,\n    checked: iUnderstandChecked,\n    handleClick: handleIUnderstandChange\n  }), __jsx(\"div\", null, __jsx(Trans, {\n    i18nKey: \"youChooseToPayFairnessFeeOfAmountTicker\",\n    defaults: \"You choose to pay a Fairness Fee of <bold>{{amount}} {{ticker}}</bold> in order to withdraw early.\",\n    components: {\n      bold: __jsx(\"span\", {\n        className: \"font-bold\"\n      })\n    },\n    values: {\n      amount: feeFormatted,\n      ticker\n    }\n  }))), __jsx(\"div\", {\n    className: \"mt-3 xs:mt-8\"\n  }, __jsx(Button, {\n    textSize: \"lg\",\n    disabled: !iUnderstandChecked,\n    onClick: runTx\n  }, t('continue'))), __jsx(\"button\", {\n    onClick: e => {\n      handleCloseWizard(router);\n    },\n    className: \"mt-6 underline text-xxs xs:text-xs sm:text-sm\"\n  }, t('cancelWithdrawal')))), (tx === null || tx === void 0 ? void 0 : tx.sent) && !(tx === null || tx === void 0 ? void 0 : tx.completed) && __jsx(React.Fragment, null, __jsx(TransactionsTakeTimeMessage, {\n    tx: tx,\n    title: t('withdrawing'),\n    subtitle: __jsx(Trans, {\n      i18nKey: \"amountTickets\",\n      defaults: \"<number>{{amount}}</number> tickets\",\n      components: {\n        number: __jsx(PoolNumber, null)\n      },\n      values: {\n        amount: quantity\n      }\n    })\n  })));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/ConfirmWithdrawWithFeeForm.jsx"],"names":["React","useContext","useEffect","useState","classnames","ethers","useRouter","motion","useAtom","PrizePoolAbi","Trans","useTranslation","AuthControllerContext","transactionsAtom","Button","CheckboxInputGroup","PaneTitle","PoolNumber","PTHint","QuestionMarkCircle","RadioInputGroup","TransactionsTakeTimeMessage","useExitFees","useSendTransaction","displayAmountInEther","handleCloseWizard","IconLightning","ConfirmWithdrawWithFeeForm","props","t","router","transactions","setTransactions","nextStep","previousStep","pool","quantity","usersAddress","provider","ticker","underlyingCollateralSymbol","decimals","underlyingCollateralDecimals","poolAddress","controlledTokenAddress","prizeStrategy","singleRandomWinner","ticket","id","tickerUpcased","toUpperCase","exitFees","exitFee","poolToast","error","iUnderstandChecked","setIUnderstandChecked","handleIUnderstandChange","e","tipJsx","gross","utils","bigNumberify","net","grossFormatted","netFormatted","feeFormatted","parseUnits","parseInt","precision","sub","amount","txId","setTxId","method","txName","sendTx","tx","find","runTx","params","cancelled","completed","sent","number","value","icon","label","description","enter","scale","height","transition","duration","exit","maxWidth","bold"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport classnames from 'classnames'\nimport { ethers } from 'ethers'\nimport { useRouter } from 'next/router'\nimport { motion } from 'framer-motion'\nimport { useAtom } from 'jotai'\n\nimport PrizePoolAbi from '@pooltogether/pooltogether-contracts/abis/PrizePool'\n\nimport { Trans, useTranslation } from 'lib/../i18n'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { transactionsAtom } from 'lib/atoms/transactionsAtom'\nimport { Button } from 'lib/components/Button'\nimport { CheckboxInputGroup } from 'lib/components/CheckboxInputGroup'\nimport { PaneTitle } from 'lib/components/PaneTitle'\nimport { PoolNumber } from 'lib/components/PoolNumber'\nimport { PTHint } from 'lib/components/PTHint'\nimport { QuestionMarkCircle } from 'lib/components/QuestionMarkCircle'\nimport { RadioInputGroup } from 'lib/components/RadioInputGroup'\nimport { TransactionsTakeTimeMessage } from 'lib/components/TransactionsTakeTimeMessage'\nimport { useExitFees } from 'lib/hooks/useExitFees'\nimport { useSendTransaction } from 'lib/hooks/useSendTransaction'\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther'\nimport { handleCloseWizard } from 'lib/utils/handleCloseWizard'\n\nimport IconLightning from 'assets/images/icon-lightning.svg'\n\nexport function ConfirmWithdrawWithFeeForm(props) {\n  const { t } = useTranslation()\n  const router = useRouter()\n\n  const [transactions, setTransactions] = useAtom(transactionsAtom)\n  \n  const { nextStep, previousStep, pool, quantity } = props\n\n  const { usersAddress, provider } = useContext(AuthControllerContext)\n\n  const ticker = pool?.underlyingCollateralSymbol\n  const decimals = pool?.underlyingCollateralDecimals\n  const poolAddress = pool?.poolAddress\n  const controlledTokenAddress = pool?.prizeStrategy?.singleRandomWinner?.ticket?.id\n\n  const tickerUpcased = ticker?.toUpperCase()\n\n  const { exitFees } = useExitFees(quantity)\n  const { exitFee } = exitFees\n\n  useEffect(() => {\n    if (exitFees === 'error') {\n      poolToast.error('There was an error fetching exit fees')\n      previousStep()\n    }\n  }, [exitFees])\n\n  const [iUnderstandChecked, setIUnderstandChecked] = useState(false)\n\n  const handleIUnderstandChange = (e) => {\n    setIUnderstandChecked(!iUnderstandChecked)\n  }\n\n\n\n  let tipJsx = null\n  let gross = ethers.utils.bigNumberify(0)\n  let net = ethers.utils.bigNumberify(0)\n  let grossFormatted,\n    netFormatted,\n    feeFormatted\n\n  if (exitFee && quantity && decimals) {\n    gross = ethers.utils.parseUnits(\n      quantity,\n      parseInt(decimals, 10)\n    )\n\n    grossFormatted = displayAmountInEther(\n      gross,\n      { decimals, precision: 8 }\n    )\n\n\n    net = ethers.utils.parseUnits(\n      quantity,\n      parseInt(decimals, 10)\n    ).sub(exitFee)\n\n    netFormatted = displayAmountInEther(\n      net,\n      { decimals, precision: 8 }\n    )\n    \n\n\n    feeFormatted = displayAmountInEther(\n      exitFee,\n      { decimals, precision: 2 }\n    )\n  \n    tipJsx = <>\n      {t('toMaintainFairnessDescription')}\n\n      <br /><br />\n      {t('withdrawScheduledDescription', {\n        amount: quantity,\n        ticker\n      })}\n\n      <br /><br />\n      {t('withdrawInstantDescription', {\n        amount: displayAmountInEther(\n          exitFee,\n          { decimals, precision: 8}\n        ),\n        ticker\n      })}\n    </>\n  }\n\n\n\n\n  const [txId, setTxId] = useState()\n\n  const method = 'withdrawInstantlyFrom'\n\n  // `Withdraw ${quantity} ${tickerUpcased} (fee: $${feeFormatted})`\n  const txName = t('withdrawWithFeeTxName',\n    {\n      quantity,\n      tickerUpcased,\n      feeFormatted\n    }\n  )\n\n  const [sendTx] = useSendTransaction(txName, transactions, setTransactions)\n\n  \n  \n  const tx = transactions?.find((tx) => tx.id === txId)\n\n  const runTx = () => {\n    const params = [\n      usersAddress,\n      ethers.utils.bigNumberify(gross),\n      controlledTokenAddress,\n      ethers.utils.bigNumberify(exitFee)\n    ]\n\n    const id = sendTx(\n      t,\n      provider,\n      usersAddress,\n      PrizePoolAbi,\n      poolAddress,\n      method,\n      params,\n    )\n\n    setTxId(id)\n  }\n\n  useEffect(() => {\n    if (tx?.cancelled || tx?.error) {\n      previousStep()\n    } else if (tx?.completed) {\n      nextStep()\n    }\n  }, [tx])\n\n  return <>\n    {grossFormatted && !tx?.sent && <>\n      <div\n        className='text-inverse'\n      >\n        <PaneTitle>\n          <Trans\n            i18nKey='withdrawAmountTickets'\n            defaults='Withdraw <number>{{amount}}</number> tickets'\n            components={{\n              number: <PoolNumber />,\n            }}\n            values={{\n              amount: quantity\n            }}\n          />\n        </PaneTitle>\n            \n        <RadioInputGroup\n          label=''\n          name='withdrawType'\n          onChange={() => {}}\n          value={'instant'}\n          radios={[\n            {\n              value: 'instant',\n              icon: <img src={IconLightning} className='w-7 h-7 xs:w-auto xs:h-auto' />,\n              label: <>\n                {t('instantly')} <PTHint\n                  className='inline-block relative -t-6 r-2'\n                  tip={tipJsx}\n                >\n                  <>\n                    <div className='inline-bold relative'>\n                      <QuestionMarkCircle />\n                    </div>\n                  </>\n                </PTHint>\n              </>,\n              description: <>\n                <div\n                  className='mb-2 xs:mb-0'\n                >\n                  {t('finalAmount')} <span\n                    className='block xs:inline font-bold'\n                  ><PoolNumber>{netFormatted}</PoolNumber></span>\n                </div>\n                <div\n                  className='mb-2 xs:mb-0'\n                >\n                  {t('when')} <span\n                    className='block xs:inline font-bold'\n                  >{t('now')}</span>\n                </div>\n              </>\n            }\n          ]}\n        />\n\n        <motion.div\n          animate='enter'\n          initial='exit'\n          variants={{\n            enter: {\n              scale: 1,\n              height: 'auto',\n              transition: {\n                duration: 0.25\n              }\n            },\n            exit: {\n              scale: 0,\n              height: 0,\n            }\n          }}\n          className={classnames(\n            'flex flex-col items-center justify-between w-full mx-auto rounded-xl sm:mx-auto text-inverse text-xs xs:text-sm sm:text-lg',\n            'overflow-hidden py-2 xs:py-4 px-6 h-40',\n          )}\n          style={{\n            maxWidth: 420\n          }}\n        >\n          <CheckboxInputGroup\n            large\n            id='withdraw-i-understand'\n            name='withdraw-i-understand'\n            label={t('iUnderstand')}\n            title={''}\n            hint={null}\n            checked={iUnderstandChecked}\n            handleClick={handleIUnderstandChange}\n          />\n{/*           \n          <label\n            htmlFor='i-understand-checkbox'\n            className='m-0 font-bold'\n          >\n            <input\n              onChange={handleIUnderstandChange}\n              id='i-understand-checkbox'\n              type='checkbox'\n              className='mr-2'\n            /> {t('iUnderstand')}\n          </label> */}\n\n          <div>\n            <Trans\n              i18nKey='youChooseToPayFairnessFeeOfAmountTicker'\n              defaults='You choose to pay a Fairness Fee of <bold>{{amount}} {{ticker}}</bold> in order to withdraw early.'\n              components={{\n                bold: <span className='font-bold' />,\n              }}\n              values={{\n                amount: feeFormatted,\n                ticker\n              }}\n            />\n          </div>\n        </motion.div>\n\n        <div className='mt-3 xs:mt-8'>\n          <Button\n            textSize='lg'\n            disabled={!iUnderstandChecked}\n            onClick={runTx}\n          >\n            {t('continue')}\n          </Button>\n        </div> \n\n        <button\n          onClick={(e) => {\n            handleCloseWizard(router)\n          }}\n          className='mt-6 underline text-xxs xs:text-xs sm:text-sm'\n        >\n          {t('cancelWithdrawal')}\n        </button>\n      </div> \n      \n    </>}\n\n\n    {tx?.sent && !tx?.completed && <>\n      <TransactionsTakeTimeMessage\n        tx={tx}\n        title={t('withdrawing')}\n        subtitle={<Trans\n          i18nKey='amountTickets'\n          defaults='<number>{{amount}}</number> tickets'\n          components={{\n            number: <PoolNumber />,\n          }}\n          values={{\n            amount: quantity,\n          }}\n        />}\n      />\n    </>}\n\n  </>\n\n}\n"]},"metadata":{},"sourceType":"module"}