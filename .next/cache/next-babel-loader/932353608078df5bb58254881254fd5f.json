{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport addSeconds from 'date-fns/addSeconds';\nimport { useTranslation } from 'lib/../i18n';\nimport { Gauge } from 'lib/components/Gauge';\nimport { subtractDates } from 'lib/utils/subtractDates';\n\nconst _varName = ({\n  days,\n  hours,\n  minutes\n}) => {\n  let varName;\n\n  if (days === 0 && hours === 0 && minutes === 0) {\n    varName = 'seconds';\n  } else if (days === 0 && hours === 0) {\n    varName = 'minutes';\n  } else if (days === 0) {\n    varName = 'hours';\n  } else if (days > 0) {\n    varName = 'days';\n  }\n\n  return varName;\n};\n\nconst _label = (t, timeRemainingObj) => {\n  const varName = _varName(timeRemainingObj);\n\n  const value = timeRemainingObj[varName];\n  return t(`${varName}ToGoUntilFreeWithdrawal`, {\n    [varName]: parseInt(value, 10)\n  });\n};\n\nexport function WithdrawalTimeRemainingChart(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    pool,\n    timelockDurationSeconds\n  } = props;\n  const secondsRemaining = timelockDurationSeconds.toNumber();\n  const currentDate = new Date(Date.now());\n  const futureDate = addSeconds(currentDate, secondsRemaining);\n  const timeRemainingObj = subtractDates(futureDate, currentDate);\n  const percentTimeRemaining = secondsRemaining / parseInt(pool === null || pool === void 0 ? void 0 : pool.maxTimelockDuration, 10) * 100;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"mt-4 text-highlight-3\",\n    style: {\n      maxHeight: 220\n    }\n  }, __jsx(Gauge, {\n    label: __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"text-6xl sm:text-7xl font-bold time-remaining-chart--big-num\"\n    }, timeRemainingObj[_varName(timeRemainingObj)]), __jsx(\"div\", {\n      className: \"text-lg font-bold\"\n    }, t(`${_varName(timeRemainingObj)}Left`)), __jsx(\"div\", {\n      className: \"text-xxxs mt-8 sm:mt-4 mx-auto\",\n      style: {\n        maxWidth: 160\n      }\n    }, _label(t, timeRemainingObj))),\n    value: Math.abs(100 - percentTimeRemaining)\n  })));\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/WithdrawalTimeRemainingChart.jsx"],"names":["React","addSeconds","useTranslation","Gauge","subtractDates","_varName","days","hours","minutes","varName","_label","t","timeRemainingObj","value","parseInt","WithdrawalTimeRemainingChart","props","pool","timelockDurationSeconds","secondsRemaining","toNumber","currentDate","Date","now","futureDate","percentTimeRemaining","maxTimelockDuration","maxHeight","maxWidth","Math","abs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,aAAT,QAA8B,yBAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC7C,MAAIC,OAAJ;;AAEA,MAAIH,IAAI,KAAK,CAAT,IAAcC,KAAK,KAAK,CAAxB,IAA6BC,OAAO,KAAK,CAA7C,EAAgD;AAC9CC,IAAAA,OAAO,GAAG,SAAV;AACD,GAFD,MAEO,IAAIH,IAAI,KAAK,CAAT,IAAcC,KAAK,KAAK,CAA5B,EAA+B;AACpCE,IAAAA,OAAO,GAAG,SAAV;AACD,GAFM,MAEA,IAAIH,IAAI,KAAK,CAAb,EAAgB;AACrBG,IAAAA,OAAO,GAAG,OAAV;AACD,GAFM,MAEA,IAAIH,IAAI,GAAG,CAAX,EAAc;AACnBG,IAAAA,OAAO,GAAG,MAAV;AACD;;AAED,SAAOA,OAAP;AACD,CAdD;;AAgBA,MAAMC,MAAM,GAAG,CAACC,CAAD,EAAIC,gBAAJ,KAAyB;AACtC,QAAMH,OAAO,GAAGJ,QAAQ,CAACO,gBAAD,CAAxB;;AACA,QAAMC,KAAK,GAAGD,gBAAgB,CAACH,OAAD,CAA9B;AAEA,SAAOE,CAAC,CAAE,GAAEF,OAAQ,yBAAZ,EAAsC;AAC5C,KAACA,OAAD,GAAWK,QAAQ,CAACD,KAAD,EAAQ,EAAR;AADyB,GAAtC,CAAR;AAGD,CAPD;;AASA,OAAO,SAASE,4BAAT,CAAsCC,KAAtC,EAA6C;AAClD,QAAM;AAAEL,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AAEA,QAAM;AAAEe,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoCF,KAA1C;AAEA,QAAMG,gBAAgB,GAAGD,uBAAuB,CAACE,QAAxB,EAAzB;AAEA,QAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAApB;AACA,QAAMC,UAAU,GAAGvB,UAAU,CAACoB,WAAD,EAAcF,gBAAd,CAA7B;AACA,QAAMP,gBAAgB,GAAGR,aAAa,CAACoB,UAAD,EAAaH,WAAb,CAAtC;AAEA,QAAMI,oBAAoB,GAAIN,gBAAgB,GAAGL,QAAQ,CAACG,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,mBAAP,EAA4B,EAA5B,CAA5B,GAA+D,GAA5F;AAEA,SAAO,4BACL;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE;AADN;AAFT,KAME,MAAC,KAAD;AACE,IAAA,KAAK,EAAE,4BACL;AACE,MAAA,SAAS,EAAC;AADZ,OAGGf,gBAAgB,CAACP,QAAQ,CAACO,gBAAD,CAAT,CAHnB,CADK,EAML;AACE,MAAA,SAAS,EAAC;AADZ,OAGGD,CAAC,CAAE,GAAEN,QAAQ,CAACO,gBAAD,CAAmB,MAA/B,CAHJ,CANK,EAWL;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,KAAK,EAAE;AACLgB,QAAAA,QAAQ,EAAE;AADL;AAFT,OAMGlB,MAAM,CAACC,CAAD,EAAIC,gBAAJ,CANT,CAXK,CADT;AAqBE,IAAA,KAAK,EAAEiB,IAAI,CAACC,GAAL,CAAS,MAAML,oBAAf;AArBT,IANF,CADK,CAAP;AAgCD","sourcesContent":["import React from 'react'\nimport addSeconds from 'date-fns/addSeconds'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { Gauge } from 'lib/components/Gauge'\nimport { subtractDates } from 'lib/utils/subtractDates'\n\nconst _varName = ({ days, hours, minutes }) => {\n  let varName\n\n  if (days === 0 && hours === 0 && minutes === 0) {\n    varName = 'seconds'\n  } else if (days === 0 && hours === 0) {\n    varName = 'minutes'\n  } else if (days === 0) {\n    varName = 'hours'\n  } else if (days > 0) {\n    varName = 'days'\n  }\n\n  return varName\n}\n\nconst _label = (t, timeRemainingObj) => {\n  const varName = _varName(timeRemainingObj)\n  const value = timeRemainingObj[varName]\n\n  return t(`${varName}ToGoUntilFreeWithdrawal`, {\n    [varName]: parseInt(value, 10)\n  })\n}\n\nexport function WithdrawalTimeRemainingChart(props) {\n  const { t } = useTranslation()\n\n  const { pool, timelockDurationSeconds } = props\n  \n  const secondsRemaining = timelockDurationSeconds.toNumber()\n\n  const currentDate = new Date(Date.now())\n  const futureDate = addSeconds(currentDate, secondsRemaining)\n  const timeRemainingObj = subtractDates(futureDate, currentDate)\n\n  const percentTimeRemaining = (secondsRemaining / parseInt(pool?.maxTimelockDuration, 10)) * 100\n\n  return <>\n    <div\n      className='mt-4 text-highlight-3'\n      style={{\n        maxHeight: 220\n      }}\n    >\n      <Gauge\n        label={<>\n          <div\n            className='text-6xl sm:text-7xl font-bold time-remaining-chart--big-num'\n          >\n            {timeRemainingObj[_varName(timeRemainingObj)]}\n          </div>\n          <div\n            className='text-lg font-bold'\n          >\n            {t(`${_varName(timeRemainingObj)}Left`)}\n          </div>\n          <div\n            className='text-xxxs mt-8 sm:mt-4 mx-auto'\n            style={{\n              maxWidth: 160\n            }}\n          >\n            {_label(t, timeRemainingObj)}\n          </div>\n        </>}\n        value={Math.abs(100 - percentTimeRemaining)}\n      />\n    </div>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}