{"ast":null,"code":"import { ethers } from 'ethers';\nexport function usersDataForPool(pool, usersChainData) {\n  var decimals = pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals;\n  var usersTokenAllowance = (usersChainData === null || usersChainData === void 0 ? void 0 : usersChainData.usersTokenAllowance) ? usersChainData.usersTokenAllowance : ethers.utils.bigNumberify(0);\n  var usersTokenBalanceBN = (usersChainData === null || usersChainData === void 0 ? void 0 : usersChainData.usersTokenBalance) ? usersChainData.usersTokenBalance : ethers.utils.bigNumberify(0);\n  var usersTokenBalance = 0;\n\n  if (decimals) {\n    usersTokenBalance = ethers.utils.formatUnits(usersTokenBalanceBN, parseInt(decimals, 10));\n  } // const usersDaiPermitAllowance = usersChainData?.usersDaiPermitAllowance ?\n  //   usersChainData.usersDaiPermitAllowance :\n  //   ethers.utils.bigNumberify(0)\n\n\n  return {\n    usersTokenBalanceBN: usersTokenBalanceBN,\n    usersTokenBalance: usersTokenBalance,\n    usersTokenAllowance: usersTokenAllowance // usersDaiPermitAllowance,\n\n  };\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/utils/usersDataForPool.js"],"names":["ethers","usersDataForPool","pool","usersChainData","decimals","underlyingCollateralDecimals","usersTokenAllowance","utils","bigNumberify","usersTokenBalanceBN","usersTokenBalance","formatUnits","parseInt"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,cAAhC,EAAgD;AACrD,MAAMC,QAAQ,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,4BAAvB;AAEA,MAAMC,mBAAmB,GAAG,CAAAH,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEG,mBAAhB,IAC1BH,cAAc,CAACG,mBADW,GAE1BN,MAAM,CAACO,KAAP,CAAaC,YAAb,CAA0B,CAA1B,CAFF;AAIA,MAAMC,mBAAmB,GAAG,CAAAN,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEO,iBAAhB,IAC1BP,cAAc,CAACO,iBADW,GAE1BV,MAAM,CAACO,KAAP,CAAaC,YAAb,CAA0B,CAA1B,CAFF;AAIA,MAAIE,iBAAiB,GAAG,CAAxB;;AACA,MAAIN,QAAJ,EAAc;AACZM,IAAAA,iBAAiB,GAAGV,MAAM,CAACO,KAAP,CAAaI,WAAb,CAClBF,mBADkB,EAElBG,QAAQ,CAACR,QAAD,EAAW,EAAX,CAFU,CAApB;AAID,GAjBoD,CAmBrD;AACA;AACA;;;AAEA,SAAO;AACLK,IAAAA,mBAAmB,EAAnBA,mBADK;AAELC,IAAAA,iBAAiB,EAAjBA,iBAFK;AAGLJ,IAAAA,mBAAmB,EAAnBA,mBAHK,CAIL;;AAJK,GAAP;AAMD","sourcesContent":["import { ethers } from 'ethers'\n\nexport function usersDataForPool(pool, usersChainData) {\n  const decimals = pool?.underlyingCollateralDecimals\n\n  const usersTokenAllowance = usersChainData?.usersTokenAllowance ?\n    usersChainData.usersTokenAllowance :\n    ethers.utils.bigNumberify(0)\n\n  const usersTokenBalanceBN = usersChainData?.usersTokenBalance ?\n    usersChainData.usersTokenBalance :\n    ethers.utils.bigNumberify(0)\n\n  let usersTokenBalance = 0\n  if (decimals) {\n    usersTokenBalance = ethers.utils.formatUnits(\n      usersTokenBalanceBN,\n      parseInt(decimals, 10)\n    )\n  }\n\n  // const usersDaiPermitAllowance = usersChainData?.usersDaiPermitAllowance ?\n  //   usersChainData.usersDaiPermitAllowance :\n  //   ethers.utils.bigNumberify(0)\n\n  return {\n    usersTokenBalanceBN,\n    usersTokenBalance,\n    usersTokenAllowance,\n    // usersDaiPermitAllowance,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}