{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport { useTranslation } from 'lib/../i18n';\nimport { PoolCountUp } from 'lib/components/PoolCountUp';\nexport function Odds(props) {\n  _s();\n\n  var _pool$prizeStrategy, _pool$prizeStrategy$s, _pool$prizeStrategy$s2;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var asSpan = props.asSpan,\n      className = props.className,\n      hide = props.hide,\n      fontSansRegular = props.fontSansRegular,\n      pool = props.pool,\n      showLabel = props.showLabel,\n      sayEveryWeek = props.sayEveryWeek,\n      splitLines = props.splitLines,\n      altSplitLines = props.altSplitLines,\n      previousOdds = props.previousOdds,\n      style = props.style,\n      timeTravelTicketSupply = props.timeTravelTicketSupply,\n      usersBalance = props.usersBalance;\n  var additionalQuantity = props.additionalQuantity;\n  var font = fontSansRegular ? 'font-sans' : '';\n  var content = null;\n  var hasBalance = !isNaN(usersBalance) && usersBalance > 0;\n  var underlyingCollateralDecimals = pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals;\n  var ticketSupply = timeTravelTicketSupply || (pool === null || pool === void 0 ? void 0 : (_pool$prizeStrategy = pool.prizeStrategy) === null || _pool$prizeStrategy === void 0 ? void 0 : (_pool$prizeStrategy$s = _pool$prizeStrategy.singleRandomWinner) === null || _pool$prizeStrategy$s === void 0 ? void 0 : (_pool$prizeStrategy$s2 = _pool$prizeStrategy$s.ticket) === null || _pool$prizeStrategy$s2 === void 0 ? void 0 : _pool$prizeStrategy$s2.totalSupply);\n  var ticketSupplyFloat;\n\n  if (ticketSupply && underlyingCollateralDecimals) {\n    ticketSupplyFloat = Number(ethers.utils.formatUnits(ticketSupply, Number(underlyingCollateralDecimals)));\n  }\n\n  additionalQuantity = Number(additionalQuantity);\n  var hasAdditionalQuantity = !isNaN(additionalQuantity) && additionalQuantity !== 0;\n  var postPurchaseBalance = usersBalance;\n\n  if (hasAdditionalQuantity) {\n    postPurchaseBalance = Number(usersBalance) + additionalQuantity;\n    ticketSupplyFloat = ticketSupplyFloat + additionalQuantity;\n  }\n\n  var result = null;\n\n  if (postPurchaseBalance < 1) {\n    result = 0;\n  } else {\n    result = ticketSupplyFloat / postPurchaseBalance;\n  }\n\n  var currentOdds = ticketSupply / usersBalance;\n\n  var label = showLabel && __jsx(React.Fragment, null, hasAdditionalQuantity && additionalQuantity !== 0 ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"font-bold text-flashy\"\n  }, t('newOddsOfWinning'))) : t('currentOddsOfWinning'));\n\n  if (result === 0) {\n    label = __jsx(React.Fragment, null, label, __jsx(\"br\", null), t('notAvailableAbbreviation'));\n  } else if (!hide && (hasBalance || hasAdditionalQuantity)) {\n    var totalOdds = __jsx(PoolCountUp, {\n      fontSansRegular: true,\n      start: result,\n      end: result\n    });\n\n    content = __jsx(React.Fragment, null, label, \" \", splitLines && __jsx(\"br\", null), __jsx(\"span\", {\n      className: \"\".concat(font, \" font-bold\")\n    }, \"1\"), altSplitLines ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"inline-block xs:block ml-1 xs:ml-0 -mt-1 text-xs sm:text-sm\"\n    }, t('in'), \" \", totalOdds)) : __jsx(React.Fragment, null, \"\\xA0\", t('in'), \" \", totalOdds), \" \", sayEveryWeek && t('everyWeek'));\n  }\n\n  if (asSpan) {\n    return __jsx(\"span\", {\n      className: className,\n      style: style\n    }, content);\n  } else {\n    return __jsx(\"div\", _defineProperty({\n      style: {\n        minHeight: 24\n      },\n      className: className\n    }, \"style\", style), content);\n  }\n}\n\n_s(Odds, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Odds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Odds\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/Odds.jsx"],"names":["React","ethers","useTranslation","PoolCountUp","Odds","props","t","asSpan","className","hide","fontSansRegular","pool","showLabel","sayEveryWeek","splitLines","altSplitLines","previousOdds","style","timeTravelTicketSupply","usersBalance","additionalQuantity","font","content","hasBalance","isNaN","underlyingCollateralDecimals","ticketSupply","prizeStrategy","singleRandomWinner","ticket","totalSupply","ticketSupplyFloat","Number","utils","formatUnits","hasAdditionalQuantity","postPurchaseBalance","result","currentOdds","label","totalOdds","minHeight"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AAAA,wBACZH,cAAc,EADF;AAAA,MAClBI,CADkB,mBAClBA,CADkB;;AAAA,MAIxBC,MAJwB,GAiBtBF,KAjBsB,CAIxBE,MAJwB;AAAA,MAKxBC,SALwB,GAiBtBH,KAjBsB,CAKxBG,SALwB;AAAA,MAMxBC,IANwB,GAiBtBJ,KAjBsB,CAMxBI,IANwB;AAAA,MAOxBC,eAPwB,GAiBtBL,KAjBsB,CAOxBK,eAPwB;AAAA,MAQxBC,IARwB,GAiBtBN,KAjBsB,CAQxBM,IARwB;AAAA,MASxBC,SATwB,GAiBtBP,KAjBsB,CASxBO,SATwB;AAAA,MAUxBC,YAVwB,GAiBtBR,KAjBsB,CAUxBQ,YAVwB;AAAA,MAWxBC,UAXwB,GAiBtBT,KAjBsB,CAWxBS,UAXwB;AAAA,MAYxBC,aAZwB,GAiBtBV,KAjBsB,CAYxBU,aAZwB;AAAA,MAaxBC,YAbwB,GAiBtBX,KAjBsB,CAaxBW,YAbwB;AAAA,MAcxBC,KAdwB,GAiBtBZ,KAjBsB,CAcxBY,KAdwB;AAAA,MAexBC,sBAfwB,GAiBtBb,KAjBsB,CAexBa,sBAfwB;AAAA,MAgBxBC,YAhBwB,GAiBtBd,KAjBsB,CAgBxBc,YAhBwB;AAAA,MAmBpBC,kBAnBoB,GAmBGf,KAnBH,CAmBpBe,kBAnBoB;AAqB1B,MAAMC,IAAI,GAAGX,eAAe,GAAG,WAAH,GAAiB,EAA7C;AAEA,MAAIY,OAAO,GAAG,IAAd;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAK,CAACL,YAAD,CAAN,IAAwBA,YAAY,GAAG,CAA1D;AAEA,MAAMM,4BAA4B,GAAGd,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEc,4BAA3C;AACA,MAAMC,YAAY,GAAGR,sBAAsB,KAAIP,IAAJ,aAAIA,IAAJ,8CAAIA,IAAI,CAAEgB,aAAV,iFAAI,oBAAqBC,kBAAzB,oFAAI,sBAAyCC,MAA7C,2DAAI,uBAAiDC,WAArD,CAA3C;AAEA,MAAIC,iBAAJ;;AACA,MAAIL,YAAY,IAAID,4BAApB,EAAkD;AAChDM,IAAAA,iBAAiB,GAAGC,MAAM,CAAC/B,MAAM,CAACgC,KAAP,CAAaC,WAAb,CACzBR,YADyB,EAEzBM,MAAM,CAACP,4BAAD,CAFmB,CAAD,CAA1B;AAID;;AAEDL,EAAAA,kBAAkB,GAAGY,MAAM,CAACZ,kBAAD,CAA3B;AACA,MAAMe,qBAAqB,GAAG,CAACX,KAAK,CAACJ,kBAAD,CAAN,IACzBA,kBAAkB,KAAK,CAD5B;AAGA,MAAIgB,mBAAmB,GAAGjB,YAA1B;;AACA,MAAIgB,qBAAJ,EAA2B;AACzBC,IAAAA,mBAAmB,GAAGJ,MAAM,CAACb,YAAD,CAAN,GAAuBC,kBAA7C;AACAW,IAAAA,iBAAiB,GAAGA,iBAAiB,GAAGX,kBAAxC;AACD;;AAED,MAAIiB,MAAM,GAAG,IAAb;;AACA,MAAID,mBAAmB,GAAG,CAA1B,EAA6B;AAC3BC,IAAAA,MAAM,GAAG,CAAT;AACD,GAFD,MAEO;AACLA,IAAAA,MAAM,GAAGN,iBAAiB,GAAGK,mBAA7B;AACD;;AAED,MAAME,WAAW,GAAGZ,YAAY,GAAGP,YAAnC;;AAEA,MAAIoB,KAAK,GAAG3B,SAAS,IAAI,4BACtBuB,qBAAqB,IAAIf,kBAAkB,KAAK,CAAhD,GAAoD,4BACnD;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAyCd,CAAC,CAAC,kBAAD,CAA1C,CADmD,CAApD,GAEKA,CAAC,CAAC,sBAAD,CAHgB,CAAzB;;AAMA,MAAI+B,MAAM,KAAK,CAAf,EAAkB;AAChBE,IAAAA,KAAK,GAAG,4BACLA,KADK,EAEN,iBAFM,EAECjC,CAAC,CAAC,0BAAD,CAFF,CAAR;AAID,GALD,MAKO,IAAI,CAACG,IAAD,KAAUc,UAAU,IAAIY,qBAAxB,CAAJ,EAAoD;AACzD,QAAMK,SAAS,GAAG,MAAC,WAAD;AAChB,MAAA,eAAe,MADC;AAEhB,MAAA,KAAK,EAAEH,MAFS;AAGhB,MAAA,GAAG,EAAEA;AAHW,MAAlB;;AAMAf,IAAAA,OAAO,GAAG,4BACPiB,KADO,OACCzB,UAAU,IAAI,iBADf,EACsB;AAC5B,MAAA,SAAS,YAAKO,IAAL;AADmB,WADtB,EAKPN,aAAa,GAAG,4BACf;AAAK,MAAA,SAAS,EAAC;AAAf,OAA8ET,CAAC,CAAC,IAAD,CAA/E,OAAwFkC,SAAxF,CADe,CAAH,GAER,oCACGlC,CAAC,CAAC,IAAD,CADJ,OACakC,SADb,CAPE,OASF3B,YAAY,IAAIP,CAAC,CAAC,WAAD,CATf,CAAV;AAWD;;AAED,MAAIC,MAAJ,EAAY;AACV,WAAO;AACL,MAAA,SAAS,EAAEC,SADN;AAEL,MAAA,KAAK,EAAES;AAFF,OAIJK,OAJI,CAAP;AAMD,GAPD,MAOO;AACL,WAAO;AACL,MAAA,KAAK,EAAE;AACLmB,QAAAA,SAAS,EAAE;AADN,OADF;AAIL,MAAA,SAAS,EAAEjC;AAJN,gBAKES,KALF,GAOJK,OAPI,CAAP;AASD;AACF;;GA1GelB,I;UACAF,c;;;KADAE,I","sourcesContent":["import React from 'react'\nimport { ethers } from 'ethers'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { PoolCountUp } from 'lib/components/PoolCountUp'\n\nexport function Odds(props) {\n  const { t } = useTranslation()\n\n  const {\n    asSpan,\n    className,\n    hide,\n    fontSansRegular,\n    pool,\n    showLabel,\n    sayEveryWeek,\n    splitLines,\n    altSplitLines,\n    previousOdds,\n    style,\n    timeTravelTicketSupply,\n    usersBalance,\n  } = props\n\n  let { additionalQuantity } = props\n\n  const font = fontSansRegular ? 'font-sans' : ''\n\n  let content = null\n\n  const hasBalance = !isNaN(usersBalance) && usersBalance > 0\n\n  const underlyingCollateralDecimals = pool?.underlyingCollateralDecimals\n  const ticketSupply = timeTravelTicketSupply || pool?.prizeStrategy?.singleRandomWinner?.ticket?.totalSupply\n\n  let ticketSupplyFloat\n  if (ticketSupply && underlyingCollateralDecimals) {\n    ticketSupplyFloat = Number(ethers.utils.formatUnits(\n      ticketSupply,\n      Number(underlyingCollateralDecimals)\n    ))\n  }\n\n  additionalQuantity = Number(additionalQuantity)\n  const hasAdditionalQuantity = !isNaN(additionalQuantity)\n    && additionalQuantity !== 0\n\n  let postPurchaseBalance = usersBalance\n  if (hasAdditionalQuantity) {\n    postPurchaseBalance = Number(usersBalance) + additionalQuantity\n    ticketSupplyFloat = ticketSupplyFloat + additionalQuantity\n  }\n\n  let result = null\n  if (postPurchaseBalance < 1) {\n    result = 0\n  } else {\n    result = ticketSupplyFloat / postPurchaseBalance\n  }\n \n  const currentOdds = ticketSupply / usersBalance\n\n  let label = showLabel && <>\n    {hasAdditionalQuantity && additionalQuantity !== 0 ? <>\n      <span className='font-bold text-flashy'>{t('newOddsOfWinning')}</span>\n    </> : t('currentOddsOfWinning')}\n  </>\n\n  if (result === 0) {\n    label = <>\n      {label}\n      <br />{t('notAvailableAbbreviation')}\n    </>\n  } else if (!hide && (hasBalance || hasAdditionalQuantity)) {\n    const totalOdds = <PoolCountUp\n      fontSansRegular\n      start={result}\n      end={result}\n    />\n\n    content = <>\n      {label} {splitLines && <br />}<span\n        className={`${font} font-bold`}\n      >1</span>\n\n      {altSplitLines ? <>\n        <div className='inline-block xs:block ml-1 xs:ml-0 -mt-1 text-xs sm:text-sm'>{t('in')} {totalOdds}</div>\n      </> : <>\n        &nbsp;{t('in')} {totalOdds}\n      </>} {sayEveryWeek && t('everyWeek')}\n    </>\n  }\n\n  if (asSpan) {\n    return <span\n      className={className}\n      style={style}\n    >\n      {content}\n    </span>\n  } else {\n    return <div\n      style={{\n        minHeight: 24\n      }}\n      className={className}\n      style={style}\n    >\n      {content}\n    </div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}