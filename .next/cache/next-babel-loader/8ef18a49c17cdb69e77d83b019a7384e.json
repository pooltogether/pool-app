{"ast":null,"code":"import { request } from 'graphql-request';\nimport { POOLTOGETHER_GRAPH_URIS } from 'lib/constants';\nimport { prizePoolsQuery } from 'lib/queries/prizePoolsQuery';\nexport const getPoolsData = async (chainId, contractAddresses, blockNumber) => {\n  var _data;\n\n  const variables = {\n    poolAddresses: contractAddresses.pools\n  };\n  const query = prizePoolsQuery(blockNumber);\n  let data;\n\n  try {\n    data = await request(POOLTOGETHER_GRAPH_URIS[chainId], query, variables);\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2));\n  }\n\n  return (_data = data) === null || _data === void 0 ? void 0 : _data.prizePools;\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/fetchers/getPoolsData.js"],"names":["request","POOLTOGETHER_GRAPH_URIS","prizePoolsQuery","getPoolsData","chainId","contractAddresses","blockNumber","variables","poolAddresses","pools","query","data","error","console","JSON","stringify","undefined","prizePools"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,uBAAT,QAAwC,eAAxC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,OAAP,EAAgBC,iBAAhB,EAAmCC,WAAnC,KAAmD;AAAA;;AAC7E,QAAMC,SAAS,GAAG;AAChBC,IAAAA,aAAa,EAAEH,iBAAiB,CAACI;AADjB,GAAlB;AAGA,QAAMC,KAAK,GAAGR,eAAe,CAACI,WAAD,CAA7B;AAEA,MAAIK,IAAJ;;AACA,MAAI;AACFA,IAAAA,IAAI,GAAG,MAAMX,OAAO,CAClBC,uBAAuB,CAACG,OAAD,CADL,EAElBM,KAFkB,EAGlBH,SAHkB,CAApB;AAKD,GAND,CAME,OAAOK,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcE,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsBI,SAAtB,EAAiC,CAAjC,CAAd;AACD;;AAED,kBAAOL,IAAP,0CAAO,MAAMM,UAAb;AACD,CAlBM","sourcesContent":["import { request } from 'graphql-request'\n\nimport { POOLTOGETHER_GRAPH_URIS } from 'lib/constants'\nimport { prizePoolsQuery } from 'lib/queries/prizePoolsQuery'\n\nexport const getPoolsData = async (chainId, contractAddresses, blockNumber) => {\n  const variables = {\n    poolAddresses: contractAddresses.pools\n  }\n  const query = prizePoolsQuery(blockNumber)\n\n  let data\n  try {\n    data = await request(\n      POOLTOGETHER_GRAPH_URIS[chainId],\n      query,\n      variables\n    )\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2))\n  }\n\n  return data?.prizePools\n}\n"]},"metadata":{},"sourceType":"module"}