{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport Cookies from 'js-cookie';\nimport { useRouter } from 'next/router';\nimport { ethers } from 'ethers'; // import { Magic, RPCError, RPCErrorCode } from 'magic-sdk'\n\nimport { COOKIE_OPTIONS, MAGIC_EMAIL } from 'lib/constants';\nimport { poolToast } from 'lib/utils/poolToast';\nexport var MagicContext = /*#__PURE__*/React.createContext();\nexport function MagicContextProvider(props) {\n  _s();\n\n  return __jsx(MagicContext.Provider, {\n    value: {\n      address: address,\n      provider: provider,\n      magic: magic,\n      email: email,\n      signedIn: signedIn,\n      signIn: signIn,\n      signOut: signOut\n    }\n  }, props.children);\n\n  var _useState = useState(),\n      magic = _useState[0],\n      setMagic = _useState[1];\n\n  var _useState2 = useState(),\n      provider = _useState2[0],\n      setProvider = _useState2[1];\n\n  var _useState3 = useState(),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(false),\n      signedIn = _useState5[0],\n      setSignedIn = _useState5[1];\n\n  var networkName = process.env.NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME;\n\n  var updateStateVars = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$magic$user$get, email, publicAddress;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return magic.user.getMetadata();\n\n            case 2:\n              _yield$magic$user$get = _context.sent;\n              email = _yield$magic$user$get.email;\n              publicAddress = _yield$magic$user$get.publicAddress;\n              setSignedIn(true);\n              setEmail(email);\n              setAddress(publicAddress); // const [ethBalance, setEthBalance] = useState('')\n              // const email = Cookies.get(MAGIC_EMAIL)\n\n              Cookies.set(MAGIC_EMAIL, email, COOKIE_OPTIONS);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateStateVars() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var m = new Magic(process.env.NEXT_JS_MAGIC_PUB_KEY, {\n      network: networkName === 'homestead' ? 'mainnet' : networkName\n    });\n    setMagic(m);\n    setProvider(new ethers.providers.Web3Provider(m.rpcProvider, process.env.NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME));\n  }, []);\n  useEffect(function () {\n    var checkSignedIn = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return magic.user.isLoggedIn();\n\n              case 2:\n                if (!_context2.sent) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                updateStateVars();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function checkSignedIn() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (magic && magic.user) {\n      checkSignedIn();\n    }\n  }, [magic]);\n\n  var signOut = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var logout;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (e) {\n                e.preventDefault();\n              }\n\n              _context3.next = 3;\n              return magic.user.logout();\n\n            case 3:\n              logout = _context3.sent;\n\n              if (logout) {\n                Cookies.remove(MAGIC_EMAIL, COOKIE_OPTIONS);\n                setSignedIn(false);\n                setEmail(undefined);\n                setAddress(undefined);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function signOut(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var signIn = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(formEmail, postSignInCallback) {\n      var did, isLoggedIn;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return magic.auth.loginWithMagicLink({\n                email: formEmail\n              });\n\n            case 3:\n              did = _context4.sent;\n              _context4.next = 6;\n              return magic.user.isLoggedIn();\n\n            case 6:\n              isLoggedIn = _context4.sent;\n\n              // magic.user.updateEmail({ email, showUI?= true })\n              if (isLoggedIn) {\n                updateStateVars();\n\n                if (postSignInCallback) {\n                  postSignInCallback();\n                }\n              }\n\n              _context4.next = 26;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(_context4.t0);\n              poolToast.error(_context4.t0.message);\n\n              if (!(_context4.t0 instanceof RPCError)) {\n                _context4.next = 26;\n                break;\n              }\n\n              _context4.t1 = _context4.t0.code;\n              _context4.next = _context4.t1 === RPCErrorCode.MagicLinkFailedVerification ? 18 : _context4.t1 === RPCErrorCode.MagicLinkExpired ? 20 : _context4.t1 === RPCErrorCode.MagicLinkRateLimited ? 22 : _context4.t1 === RPCErrorCode.UserAlreadyLoggedIn ? 24 : 26;\n              break;\n\n            case 18:\n              console.log('MagicLinkFailedVerification');\n              return _context4.abrupt(\"break\", 26);\n\n            case 20:\n              console.log('MagicLinkExpired');\n              return _context4.abrupt(\"break\", 26);\n\n            case 22:\n              console.log('MagicLinkRateLimited');\n              return _context4.abrupt(\"break\", 26);\n\n            case 24:\n              console.log('UserAlreadyLoggedIn');\n              return _context4.abrupt(\"break\", 26);\n\n            case 26:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 10]]);\n    }));\n\n    return function signIn(_x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(MagicContext.Provider, {\n    value: {\n      address: address,\n      provider: provider,\n      magic: magic,\n      email: email,\n      signedIn: signedIn,\n      signIn: signIn,\n      signOut: signOut\n    }\n  }, props.children);\n}\n\n_s(MagicContextProvider, \"7bYi55pQR28EdQzqvPf8SvmxmVA=\");\n\n_c = MagicContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MagicContextProvider\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/contextProviders/MagicContextProvider.jsx"],"names":["React","useEffect","useState","useContext","Cookies","useRouter","ethers","COOKIE_OPTIONS","MAGIC_EMAIL","poolToast","MagicContext","createContext","MagicContextProvider","props","address","provider","magic","email","signedIn","signIn","signOut","children","setMagic","setProvider","setEmail","setAddress","setSignedIn","networkName","process","env","NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME","updateStateVars","user","getMetadata","publicAddress","set","m","Magic","NEXT_JS_MAGIC_PUB_KEY","network","providers","Web3Provider","rpcProvider","checkSignedIn","isLoggedIn","e","preventDefault","logout","remove","undefined","formEmail","postSignInCallback","auth","loginWithMagicLink","did","console","error","message","RPCError","code","RPCErrorCode","MagicLinkFailedVerification","MagicLinkExpired","MagicLinkRateLimited","UserAlreadyLoggedIn","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport Cookies from 'js-cookie'\nimport { useRouter } from 'next/router'\nimport { ethers } from 'ethers'\n// import { Magic, RPCError, RPCErrorCode } from 'magic-sdk'\n\nimport {\n  COOKIE_OPTIONS,\n  MAGIC_EMAIL,\n} from 'lib/constants'\nimport { poolToast } from 'lib/utils/poolToast'\n\nexport const MagicContext = React.createContext()\n\nexport function MagicContextProvider(props) {\n  return <MagicContext.Provider\n    value={{\n      address,\n      provider,\n      magic,\n      email,\n      signedIn,\n      signIn,\n      signOut,\n    }}\n  >\n    {props.children}\n  </MagicContext.Provider>\n\n\n  const [magic, setMagic] = useState()\n  const [provider, setProvider] = useState()\n  const [email, setEmail] = useState()\n  const [address, setAddress] = useState()\n  const [signedIn, setSignedIn] = useState(false)\n\n  const networkName = process.env.NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME\n\n  const updateStateVars = async () => {\n    const { email, publicAddress } = await magic.user.getMetadata()\n\n    setSignedIn(true)\n    setEmail(email)\n    setAddress(publicAddress)\n    // const [ethBalance, setEthBalance] = useState('')\n    // const email = Cookies.get(MAGIC_EMAIL)\n\n    Cookies.set(\n      MAGIC_EMAIL,\n      email,\n      COOKIE_OPTIONS\n    )\n  }\n\n  useEffect(() => {\n    const m = new Magic(\n      process.env.NEXT_JS_MAGIC_PUB_KEY,\n      { network: networkName === 'homestead' ? 'mainnet' : networkName }\n    )\n    setMagic(m)\n\n    setProvider(\n      new ethers.providers.Web3Provider(\n        m.rpcProvider,\n        process.env.NEXT_JS_DEFAULT_ETHEREUM_NETWORK_NAME\n      )\n    )\n  }, [])\n\n\n  useEffect(() => {\n    const checkSignedIn = async () => {\n      if (await magic.user.isLoggedIn()) {\n        updateStateVars()\n      }\n    }\n\n    if (magic && magic.user) {\n      checkSignedIn()\n    }\n  }, [magic])\n\n  const signOut = async (e) => {\n    if (e) {\n      e.preventDefault()\n    }\n    \n    const logout = await magic.user.logout()\n    if (logout) {\n      Cookies.remove(MAGIC_EMAIL, COOKIE_OPTIONS)\n\n      setSignedIn(false)\n      setEmail(undefined)\n      setAddress(undefined)\n    }\n  }\n\n  const signIn = async (formEmail, postSignInCallback) => {\n    try {\n      const did = await magic\n        .auth\n        .loginWithMagicLink({ email: formEmail })\n\n      const isLoggedIn = await magic.user.isLoggedIn()\n\n      // magic.user.updateEmail({ email, showUI?= true })\n\n      if (isLoggedIn) {\n        updateStateVars()\n        \n        if (postSignInCallback) {\n          postSignInCallback()\n        }\n      }\n    } catch (err) {\n      console.error(err)\n      poolToast.error(err.message)\n\n      if (err instanceof RPCError) {\n        switch (err.code) {\n          case RPCErrorCode.MagicLinkFailedVerification:\n            console.log('MagicLinkFailedVerification')\n            break\n          case RPCErrorCode.MagicLinkExpired:\n            console.log('MagicLinkExpired')\n            break\n          case RPCErrorCode.MagicLinkRateLimited:\n            console.log('MagicLinkRateLimited')\n            break\n          case RPCErrorCode.UserAlreadyLoggedIn:\n            console.log('UserAlreadyLoggedIn')\n            break\n        }\n      }\n    }\n\n  }\n\n  return <MagicContext.Provider\n    value={{\n      address,\n      provider,\n      magic,\n      email,\n      signedIn,\n      signIn,\n      signOut,\n    }}\n  >\n    {props.children}\n  </MagicContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}