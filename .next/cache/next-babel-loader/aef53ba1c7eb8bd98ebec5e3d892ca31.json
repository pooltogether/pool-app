{"ast":null,"code":"import { toast, cssTransition } from 'react-toastify';\nvar Blur = cssTransition({\n  // enter: `Toastify__blur-enter`,\n  // exit: `Toastify__blur-exit`,\n  enter: \"blur-enter\",\n  exit: \"blur-exit\",\n  duration: [450, 400],\n  appendPosition: true\n}); // const CustomTransitions = cssTransition({\n//   enter: 'slideInUp',\n//   exit: 'slideIn',\n//   duration: [300, 100]\n// })\n\nvar DEFAULT_OPTIONS = {\n  transition: Blur\n};\nexport var poolToast = {\n  dismiss: function dismiss() {\n    toast.dismiss();\n  },\n  rainbow: function rainbow(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n    toast.dismiss();\n    toast(message, options);\n\n    if (window) {\n      setTimeout(toast.dismiss, 7000);\n    }\n  },\n  success: function success(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n    toast.dismiss();\n    toast.success(message, options);\n  },\n  error: function error(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n    toast.dismiss();\n    toast.error(message, options);\n  },\n  info: function info(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n    toast.dismiss();\n    toast.info(message, options);\n  },\n  warn: function warn(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n    toast.dismiss();\n    toast.warn(message, options);\n  }\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/utils/poolToast.js"],"names":["toast","cssTransition","Blur","enter","exit","duration","appendPosition","DEFAULT_OPTIONS","transition","poolToast","dismiss","rainbow","message","options","window","setTimeout","success","error","info","warn"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,aAAhB,QAAqC,gBAArC;AAEA,IAAMC,IAAI,GAAGD,aAAa,CAAC;AACzB;AACA;AACAE,EAAAA,KAAK,cAHoB;AAIzBC,EAAAA,IAAI,aAJqB;AAKzBC,EAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,CALe;AAMzBC,EAAAA,cAAc,EAAE;AANS,CAAD,CAA1B,C,CASA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAEN;AADU,CAAxB;AAIA,OAAO,IAAMO,SAAS,GAAG;AACvBC,EAAAA,OAAO,EAAE,mBAAM;AACbV,IAAAA,KAAK,CAACU,OAAN;AACD,GAHsB;AAIvBC,EAAAA,OAAO,EAAE,iBAACC,OAAD,EAAwC;AAAA,QAA9BC,OAA8B,uEAApBN,eAAoB;AAC/CP,IAAAA,KAAK,CAACU,OAAN;AACAV,IAAAA,KAAK,CAACY,OAAD,EAAUC,OAAV,CAAL;;AAEA,QAAIC,MAAJ,EAAY;AACVC,MAAAA,UAAU,CAACf,KAAK,CAACU,OAAP,EAAgB,IAAhB,CAAV;AACD;AACF,GAXsB;AAYvBM,EAAAA,OAAO,EAAE,iBAACJ,OAAD,EAAwC;AAAA,QAA9BC,OAA8B,uEAApBN,eAAoB;AAC/CP,IAAAA,KAAK,CAACU,OAAN;AACAV,IAAAA,KAAK,CAACgB,OAAN,CAAcJ,OAAd,EAAuBC,OAAvB;AACD,GAfsB;AAgBvBI,EAAAA,KAAK,EAAE,eAACL,OAAD,EAAwC;AAAA,QAA9BC,OAA8B,uEAApBN,eAAoB;AAC7CP,IAAAA,KAAK,CAACU,OAAN;AACAV,IAAAA,KAAK,CAACiB,KAAN,CAAYL,OAAZ,EAAqBC,OAArB;AACD,GAnBsB;AAoBvBK,EAAAA,IAAI,EAAE,cAACN,OAAD,EAAwC;AAAA,QAA9BC,OAA8B,uEAApBN,eAAoB;AAC5CP,IAAAA,KAAK,CAACU,OAAN;AACAV,IAAAA,KAAK,CAACkB,IAAN,CAAWN,OAAX,EAAoBC,OAApB;AACD,GAvBsB;AAwBvBM,EAAAA,IAAI,EAAE,cAACP,OAAD,EAAwC;AAAA,QAA9BC,OAA8B,uEAApBN,eAAoB;AAC5CP,IAAAA,KAAK,CAACU,OAAN;AACAV,IAAAA,KAAK,CAACmB,IAAN,CAAWP,OAAX,EAAoBC,OAApB;AACD;AA3BsB,CAAlB","sourcesContent":["import { toast, cssTransition } from 'react-toastify'\n\nconst Blur = cssTransition({\n  // enter: `Toastify__blur-enter`,\n  // exit: `Toastify__blur-exit`,\n  enter: `blur-enter`,\n  exit: `blur-exit`,\n  duration: [450, 400],\n  appendPosition: true\n});\n\n// const CustomTransitions = cssTransition({\n//   enter: 'slideInUp',\n//   exit: 'slideIn',\n//   duration: [300, 100]\n// })\n\nconst DEFAULT_OPTIONS = {\n  transition: Blur\n}\n\nexport const poolToast = {\n  dismiss: () => {\n    toast.dismiss()\n  },\n  rainbow: (message, options = DEFAULT_OPTIONS) => {\n    toast.dismiss()\n    toast(message, options)\n\n    if (window) {\n      setTimeout(toast.dismiss, 7000)\n    }\n  },\n  success: (message, options = DEFAULT_OPTIONS) => {\n    toast.dismiss()\n    toast.success(message, options)\n  },\n  error: (message, options = DEFAULT_OPTIONS) => {\n    toast.dismiss()\n    toast.error(message, options)\n  },\n  info: (message, options = DEFAULT_OPTIONS) => {\n    toast.dismiss()\n    toast.info(message, options)\n  },\n  warn: (message, options = DEFAULT_OPTIONS) => {\n    toast.dismiss()\n    toast.warn(message, options)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}