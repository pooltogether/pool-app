{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query prizePoolsQuery($poolAddresses: [String!]!) {\\n      prizePools(where: { id_in: $poolAddresses } \", \") {\\n        ...prizePoolFragment\\n      }\\n    }\\n    \", \"\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { prizePoolFragment } from 'lib/fragments/prizePoolFragment';\nexport var prizePoolsQuery = function prizePoolsQuery(number) {\n  var blockFilter = number > 0 ? \", block: { number: \".concat(number, \" }\") : '';\n  return gql(_templateObject(), blockFilter, prizePoolFragment);\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/queries/prizePoolsQuery.jsx"],"names":["gql","prizePoolFragment","prizePoolsQuery","number","blockFilter"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AACzC,MAAMC,WAAW,GAAGD,MAAM,GAAG,CAAT,gCAAmCA,MAAnC,UAAgD,EAApE;AAEA,SAAOH,GAAP,oBAEkDI,WAFlD,EAMIH,iBANJ;AAQD,CAXM","sourcesContent":["import gql from 'graphql-tag'\n\nimport { prizePoolFragment } from 'lib/fragments/prizePoolFragment'\n\nexport const prizePoolsQuery = (number) => {\n  const blockFilter = number > 0 ? `, block: { number: ${number} }` : ''\n\n  return gql`\n    query prizePoolsQuery($poolAddresses: [String!]!) {\n      prizePools(where: { id_in: $poolAddresses } ${blockFilter}) {\n        ...prizePoolFragment\n      }\n    }\n    ${prizePoolFragment}\n  `\n}"]},"metadata":{},"sourceType":"module"}