{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { useUniswapTokensQuery } from 'lib/hooks/useUniswapTokensQuery';\nexport function UniswapData(props) {\n  _s();\n\n  var blockNumber = props.blockNumber || -1;\n  var children = props.children,\n      poolAddress = props.poolAddress,\n      addresses = props.addresses;\n\n  var _useContext = useContext(AuthControllerContext),\n      chainId = _useContext.chainId,\n      pauseQueries = _useContext.pauseQueries;\n\n  var _useUniswapTokensQuer = useUniswapTokensQuery(pauseQueries, chainId, poolAddress, blockNumber, addresses),\n      status = _useUniswapTokensQuer.status,\n      data = _useUniswapTokensQuer.data,\n      error = _useUniswapTokensQuer.error,\n      isFetching = _useUniswapTokensQuer.isFetching;\n\n  if (error) {\n    console.warn(error);\n  }\n\n  return children({\n    data: data\n  });\n}\n\n_s(UniswapData, \"hRnIabP/8Hu6UtqWmFLtF1qtd+k=\", false, function () {\n  return [useUniswapTokensQuery];\n});\n\n_c = UniswapData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UniswapData\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/UniswapData.jsx"],"names":["useContext","AuthControllerContext","useUniswapTokensQuery","UniswapData","props","blockNumber","children","poolAddress","addresses","chainId","pauseQueries","status","data","error","isFetching","console","warn"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACjC,MAAIC,WAAW,GAAGD,KAAK,CAACC,WAAN,IAAqB,CAAC,CAAxC;AADiC,MAI/BC,QAJ+B,GAO7BF,KAP6B,CAI/BE,QAJ+B;AAAA,MAK/BC,WAL+B,GAO7BH,KAP6B,CAK/BG,WAL+B;AAAA,MAM/BC,SAN+B,GAO7BJ,KAP6B,CAM/BI,SAN+B;;AAAA,oBASCR,UAAU,CAACC,qBAAD,CATX;AAAA,MASzBQ,OATyB,eASzBA,OATyB;AAAA,MAShBC,YATgB,eAShBA,YATgB;;AAAA,8BAWWR,qBAAqB,CAC/DQ,YAD+D,EAE/DD,OAF+D,EAG/DF,WAH+D,EAI/DF,WAJ+D,EAK/DG,SAL+D,CAXhC;AAAA,MAWzBG,MAXyB,yBAWzBA,MAXyB;AAAA,MAWjBC,IAXiB,yBAWjBA,IAXiB;AAAA,MAWXC,KAXW,yBAWXA,KAXW;AAAA,MAWJC,UAXI,yBAWJA,UAXI;;AAmBjC,MAAID,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACD;;AAED,SAAOP,QAAQ,CAAC;AACdM,IAAAA,IAAI,EAAJA;AADc,GAAD,CAAf;AAID;;GA3BeT,W;UAW8BD,qB;;;KAX9BC,W","sourcesContent":["import { useContext } from 'react'\n\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { useUniswapTokensQuery } from 'lib/hooks/useUniswapTokensQuery'\n\nexport function UniswapData(props) {\n  let blockNumber = props.blockNumber || -1\n\n  const {\n    children,\n    poolAddress,\n    addresses,\n  } = props\n\n  const { chainId, pauseQueries } = useContext(AuthControllerContext)\n\n  const { status, data, error, isFetching } = useUniswapTokensQuery(\n    pauseQueries,\n    chainId,\n    poolAddress,\n    blockNumber,\n    addresses\n  )\n\n  if (error) {\n    console.warn(error)\n  }\n\n  return children({ \n    data\n  })\n\n}\n"]},"metadata":{},"sourceType":"module"}