{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport classnames from 'classnames';\nimport { useAtom } from 'jotai';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { transactionsAtom } from 'lib/atoms/transactionsAtom';\nimport { LoadingSpinner } from 'lib/components/LoadingSpinner';\nimport { PoolCountUp } from 'lib/components/PoolCountUp';\nimport { ProfileAvatar } from 'lib/components/ProfileAvatar';\nimport { ProfileName } from 'lib/components/ProfileName';\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther';\nexport function AccountButton(props) {\n  _s();\n\n  var openTransactions = props.openTransactions;\n\n  var _useAtom = useAtom(transactionsAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 1),\n      transactions = _useAtom2[0];\n\n  var _useContext = useContext(AuthControllerContext),\n      ethBalance = _useContext.ethBalance;\n\n  var pendingTransactionsCount = transactions.filter(function (t) {\n    return !t.completed;\n  }).length;\n\n  var pendingTxJsx = __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"relative inline-block mr-1\",\n    style: {\n      top: 3,\n      transform: 'scale(0.7)'\n    }\n  }, __jsx(LoadingSpinner, null)), \" \", pendingTransactionsCount, \" pending\");\n\n  var ethBalanceNumber = ethBalance && Number(displayAmountInEther(ethBalance, {\n    precision: 2\n  }));\n  return __jsx(React.Fragment, null, (ethBalance || pendingTransactionsCount > 0) && __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: openTransactions,\n    className: \"flex items-center text-default-soft hover:text-inverse text-xxs sm:text-xs trans tracking-wider outline-none focus:outline-none active:outline-none hidden xs:block relative block mr-2 bg-default hover:bg-body rounded-l-full pl-2 xs:pl-3 pr-6 z-10 border-2 border-accent-4 hover:border-primary -mr-4 h-8\"\n  }, pendingTransactionsCount > 0 ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"text-inverse hover:text-green font-bold\"\n  }, pendingTxJsx)) : __jsx(React.Fragment, null, __jsx(PoolCountUp, {\n    start: 0,\n    end: ethBalanceNumber,\n    decimals: 2\n  }), \" ETH\"))), __jsx(\"button\", {\n    onClick: openTransactions,\n    className: \"text-highlight-2 font-bold hover:text-inverse text-xxs sm:text-sm trans trans-fastest tracking-wider outline-none focus:outline-none active:outline-none z-20 h-8\"\n  }, __jsx(\"div\", {\n    className: classnames('flex items-center bg-default hover:bg-body rounded-full border-2 border-highlight-2 px-2 trans trans-fastest z-20 h-8')\n  }, pendingTransactionsCount > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"block xs:hidden text-green hover:text-inverse\"\n  }, pendingTxJsx)), __jsx(ProfileAvatar, null), \" \", __jsx(ProfileName, null))));\n}\n\n_s(AccountButton, \"gQCPhqyr1deEtAMG3PmUDbHZqxc=\", false, function () {\n  return [useAtom];\n});\n\n_c = AccountButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountButton\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/AccountButton.jsx"],"names":["React","useContext","classnames","useAtom","AuthControllerContext","transactionsAtom","LoadingSpinner","PoolCountUp","ProfileAvatar","ProfileName","displayAmountInEther","AccountButton","props","openTransactions","transactions","ethBalance","pendingTransactionsCount","filter","t","completed","length","pendingTxJsx","top","transform","ethBalanceNumber","Number","precision"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,oBAAT,QAAqC,gCAArC;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,MAC3BC,gBAD2B,GACND,KADM,CAC3BC,gBAD2B;;AAAA,iBAGZV,OAAO,CAACE,gBAAD,CAHK;AAAA;AAAA,MAG5BS,YAH4B;;AAAA,oBAKZb,UAAU,CAACG,qBAAD,CALE;AAAA,MAK3BW,UAL2B,eAK3BA,UAL2B;;AAUnC,MAAMC,wBAAwB,GAAGF,YAAY,CAC1CG,MAD8B,CACvB,UAAAC,CAAC;AAAA,WAAI,CAACA,CAAC,CAACC,SAAP;AAAA,GADsB,EAE9BC,MAFH;;AAIA,MAAMC,YAAY,GAAG,4BACnB;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE,CADA;AAELC,MAAAA,SAAS,EAAE;AAFN;AAFT,KAOE,MAAC,cAAD,OAPF,CADmB,OASXP,wBATW,aAArB;;AAYA,MAAMQ,gBAAgB,GAAGT,UAAU,IAAIU,MAAM,CAACf,oBAAoB,CAChEK,UADgE,EAEhE;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAFgE,CAArB,CAA7C;AAKA,SAAO,4BACJ,CAACX,UAAU,IAAIC,wBAAwB,GAAG,CAA1C,KAAgD,4BAC/C;AACE,IAAA,OAAO,EAAEH,gBADX;AAEE,IAAA,SAAS,EAAC;AAFZ,KAIGG,wBAAwB,GAAG,CAA3B,GAA+B,4BAC9B;AAAM,IAAA,SAAS,EAAC;AAAhB,KACGK,YADH,CAD8B,CAA/B,GAIK,4BACJ,MAAC,WAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,GAAG,EAAEG,gBAFP;AAGE,IAAA,QAAQ,EAAE;AAHZ,IADI,SARR,CAD+C,CAD5C,EAoBL;AACE,IAAA,OAAO,EAAEX,gBADX;AAEE,IAAA,SAAS,EAAC;AAFZ,KAIE;AACE,IAAA,SAAS,EAAEX,UAAU,CACnB,uHADmB;AADvB,KAKGc,wBAAwB,GAAG,CAA3B,IAAgC,4BAC/B;AAAK,IAAA,SAAS,EAAC;AAAf,KACGK,YADH,CAD+B,CALnC,EAWE,MAAC,aAAD,OAXF,OAWoB,MAAC,WAAD,OAXpB,CAJF,CApBK,CAAP;AAuCD;;GAtEeV,a;UAGSR,O;;;KAHTQ,a","sourcesContent":["import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport { useAtom } from 'jotai'\n\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { transactionsAtom } from 'lib/atoms/transactionsAtom'\nimport { LoadingSpinner } from 'lib/components/LoadingSpinner'\nimport { PoolCountUp } from 'lib/components/PoolCountUp'\nimport { ProfileAvatar } from 'lib/components/ProfileAvatar'\nimport { ProfileName } from 'lib/components/ProfileName'\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther'\n\nexport function AccountButton(props) {\n  const { openTransactions } = props\n\n  const [transactions] = useAtom(transactionsAtom)\n\n  const { ethBalance } = useContext(AuthControllerContext)\n\n  \n  \n\n  const pendingTransactionsCount = transactions\n    .filter(t => !t.completed)\n    .length\n\n  const pendingTxJsx = <>\n    <div\n      className='relative inline-block mr-1'\n      style={{\n        top: 3,\n        transform: 'scale(0.7)'\n      }}\n    >\n      <LoadingSpinner />\n    </div> {pendingTransactionsCount} pending\n  </>\n\n  const ethBalanceNumber = ethBalance && Number(displayAmountInEther(\n    ethBalance,\n    { precision: 2 }\n  ))\n\n  return <>\n    {(ethBalance || pendingTransactionsCount > 0) && <>\n      <button\n        onClick={openTransactions}\n        className='flex items-center text-default-soft hover:text-inverse text-xxs sm:text-xs trans tracking-wider outline-none focus:outline-none active:outline-none hidden xs:block relative block mr-2 bg-default hover:bg-body rounded-l-full pl-2 xs:pl-3 pr-6 z-10 border-2 border-accent-4 hover:border-primary -mr-4 h-8'\n      >\n        {pendingTransactionsCount > 0 ? <>\n          <span className='text-inverse hover:text-green font-bold'>\n            {pendingTxJsx}\n          </span>\n        </> : <>\n          <PoolCountUp\n            start={0}\n            end={ethBalanceNumber}\n            decimals={2}\n          /> ETH\n        </>}\n      </button>\n    </>}\n\n    <button\n      onClick={openTransactions}\n      className='text-highlight-2 font-bold hover:text-inverse text-xxs sm:text-sm trans trans-fastest tracking-wider outline-none focus:outline-none active:outline-none z-20 h-8'\n    >\n      <div\n        className={classnames(\n          'flex items-center bg-default hover:bg-body rounded-full border-2 border-highlight-2 px-2 trans trans-fastest z-20 h-8',\n        )}\n      >\n        {pendingTransactionsCount > 0 && <>\n          <div className='block xs:hidden text-green hover:text-inverse'>\n            {pendingTxJsx}\n          </div>\n        </>}\n        \n        <ProfileAvatar /> <ProfileName />\n      </div>\n    </button>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}