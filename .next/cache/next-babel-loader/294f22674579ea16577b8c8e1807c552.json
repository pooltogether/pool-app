{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useTranslation, Trans } from 'lib/../i18n';\nimport { PoolNumber } from 'lib/components/PoolNumber';\nimport { formatBigNumber } from 'lib/utils/formatBigNumber';\nimport { numberWithCommas } from 'lib/utils/numberWithCommas';\nexport function WithdrawOdds(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    className,\n    pool,\n    style,\n    usersBalance\n  } = props;\n\n  if (usersBalance === 0) {\n    return null;\n  }\n\n  let newOdds = null;\n  const quantity = Number(props.quantity) * -1;\n  let preTicketSupplyFloat = Number(formatBigNumber(pool === null || pool === void 0 ? void 0 : pool.ticketSupply, pool));\n  const currentOdds = numberWithCommas(preTicketSupplyFloat / usersBalance);\n  let postTicketSupplyFloat = preTicketSupplyFloat + quantity;\n  let postWithdrawBalance = Number(usersBalance) + quantity;\n\n  if (postWithdrawBalance < 1) {\n    newOdds = 0;\n  } else {\n    newOdds = numberWithCommas(postTicketSupplyFloat / postWithdrawBalance);\n  }\n\n  let content = __jsx(React.Fragment, null, quantity !== 0 ? __jsx(React.Fragment, null, __jsx(Trans, {\n    i18nKey: \"yourOddsWillReduceTo\",\n    defaults: \"Your odds will be reduced from 1 in {{currentOdds}} to 1 in {{newOdds}}\",\n    components: {\n      number: __jsx(PoolNumber, null)\n    },\n    values: {\n      currentOdds,\n      newOdds\n    }\n  })) : __jsx(React.Fragment, null, t('currentOddsOfWinning'), \" 1 \", t('in'), \" \", currentOdds));\n\n  if (newOdds === 0 || !isFinite(newOdds)) {\n    content = t('withdrawingEverythingMakeYouIneligible');\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      minHeight: 24\n    },\n    className: className,\n    style: style\n  }, content);\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/WithdrawOdds.jsx"],"names":["React","useTranslation","Trans","PoolNumber","formatBigNumber","numberWithCommas","WithdrawOdds","props","t","className","pool","style","usersBalance","newOdds","quantity","Number","preTicketSupplyFloat","ticketSupply","currentOdds","postTicketSupplyFloat","postWithdrawBalance","content","number","isFinite","minHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,aAAtC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AAEA,QAAM;AACJQ,IAAAA,SADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFL,KALJ;;AAOA,MAAIK,YAAY,KAAK,CAArB,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED,MAAIC,OAAO,GAAG,IAAd;AAEA,QAAMC,QAAQ,GAAGC,MAAM,CAACR,KAAK,CAACO,QAAP,CAAN,GAAyB,CAAC,CAA3C;AAEA,MAAIE,oBAAoB,GAAGD,MAAM,CAACX,eAAe,CAACM,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,YAAP,EAAqBP,IAArB,CAAhB,CAAjC;AACA,QAAMQ,WAAW,GAAGb,gBAAgB,CAACW,oBAAoB,GAAGJ,YAAxB,CAApC;AAEA,MAAIO,qBAAqB,GAAGH,oBAAoB,GAAGF,QAAnD;AACA,MAAIM,mBAAmB,GAAGL,MAAM,CAACH,YAAD,CAAN,GAAuBE,QAAjD;;AACA,MAAIM,mBAAmB,GAAG,CAA1B,EAA6B;AAC3BP,IAAAA,OAAO,GAAG,CAAV;AACD,GAFD,MAEO;AACLA,IAAAA,OAAO,GAAGR,gBAAgB,CAACc,qBAAqB,GAAGC,mBAAzB,CAA1B;AACD;;AAED,MAAIC,OAAO,GAAG,4BACXP,QAAQ,KAAK,CAAb,GAAiB,4BAChB,MAAC,KAAD;AACE,IAAA,OAAO,EAAC,sBADV;AAEE,IAAA,QAAQ,EAAC,yEAFX;AAGE,IAAA,UAAU,EAAE;AACVQ,MAAAA,MAAM,EAAE,MAAC,UAAD;AADE,KAHd;AAME,IAAA,MAAM,EAAE;AACNJ,MAAAA,WADM;AAENL,MAAAA;AAFM;AANV,IADgB,CAAjB,GAYK,4BACHL,CAAC,CAAC,sBAAD,CADE,SAC2BA,CAAC,CAAC,IAAD,CAD5B,OACqCU,WADrC,CAbM,CAAd;;AAkBA,MAAIL,OAAO,KAAK,CAAZ,IAAiB,CAACU,QAAQ,CAACV,OAAD,CAA9B,EAAyC;AACvCQ,IAAAA,OAAO,GAAGb,CAAC,CAAC,wCAAD,CAAX;AACD;;AAED,SAAO;AACL,IAAA,KAAK,EAAE;AACLgB,MAAAA,SAAS,EAAE;AADN,KADF;AAIL,IAAA,SAAS,EAAEf,SAJN;AAKL,IAAA,KAAK,EAAEE;AALF,KAOJU,OAPI,CAAP;AASD","sourcesContent":["import React from 'react'\n\nimport { useTranslation, Trans } from 'lib/../i18n'\nimport { PoolNumber } from 'lib/components/PoolNumber'\nimport { formatBigNumber } from 'lib/utils/formatBigNumber'\nimport { numberWithCommas } from 'lib/utils/numberWithCommas'\n\nexport function WithdrawOdds(props) {\n  const { t } = useTranslation()\n\n  const {\n    className,\n    pool,\n    style,\n    usersBalance,\n  } = props\n\n  if (usersBalance === 0) {\n    return null\n  }\n\n  let newOdds = null\n\n  const quantity = Number(props.quantity) * -1\n\n  let preTicketSupplyFloat = Number(formatBigNumber(pool?.ticketSupply, pool))\n  const currentOdds = numberWithCommas(preTicketSupplyFloat / usersBalance)\n\n  let postTicketSupplyFloat = preTicketSupplyFloat + quantity\n  let postWithdrawBalance = Number(usersBalance) + quantity\n  if (postWithdrawBalance < 1) {\n    newOdds = 0\n  } else {\n    newOdds = numberWithCommas(postTicketSupplyFloat / postWithdrawBalance)\n  }\n\n  let content = <>\n    {quantity !== 0 ? <>\n      <Trans\n        i18nKey='yourOddsWillReduceTo'\n        defaults='Your odds will be reduced from 1 in {{currentOdds}} to 1 in {{newOdds}}'\n        components={{\n          number: <PoolNumber />,\n        }}\n        values={{\n          currentOdds,\n          newOdds\n        }}\n      />\n    </> : <>\n      {t('currentOddsOfWinning')} 1 {t('in')} {currentOdds}\n    </>} \n  </>\n\n  if (newOdds === 0 || !isFinite(newOdds)) {\n    content = t('withdrawingEverythingMakeYouIneligible')\n  }\n\n  return <div\n    style={{\n      minHeight: 24\n    }}\n    className={className}\n    style={style}\n  >\n    {content}\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}