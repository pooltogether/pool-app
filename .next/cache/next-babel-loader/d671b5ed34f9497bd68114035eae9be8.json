{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useAtom } from 'jotai';\nimport { useTranslation } from 'lib/../i18n';\nimport { transactionsAtom } from 'lib/atoms/transactionsAtom';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { TransactionsListItem } from 'lib/components/TransactionsListItem';\nimport { clearPreviousTransactions } from 'lib/services/clearPreviousTransactions';\nexport function TransactionsList(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useAtom = useAtom(transactionsAtom),\n      _useAtom2 = _slicedToArray(_useAtom, 2),\n      transactions = _useAtom2[0],\n      setTransactions = _useAtom2[1];\n\n  var _useContext = useContext(AuthControllerContext),\n      chainId = _useContext.chainId,\n      usersAddress = _useContext.usersAddress;\n\n  var notCancelledTransactions = transactions.filter(function (t) {\n    return !t.cancelled;\n  }).reverse();\n  var pendingTransactionsCount = transactions.filter(function (t) {\n    return !t.completed && !t.cancelled;\n  }).length;\n  var pastTransactionsCount = transactions.filter(function (t) {\n    return t.completed && !t.cancelled;\n  }).length;\n\n  var handleClearPrevious = function handleClearPrevious(e) {\n    e.preventDefault();\n\n    if (usersAddress, chainId) {\n      clearPreviousTransactions(transactions, setTransactions, usersAddress, chainId);\n    }\n  };\n\n  if (!usersAddress) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"px-8 sm:px-10 pt-8\"\n  }, __jsx(\"div\", {\n    className: \"flex justify-between items-center text-xxs xs:text-xs uppercase font-bold text-accent-3\"\n  }, __jsx(\"div\", null, t('recentTransactions'), \" \", pendingTransactionsCount > 0 && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"text-accent-1 text-xxxs uppercase opacity-50\"\n  }, t('pendingTransactionsCount', {\n    count: pendingTransactionsCount\n  })))), pastTransactionsCount > 0 && __jsx(React.Fragment, null, __jsx(\"button\", {\n    onClick: handleClearPrevious,\n    className: \"inline-block text-xxs bg-body rounded-full border-2 border-accent-4 px-2 trans trans-fastest font-bold\"\n  }, t('clearHistory'))))), __jsx(\"div\", {\n    className: \"dialog-inner-content flex-grow relative flex flex-col w-full pb-2 text-xs sm:text-sm\"\n  }, notCancelledTransactions.length === 0 ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"text-default-soft px-8 sm:px-10 pb-4 uppercase text-xs mt-4\"\n  }, t('currentlyNoActiveTransactions'))) : __jsx(React.Fragment, null, __jsx(\"ul\", {\n    className: \"transactions-ui-list overflow-x-hidden overflow-y-auto px-8 sm:px-10 py-4\"\n  }, notCancelledTransactions.map(function (tx) {\n    return __jsx(TransactionsListItem, {\n      key: tx.id,\n      tx: tx\n    });\n  })))));\n}\n\n_s(TransactionsList, \"jt0HKV09jZC3xszpzwW4EEgvXoI=\", false, function () {\n  return [useTranslation, useAtom];\n});\n\n_c = TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/TransactionsList.jsx"],"names":["React","useContext","useAtom","useTranslation","transactionsAtom","AuthControllerContext","TransactionsListItem","clearPreviousTransactions","TransactionsList","props","t","transactions","setTransactions","chainId","usersAddress","notCancelledTransactions","filter","cancelled","reverse","pendingTransactionsCount","completed","length","pastTransactionsCount","handleClearPrevious","e","preventDefault","count","map","tx","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,SAASC,yBAAT,QAA0C,wCAA1C;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAAA,wBACxBN,cAAc,EADU;AAAA,MAC9BO,CAD8B,mBAC9BA,CAD8B;;AAAA,iBAGER,OAAO,CAACE,gBAAD,CAHT;AAAA;AAAA,MAG/BO,YAH+B;AAAA,MAGjBC,eAHiB;;AAAA,oBAKJX,UAAU,CAACI,qBAAD,CALN;AAAA,MAK9BQ,OAL8B,eAK9BA,OAL8B;AAAA,MAKrBC,YALqB,eAKrBA,YALqB;;AAOtC,MAAMC,wBAAwB,GAAGJ,YAAY,CAC1CK,MAD8B,CACvB,UAAAN,CAAC;AAAA,WAAI,CAACA,CAAC,CAACO,SAAP;AAAA,GADsB,EAE9BC,OAF8B,EAAjC;AAIA,MAAMC,wBAAwB,GAAGR,YAAY,CAC1CK,MAD8B,CACvB,UAAAN,CAAC;AAAA,WAAI,CAACA,CAAC,CAACU,SAAH,IAAgB,CAACV,CAAC,CAACO,SAAvB;AAAA,GADsB,EAE9BI,MAFH;AAIA,MAAMC,qBAAqB,GAAGX,YAAY,CACvCK,MAD2B,CACpB,UAAAN,CAAC;AAAA,WAAIA,CAAC,CAACU,SAAF,IAAe,CAACV,CAAC,CAACO,SAAtB;AAAA,GADmB,EAE3BI,MAFH;;AAIA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,CAAD,EAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIX,YAAY,EAAED,OAAlB,EAA2B;AACzBN,MAAAA,yBAAyB,CACvBI,YADuB,EAEvBC,eAFuB,EAGvBE,YAHuB,EAIvBD,OAJuB,CAAzB;AAMD;AACF,GAXD;;AAaA,MAAI,CAACC,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,SAAO,4BACL;AACE,IAAA,SAAS,EAAC;AADZ,KAGE;AACE,IAAA,SAAS,EAAC;AADZ,KAGE,mBACGJ,CAAC,CAAC,oBAAD,CADJ,OAC6BS,wBAAwB,GAAG,CAA3B,IAAgC,4BACzD;AAAM,IAAA,SAAS,EAAC;AAAhB,KACGT,CAAC,CAAC,0BAAD,EAA6B;AAAEgB,IAAAA,KAAK,EAAEP;AAAT,GAA7B,CADJ,CADyD,CAD7D,CAHF,EAWGG,qBAAqB,GAAG,CAAxB,IAA6B,4BAC5B;AACE,IAAA,OAAO,EAAEC,mBADX;AAEE,IAAA,SAAS,EAAC;AAFZ,KAIGb,CAAC,CAAC,cAAD,CAJJ,CAD4B,CAXhC,CAHF,CADK,EA0BL;AACE,IAAA,SAAS,EAAC;AADZ,KAGGK,wBAAwB,CAACM,MAAzB,KAAoC,CAApC,GAAwC,4BACvC;AACE,IAAA,SAAS,EAAC;AADZ,KAGGX,CAAC,CAAC,+BAAD,CAHJ,CADuC,CAAxC,GAOK,4BACF;AACE,IAAA,SAAS,EAAC;AADZ,KAGGK,wBAAwB,CAACY,GAAzB,CAA6B,UAAAC,EAAE,EAAI;AAClC,WAAO,MAAC,oBAAD;AACL,MAAA,GAAG,EAAEA,EAAE,CAACC,EADH;AAEL,MAAA,EAAE,EAAED;AAFC,MAAP;AAID,GALA,CAHH,CADE,CAVR,CA1BK,CAAP;AAoDD;;GAxFepB,gB;UACAL,c,EAE0BD,O;;;KAH1BM,gB","sourcesContent":["import React, { useContext } from 'react'\nimport { useAtom } from 'jotai'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { transactionsAtom } from 'lib/atoms/transactionsAtom'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { TransactionsListItem } from 'lib/components/TransactionsListItem'\nimport { clearPreviousTransactions } from 'lib/services/clearPreviousTransactions'\n\nexport function TransactionsList(props) {\n  const { t } = useTranslation()\n\n  const [transactions, setTransactions] = useAtom(transactionsAtom)\n\n  const { chainId, usersAddress } = useContext(AuthControllerContext)\n\n  const notCancelledTransactions = transactions\n    .filter(t => !t.cancelled)\n    .reverse()\n\n  const pendingTransactionsCount = transactions\n    .filter(t => !t.completed && !t.cancelled)\n    .length\n  \n  const pastTransactionsCount = transactions\n    .filter(t => t.completed && !t.cancelled)\n    .length\n\n  const handleClearPrevious = (e) => {\n    e.preventDefault()\n\n    if (usersAddress, chainId) {\n      clearPreviousTransactions(\n        transactions,\n        setTransactions,\n        usersAddress,\n        chainId\n      )\n    }\n  }\n\n  if (!usersAddress) {\n    return null\n  }\n\n  return <>\n    <div\n      className='px-8 sm:px-10 pt-8'\n    >\n      <div\n        className='flex justify-between items-center text-xxs xs:text-xs uppercase font-bold text-accent-3'\n      >\n        <div>\n          {t('recentTransactions')} {pendingTransactionsCount > 0 && <>\n            <span className='text-accent-1 text-xxxs uppercase opacity-50'>\n              {t('pendingTransactionsCount', { count: pendingTransactionsCount })}\n            </span>\n          </>}\n        </div>\n        \n        {pastTransactionsCount > 0 && <>\n          <button\n            onClick={handleClearPrevious}\n            className='inline-block text-xxs bg-body rounded-full border-2 border-accent-4 px-2 trans trans-fastest font-bold'\n          >\n            {t('clearHistory')}\n          </button>\n        </>}\n      </div>\n    </div>\n\n    <div\n      className='dialog-inner-content flex-grow relative flex flex-col w-full pb-2 text-xs sm:text-sm'\n    >\n      {notCancelledTransactions.length === 0 ? <>\n        <div\n          className='text-default-soft px-8 sm:px-10 pb-4 uppercase text-xs mt-4'\n        >\n          {t('currentlyNoActiveTransactions')}\n          {/* CURRENTLY NO ACTIVE TRANSACTIONS */}\n        </div>\n      </> : <>\n          <ul\n            className='transactions-ui-list overflow-x-hidden overflow-y-auto px-8 sm:px-10 py-4'\n          >\n            {notCancelledTransactions.map(tx => {\n              return <TransactionsListItem\n                key={tx.id}\n                tx={tx}\n              />\n            })}\n          </ul>\n        </>}\n    </div>\n          \n    \n  </>\n}"]},"metadata":{},"sourceType":"module"}