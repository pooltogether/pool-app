(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([[9],{

/***/ "./lib/services/initOnboard.js":
/*!*************************************!*\
  !*** ./lib/services/initOnboard.js ***!
  \*************************************/
/*! exports provided: initOnboard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initOnboard\", function() { return initOnboard; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _pooltogether_bnc_onboard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pooltogether/bnc-onboard */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard.js\");\n/* harmony import */ var lib_utils_networkNameToChainId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lib/utils/networkNameToChainId */ \"./lib/utils/networkNameToChainId.js\");\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\")('pool-app:initOnboard');\n\nvar INFURA_KEY = \"5e378f49a3994737940a897b2d95222b\";\nvar FORTMATIC_KEY =  false || \"pk_test_BC1966CB2D1478D7\";\nvar PORTIS_KEY = \"59408c8d-a0a2-42df-ba09-f1372ddbe3e1\";\nvar networkName = \"mainnet\";\nvar networkId = Object(lib_utils_networkNameToChainId__WEBPACK_IMPORTED_MODULE_2__[\"networkNameToChainId\"])(networkName);\nvar RPC_URL = networkName && INFURA_KEY ? \"https://\".concat(networkName, \".infura.io/v3/\").concat(INFURA_KEY) : 'http://localhost:8545';\nvar cookieOptions = {\n  sameSite: 'strict'\n};\n\nif (false) {}\n\nvar APP_NAME = 'PoolTogether';\nvar WALLETS_CONFIG = [{\n  walletName: 'metamask',\n  preferred: true\n}, {\n  walletName: 'coinbase',\n  preferred: true\n}, {\n  walletName: 'trust',\n  preferred: true,\n  rpcUrl: RPC_URL\n}, {\n  walletName: 'trezor',\n  appUrl: 'https://app.pooltogether.com',\n  email: 'hello@pooltogether.com',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'ledger',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'fortmatic',\n  apiKey: FORTMATIC_KEY,\n  preferred: true\n}, {\n  walletName: 'walletConnect',\n  infuraKey: INFURA_KEY,\n  preferred: true\n}, {\n  walletName: 'walletLink',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'imToken',\n  rpcUrl: RPC_URL,\n  preferred: true\n}, {\n  walletName: 'dcent'\n}, {\n  walletName: 'huobiwallet',\n  rpcUrl: RPC_URL\n}, {\n  walletName: 'portis',\n  apiKey: PORTIS_KEY\n}, {\n  walletName: 'authereum'\n}, {\n  walletName: 'dapper'\n}, {\n  walletName: 'status'\n}, {\n  walletName: 'torus'\n}, {\n  walletName: 'lattice',\n  rpcUrl: RPC_URL,\n  appName: APP_NAME\n}, {\n  walletName: 'mykey',\n  rpcUrl: RPC_URL\n}, {\n  walletName: 'opera'\n}, {\n  walletName: 'operaTouch'\n}, {\n  walletName: 'web3Wallet'\n}];\nvar initOnboard = function initOnboard(subscriptions) {\n  var onboard = _pooltogether_bnc_onboard__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n  debug('RUNNING initOnboard!');\n  return onboard({\n    hideBranding: true,\n    networkId: networkId,\n    darkMode: true,\n    subscriptions: subscriptions,\n    walletSelect: {\n      wallets: WALLETS_CONFIG\n    },\n    walletCheck: [{\n      checkName: 'derivationPath'\n    }, {\n      checkName: 'connect'\n    }, {\n      checkName: 'accounts'\n    }, {\n      checkName: 'network'\n    } // { checkName: 'balance' }\n    ]\n  });\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3NlcnZpY2VzL2luaXRPbmJvYXJkLmpzPzE4YTAiXSwibmFtZXMiOlsiZGVidWciLCJyZXF1aXJlIiwiSU5GVVJBX0tFWSIsInByb2Nlc3MiLCJGT1JUTUFUSUNfS0VZIiwiUE9SVElTX0tFWSIsIm5ldHdvcmtOYW1lIiwibmV0d29ya0lkIiwibmV0d29ya05hbWVUb0NoYWluSWQiLCJSUENfVVJMIiwiY29va2llT3B0aW9ucyIsInNhbWVTaXRlIiwiQVBQX05BTUUiLCJXQUxMRVRTX0NPTkZJRyIsIndhbGxldE5hbWUiLCJwcmVmZXJyZWQiLCJycGNVcmwiLCJhcHBVcmwiLCJlbWFpbCIsImFwaUtleSIsImluZnVyYUtleSIsImFwcE5hbWUiLCJpbml0T25ib2FyZCIsInN1YnNjcmlwdGlvbnMiLCJvbmJvYXJkIiwiT25ib2FyZCIsImhpZGVCcmFuZGluZyIsImRhcmtNb2RlIiwid2FsbGV0U2VsZWN0Iiwid2FsbGV0cyIsIndhbGxldENoZWNrIiwiY2hlY2tOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBRUE7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxtQkFBTyxDQUFDLGtEQUFELENBQVAsQ0FBaUIsc0JBQWpCLENBQWQ7O0FBRUEsSUFBTUMsVUFBVSxHQUFHQyxrQ0FBbkI7QUFDQSxJQUFNQyxhQUFhLEdBQUdELE1BQUEsSUFDcEJBLDBCQURGO0FBRUEsSUFBTUUsVUFBVSxHQUFHRixzQ0FBbkI7QUFFQSxJQUFNRyxXQUFXLEdBQUdILFNBQXBCO0FBQ0EsSUFBTUksU0FBUyxHQUFHQywyRkFBb0IsQ0FBQ0YsV0FBRCxDQUF0QztBQUNBLElBQU1HLE9BQU8sR0FBSUgsV0FBVyxJQUFJSixVQUFoQixxQkFDSEksV0FERywyQkFDeUJKLFVBRHpCLElBRWQsdUJBRkY7QUFJQSxJQUFJUSxhQUFhLEdBQUc7QUFBRUMsVUFBUSxFQUFFO0FBQVosQ0FBcEI7O0FBQ0EsSUFBSVIsS0FBSixFQUFxQyxFQUtwQzs7QUFFRCxJQUFNUyxRQUFRLEdBQUcsY0FBakI7QUFFQSxJQUFNQyxjQUFjLEdBQUcsQ0FDckI7QUFBRUMsWUFBVSxFQUFFLFVBQWQ7QUFBMEJDLFdBQVMsRUFBRTtBQUFyQyxDQURxQixFQUVyQjtBQUFFRCxZQUFVLEVBQUUsVUFBZDtBQUEwQkMsV0FBUyxFQUFFO0FBQXJDLENBRnFCLEVBR3JCO0FBQUVELFlBQVUsRUFBRSxPQUFkO0FBQXVCQyxXQUFTLEVBQUUsSUFBbEM7QUFBd0NDLFFBQU0sRUFBRVA7QUFBaEQsQ0FIcUIsRUFJckI7QUFDRUssWUFBVSxFQUFFLFFBRGQ7QUFFRUcsUUFBTSxFQUFFLDhCQUZWO0FBR0VDLE9BQUssRUFBRSx3QkFIVDtBQUlFRixRQUFNLEVBQUVQLE9BSlY7QUFLRU0sV0FBUyxFQUFFO0FBTGIsQ0FKcUIsRUFXckI7QUFDRUQsWUFBVSxFQUFFLFFBRGQ7QUFFRUUsUUFBTSxFQUFFUCxPQUZWO0FBR0VNLFdBQVMsRUFBRTtBQUhiLENBWHFCLEVBZ0JyQjtBQUNFRCxZQUFVLEVBQUUsV0FEZDtBQUVFSyxRQUFNLEVBQUVmLGFBRlY7QUFHRVcsV0FBUyxFQUFFO0FBSGIsQ0FoQnFCLEVBcUJyQjtBQUNFRCxZQUFVLEVBQUUsZUFEZDtBQUVFTSxXQUFTLEVBQUVsQixVQUZiO0FBR0VhLFdBQVMsRUFBRTtBQUhiLENBckJxQixFQTBCckI7QUFDRUQsWUFBVSxFQUFFLFlBRGQ7QUFFRUUsUUFBTSxFQUFFUCxPQUZWO0FBR0VNLFdBQVMsRUFBRTtBQUhiLENBMUJxQixFQStCckI7QUFDRUQsWUFBVSxFQUFFLFNBRGQ7QUFFRUUsUUFBTSxFQUFFUCxPQUZWO0FBR0VNLFdBQVMsRUFBRTtBQUhiLENBL0JxQixFQW9DckI7QUFBRUQsWUFBVSxFQUFFO0FBQWQsQ0FwQ3FCLEVBcUNyQjtBQUNFQSxZQUFVLEVBQUUsYUFEZDtBQUVFRSxRQUFNLEVBQUVQO0FBRlYsQ0FyQ3FCLEVBeUNyQjtBQUNFSyxZQUFVLEVBQUUsUUFEZDtBQUVFSyxRQUFNLEVBQUVkO0FBRlYsQ0F6Q3FCLEVBNkNyQjtBQUFFUyxZQUFVLEVBQUU7QUFBZCxDQTdDcUIsRUE4Q3JCO0FBQUVBLFlBQVUsRUFBRTtBQUFkLENBOUNxQixFQStDckI7QUFBRUEsWUFBVSxFQUFFO0FBQWQsQ0EvQ3FCLEVBZ0RyQjtBQUFFQSxZQUFVLEVBQUU7QUFBZCxDQWhEcUIsRUFpRHJCO0FBQ0VBLFlBQVUsRUFBRSxTQURkO0FBRUVFLFFBQU0sRUFBRVAsT0FGVjtBQUdFWSxTQUFPLEVBQUVUO0FBSFgsQ0FqRHFCLEVBc0RyQjtBQUFFRSxZQUFVLEVBQUUsT0FBZDtBQUF1QkUsUUFBTSxFQUFFUDtBQUEvQixDQXREcUIsRUF1RHJCO0FBQUVLLFlBQVUsRUFBRTtBQUFkLENBdkRxQixFQXdEckI7QUFBRUEsWUFBVSxFQUFFO0FBQWQsQ0F4RHFCLEVBeURyQjtBQUFFQSxZQUFVLEVBQUU7QUFBZCxDQXpEcUIsQ0FBdkI7QUE0RE8sSUFBTVEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0MsYUFBRCxFQUFtQjtBQUM1QyxNQUFNQyxPQUFPLEdBQUdDLGlFQUFoQjtBQUVBekIsT0FBSyxDQUFDLHNCQUFELENBQUw7QUFFQSxTQUFPd0IsT0FBTyxDQUFDO0FBQ2JFLGdCQUFZLEVBQUUsSUFERDtBQUVibkIsYUFBUyxFQUFUQSxTQUZhO0FBR2JvQixZQUFRLEVBQUUsSUFIRztBQUliSixpQkFBYSxFQUFiQSxhQUphO0FBS2JLLGdCQUFZLEVBQUU7QUFDWkMsYUFBTyxFQUFFaEI7QUFERyxLQUxEO0FBUWJpQixlQUFXLEVBQUUsQ0FDWDtBQUFFQyxlQUFTLEVBQUU7QUFBYixLQURXLEVBRVg7QUFBRUEsZUFBUyxFQUFFO0FBQWIsS0FGVyxFQUdYO0FBQUVBLGVBQVMsRUFBRTtBQUFiLEtBSFcsRUFJWDtBQUFFQSxlQUFTLEVBQUU7QUFBYixLQUpXLENBS1g7QUFMVztBQVJBLEdBQUQsQ0FBZDtBQWdCRCxDQXJCTSIsImZpbGUiOiIuL2xpYi9zZXJ2aWNlcy9pbml0T25ib2FyZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPbmJvYXJkIGZyb20gJ0Bwb29sdG9nZXRoZXIvYm5jLW9uYm9hcmQnXG5cbmltcG9ydCB7IG5ldHdvcmtOYW1lVG9DaGFpbklkIH0gZnJvbSAnbGliL3V0aWxzL25ldHdvcmtOYW1lVG9DaGFpbklkJ1xuXG5jb25zdCBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3Bvb2wtYXBwOmluaXRPbmJvYXJkJylcblxuY29uc3QgSU5GVVJBX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfSlNfSU5GVVJBX0tFWVxuY29uc3QgRk9SVE1BVElDX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfSlNfRk9SVE1BVElDX1BST0RVQ1RJT05fQVBJX0tFWSB8fCBcbiAgcHJvY2Vzcy5lbnYuTkVYVF9KU19GT1JUTUFUSUNfQVBJX0tFWVxuY29uc3QgUE9SVElTX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfSlNfUE9SVElTX0FQSV9LRVlcblxuY29uc3QgbmV0d29ya05hbWUgPSBwcm9jZXNzLmVudi5ORVhUX0pTX0RFRkFVTFRfRVRIRVJFVU1fTkVUV09SS19OQU1FXG5jb25zdCBuZXR3b3JrSWQgPSBuZXR3b3JrTmFtZVRvQ2hhaW5JZChuZXR3b3JrTmFtZSlcbmNvbnN0IFJQQ19VUkwgPSAobmV0d29ya05hbWUgJiYgSU5GVVJBX0tFWSkgP1xuICBgaHR0cHM6Ly8ke25ldHdvcmtOYW1lfS5pbmZ1cmEuaW8vdjMvJHtJTkZVUkFfS0VZfWAgOlxuICAnaHR0cDovL2xvY2FsaG9zdDo4NTQ1J1xuXG5sZXQgY29va2llT3B0aW9ucyA9IHsgc2FtZVNpdGU6ICdzdHJpY3QnIH1cbmlmIChwcm9jZXNzLmVudi5ORVhUX0pTX0RPTUFJTl9OQU1FKSB7XG4gIGNvb2tpZU9wdGlvbnMgPSB7XG4gICAgLi4uY29va2llT3B0aW9ucyxcbiAgICBkb21haW46IGAuJHtwcm9jZXNzLmVudi5ORVhUX0pTX0RPTUFJTl9OQU1FfWBcbiAgfVxufVxuXG5jb25zdCBBUFBfTkFNRSA9ICdQb29sVG9nZXRoZXInXG5cbmNvbnN0IFdBTExFVFNfQ09ORklHID0gW1xuICB7IHdhbGxldE5hbWU6ICdtZXRhbWFzaycsIHByZWZlcnJlZDogdHJ1ZSB9LFxuICB7IHdhbGxldE5hbWU6ICdjb2luYmFzZScsIHByZWZlcnJlZDogdHJ1ZSB9LFxuICB7IHdhbGxldE5hbWU6ICd0cnVzdCcsIHByZWZlcnJlZDogdHJ1ZSwgcnBjVXJsOiBSUENfVVJMIH0sXG4gIHtcbiAgICB3YWxsZXROYW1lOiAndHJlem9yJyxcbiAgICBhcHBVcmw6ICdodHRwczovL2FwcC5wb29sdG9nZXRoZXIuY29tJyxcbiAgICBlbWFpbDogJ2hlbGxvQHBvb2x0b2dldGhlci5jb20nLFxuICAgIHJwY1VybDogUlBDX1VSTCxcbiAgICBwcmVmZXJyZWQ6IHRydWVcbiAgfSxcbiAge1xuICAgIHdhbGxldE5hbWU6ICdsZWRnZXInLFxuICAgIHJwY1VybDogUlBDX1VSTCxcbiAgICBwcmVmZXJyZWQ6IHRydWVcbiAgfSxcbiAge1xuICAgIHdhbGxldE5hbWU6ICdmb3J0bWF0aWMnLFxuICAgIGFwaUtleTogRk9SVE1BVElDX0tFWSxcbiAgICBwcmVmZXJyZWQ6IHRydWVcbiAgfSxcbiAge1xuICAgIHdhbGxldE5hbWU6ICd3YWxsZXRDb25uZWN0JyxcbiAgICBpbmZ1cmFLZXk6IElORlVSQV9LRVksXG4gICAgcHJlZmVycmVkOiB0cnVlXG4gIH0sXG4gIHtcbiAgICB3YWxsZXROYW1lOiAnd2FsbGV0TGluaycsXG4gICAgcnBjVXJsOiBSUENfVVJMLFxuICAgIHByZWZlcnJlZDogdHJ1ZVxuICB9LFxuICB7XG4gICAgd2FsbGV0TmFtZTogJ2ltVG9rZW4nLFxuICAgIHJwY1VybDogUlBDX1VSTCxcbiAgICBwcmVmZXJyZWQ6IHRydWVcbiAgfSxcbiAgeyB3YWxsZXROYW1lOiAnZGNlbnQnIH0sXG4gIHtcbiAgICB3YWxsZXROYW1lOiAnaHVvYml3YWxsZXQnLFxuICAgIHJwY1VybDogUlBDX1VSTFxuICB9LFxuICB7XG4gICAgd2FsbGV0TmFtZTogJ3BvcnRpcycsXG4gICAgYXBpS2V5OiBQT1JUSVNfS0VZLFxuICB9LFxuICB7IHdhbGxldE5hbWU6ICdhdXRoZXJldW0nIH0sXG4gIHsgd2FsbGV0TmFtZTogJ2RhcHBlcicgfSxcbiAgeyB3YWxsZXROYW1lOiAnc3RhdHVzJyB9LFxuICB7IHdhbGxldE5hbWU6ICd0b3J1cycgfSxcbiAge1xuICAgIHdhbGxldE5hbWU6ICdsYXR0aWNlJyxcbiAgICBycGNVcmw6IFJQQ19VUkwsXG4gICAgYXBwTmFtZTogQVBQX05BTUVcbiAgfSxcbiAgeyB3YWxsZXROYW1lOiAnbXlrZXknLCBycGNVcmw6IFJQQ19VUkwgfSxcbiAgeyB3YWxsZXROYW1lOiAnb3BlcmEnIH0sXG4gIHsgd2FsbGV0TmFtZTogJ29wZXJhVG91Y2gnIH0sXG4gIHsgd2FsbGV0TmFtZTogJ3dlYjNXYWxsZXQnIH0sXG5dXG5cbmV4cG9ydCBjb25zdCBpbml0T25ib2FyZCA9IChzdWJzY3JpcHRpb25zKSA9PiB7XG4gIGNvbnN0IG9uYm9hcmQgPSBPbmJvYXJkXG5cbiAgZGVidWcoJ1JVTk5JTkcgaW5pdE9uYm9hcmQhJylcblxuICByZXR1cm4gb25ib2FyZCh7XG4gICAgaGlkZUJyYW5kaW5nOiB0cnVlLFxuICAgIG5ldHdvcmtJZCxcbiAgICBkYXJrTW9kZTogdHJ1ZSxcbiAgICBzdWJzY3JpcHRpb25zLFxuICAgIHdhbGxldFNlbGVjdDoge1xuICAgICAgd2FsbGV0czogV0FMTEVUU19DT05GSUdcbiAgICB9LFxuICAgIHdhbGxldENoZWNrOiBbXG4gICAgICB7IGNoZWNrTmFtZTogJ2Rlcml2YXRpb25QYXRoJyB9LFxuICAgICAgeyBjaGVja05hbWU6ICdjb25uZWN0JyB9LFxuICAgICAgeyBjaGVja05hbWU6ICdhY2NvdW50cycgfSxcbiAgICAgIHsgY2hlY2tOYW1lOiAnbmV0d29yaycgfSxcbiAgICAgIC8vIHsgY2hlY2tOYW1lOiAnYmFsYW5jZScgfVxuICAgIF1cbiAgfSlcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/services/initOnboard.js\n");

/***/ }),

/***/ "./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard-197ee608.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard-197ee608.js ***!
  \*****************************************************************************/
/*! exports provided: a, b, c, i, n, o */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return networkToId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return balanceIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return connectIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return init$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return networkName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return openLink; });\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/@pooltogether/bnc-onboard/node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bnc_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bnc-sdk */ \"./node_modules/bnc-sdk/dist/esm/index.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_3__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n\n\n\nfunction noop() {}\n\nvar identity = function identity(x) {\n  return x;\n};\n\nfunction assign(tar, src) {\n  // @ts-ignore\n  for (var k in src) {\n    tar[k] = src[k];\n  }\n\n  return tar;\n}\n\nfunction run(fn) {\n  return fn();\n}\n\nfunction blank_object() {\n  return Object.create(null);\n}\n\nfunction run_all(fns) {\n  fns.forEach(run);\n}\n\nfunction is_function(thing) {\n  return typeof thing === 'function';\n}\n\nfunction safe_not_equal(a, b) {\n  return a != a ? b == b : a !== b || a && _typeof(a) === 'object' || typeof a === 'function';\n}\n\nfunction subscribe(store) {\n  if (store == null) {\n    return noop;\n  }\n\n  for (var _len = arguments.length, callbacks = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    callbacks[_key - 1] = arguments[_key];\n  }\n\n  var unsub = store.subscribe.apply(store, callbacks);\n  return unsub.unsubscribe ? function () {\n    return unsub.unsubscribe();\n  } : unsub;\n}\n\nfunction get_store_value(store) {\n  var value;\n  subscribe(store, function (_) {\n    return value = _;\n  })();\n  return value;\n}\n\nfunction component_subscribe(component, store, callback) {\n  component.$$.on_destroy.push(subscribe(store, callback));\n}\n\nfunction create_slot(definition, ctx, $$scope, fn) {\n  if (definition) {\n    var slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n    return definition[0](slot_ctx);\n  }\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n  return definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n  if (definition[2] && fn) {\n    var lets = definition[2](fn(dirty));\n\n    if ($$scope.dirty === undefined) {\n      return lets;\n    }\n\n    if (_typeof(lets) === 'object') {\n      var merged = [];\n      var len = Math.max($$scope.dirty.length, lets.length);\n\n      for (var i = 0; i < len; i += 1) {\n        merged[i] = $$scope.dirty[i] | lets[i];\n      }\n\n      return merged;\n    }\n\n    return $$scope.dirty | lets;\n  }\n\n  return $$scope.dirty;\n}\n\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n  var slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\n  if (slot_changes) {\n    var slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n    slot.p(slot_context, slot_changes);\n  }\n}\n\nvar is_client = typeof window !== 'undefined';\nvar now = is_client ? function () {\n  return window.performance.now();\n} : function () {\n  return Date.now();\n};\nvar raf = is_client ? function (cb) {\n  return requestAnimationFrame(cb);\n} : noop;\nvar tasks = new Set();\n\nfunction run_tasks(now) {\n  tasks.forEach(function (task) {\n    if (!task.c(now)) {\n      tasks[\"delete\"](task);\n      task.f();\n    }\n  });\n  if (tasks.size !== 0) raf(run_tasks);\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\n\n\nfunction loop(callback) {\n  var task;\n  if (tasks.size === 0) raf(run_tasks);\n  return {\n    promise: new Promise(function (fulfill) {\n      tasks.add(task = {\n        c: callback,\n        f: fulfill\n      });\n    }),\n    abort: function abort() {\n      tasks[\"delete\"](task);\n    }\n  };\n}\n\nfunction append(target, node) {\n  target.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n  target.insertBefore(node, anchor || null);\n}\n\nfunction detach(node) {\n  node.parentNode.removeChild(node);\n}\n\nfunction element(name) {\n  return document.createElement(name);\n}\n\nfunction svg_element(name) {\n  return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction text(data) {\n  return document.createTextNode(data);\n}\n\nfunction space() {\n  return text(' ');\n}\n\nfunction empty() {\n  return text('');\n}\n\nfunction listen(node, event, handler, options) {\n  node.addEventListener(event, handler, options);\n  return function () {\n    return node.removeEventListener(event, handler, options);\n  };\n}\n\nfunction attr(node, attribute, value) {\n  if (value == null) node.removeAttribute(attribute);else if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n\nfunction children(element) {\n  return Array.from(element.childNodes);\n}\n\nfunction set_data(text, data) {\n  data = '' + data;\n  if (text.wholeText !== data) text.data = data;\n}\n\nfunction set_style(node, key, value, important) {\n  node.style.setProperty(key, value, important ? 'important' : '');\n}\n\nfunction toggle_class(element, name, toggle) {\n  element.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction custom_event(type, detail) {\n  var e = document.createEvent('CustomEvent');\n  e.initCustomEvent(type, false, false, detail);\n  return e;\n}\n\nvar HtmlTag = /*#__PURE__*/function () {\n  function HtmlTag() {\n    var anchor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, HtmlTag);\n\n    this.a = anchor;\n    this.e = this.n = null;\n  }\n\n  _createClass(HtmlTag, [{\n    key: \"m\",\n    value: function m(html, target) {\n      var anchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (!this.e) {\n        this.e = element(target.nodeName);\n        this.t = target;\n        this.h(html);\n      }\n\n      this.i(anchor);\n    }\n  }, {\n    key: \"h\",\n    value: function h(html) {\n      this.e.innerHTML = html;\n      this.n = Array.from(this.e.childNodes);\n    }\n  }, {\n    key: \"i\",\n    value: function i(anchor) {\n      for (var i = 0; i < this.n.length; i += 1) {\n        insert(this.t, this.n[i], anchor);\n      }\n    }\n  }, {\n    key: \"p\",\n    value: function p(html) {\n      this.d();\n      this.h(html);\n      this.i(this.a);\n    }\n  }, {\n    key: \"d\",\n    value: function d() {\n      this.n.forEach(detach);\n    }\n  }]);\n\n  return HtmlTag;\n}();\n\nvar active_docs = new Set();\nvar active = 0; // https://github.com/darkskyapp/string-hash/blob/master/index.js\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n\n  while (i--) {\n    hash = (hash << 5) - hash ^ str.charCodeAt(i);\n  }\n\n  return hash >>> 0;\n}\n\nfunction create_rule(node, a, b, duration, delay, ease, fn) {\n  var uid = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var step = 16.666 / duration;\n  var keyframes = '{\\n';\n\n  for (var p = 0; p <= 1; p += step) {\n    var t = a + (b - a) * ease(p);\n    keyframes += p * 100 + \"%{\".concat(fn(t, 1 - t), \"}\\n\");\n  }\n\n  var rule = keyframes + \"100% {\".concat(fn(b, 1 - b), \"}\\n}\");\n  var name = \"__svelte_\".concat(hash(rule), \"_\").concat(uid);\n  var doc = node.ownerDocument;\n  active_docs.add(doc);\n  var stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n  var current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n\n  if (!current_rules[name]) {\n    current_rules[name] = true;\n    stylesheet.insertRule(\"@keyframes \".concat(name, \" \").concat(rule), stylesheet.cssRules.length);\n  }\n\n  var animation = node.style.animation || '';\n  node.style.animation = \"\".concat(animation ? \"\".concat(animation, \", \") : \"\").concat(name, \" \").concat(duration, \"ms linear \").concat(delay, \"ms 1 both\");\n  active += 1;\n  return name;\n}\n\nfunction delete_rule(node, name) {\n  var previous = (node.style.animation || '').split(', ');\n  var next = previous.filter(name ? function (anim) {\n    return anim.indexOf(name) < 0;\n  } // remove specific animation\n  : function (anim) {\n    return anim.indexOf('__svelte') === -1;\n  } // remove all Svelte animations\n  );\n  var deleted = previous.length - next.length;\n\n  if (deleted) {\n    node.style.animation = next.join(', ');\n    active -= deleted;\n    if (!active) clear_rules();\n  }\n}\n\nfunction clear_rules() {\n  raf(function () {\n    if (active) return;\n    active_docs.forEach(function (doc) {\n      var stylesheet = doc.__svelte_stylesheet;\n      var i = stylesheet.cssRules.length;\n\n      while (i--) {\n        stylesheet.deleteRule(i);\n      }\n\n      doc.__svelte_rules = {};\n    });\n    active_docs.clear();\n  });\n}\n\nvar current_component;\n\nfunction set_current_component(component) {\n  current_component = component;\n}\n\nfunction get_current_component() {\n  if (!current_component) throw new Error(\"Function called outside component initialization\");\n  return current_component;\n}\n\nfunction onMount(fn) {\n  get_current_component().$$.on_mount.push(fn);\n}\n\nfunction onDestroy(fn) {\n  get_current_component().$$.on_destroy.push(fn);\n}\n\nvar dirty_components = [];\nvar binding_callbacks = [];\nvar render_callbacks = [];\nvar flush_callbacks = [];\nvar resolved_promise = Promise.resolve();\nvar update_scheduled = false;\n\nfunction schedule_update() {\n  if (!update_scheduled) {\n    update_scheduled = true;\n    resolved_promise.then(flush);\n  }\n}\n\nfunction add_render_callback(fn) {\n  render_callbacks.push(fn);\n}\n\nvar flushing = false;\nvar seen_callbacks = new Set();\n\nfunction flush() {\n  if (flushing) return;\n  flushing = true;\n\n  do {\n    // first, call beforeUpdate functions\n    // and update components\n    for (var i = 0; i < dirty_components.length; i += 1) {\n      var component = dirty_components[i];\n      set_current_component(component);\n      update(component.$$);\n    }\n\n    dirty_components.length = 0;\n\n    while (binding_callbacks.length) {\n      binding_callbacks.pop()();\n    } // then, once components are updated, call\n    // afterUpdate functions. This may cause\n    // subsequent updates...\n\n\n    for (var _i = 0; _i < render_callbacks.length; _i += 1) {\n      var callback = render_callbacks[_i];\n\n      if (!seen_callbacks.has(callback)) {\n        // ...so guard against infinite loops\n        seen_callbacks.add(callback);\n        callback();\n      }\n    }\n\n    render_callbacks.length = 0;\n  } while (dirty_components.length);\n\n  while (flush_callbacks.length) {\n    flush_callbacks.pop()();\n  }\n\n  update_scheduled = false;\n  flushing = false;\n  seen_callbacks.clear();\n}\n\nfunction update($$) {\n  if ($$.fragment !== null) {\n    $$.update();\n    run_all($$.before_update);\n    var dirty = $$.dirty;\n    $$.dirty = [-1];\n    $$.fragment && $$.fragment.p($$.ctx, dirty);\n    $$.after_update.forEach(add_render_callback);\n  }\n}\n\nvar promise;\n\nfunction wait() {\n  if (!promise) {\n    promise = Promise.resolve();\n    promise.then(function () {\n      promise = null;\n    });\n  }\n\n  return promise;\n}\n\nfunction dispatch(node, direction, kind) {\n  node.dispatchEvent(custom_event(\"\".concat(direction ? 'intro' : 'outro').concat(kind)));\n}\n\nvar outroing = new Set();\nvar outros;\n\nfunction group_outros() {\n  outros = {\n    r: 0,\n    c: [],\n    p: outros // parent group\n\n  };\n}\n\nfunction check_outros() {\n  if (!outros.r) {\n    run_all(outros.c);\n  }\n\n  outros = outros.p;\n}\n\nfunction transition_in(block, local) {\n  if (block && block.i) {\n    outroing[\"delete\"](block);\n    block.i(local);\n  }\n}\n\nfunction transition_out(block, local, detach, callback) {\n  if (block && block.o) {\n    if (outroing.has(block)) return;\n    outroing.add(block);\n    outros.c.push(function () {\n      outroing[\"delete\"](block);\n\n      if (callback) {\n        if (detach) block.d(1);\n        callback();\n      }\n    });\n    block.o(local);\n  }\n}\n\nvar null_transition = {\n  duration: 0\n};\n\nfunction create_in_transition(node, fn, params) {\n  var config = fn(node, params);\n  var running = false;\n  var animation_name;\n  var task;\n  var uid = 0;\n\n  function cleanup() {\n    if (animation_name) delete_rule(node, animation_name);\n  }\n\n  function go() {\n    var _ref = config || null_transition,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === void 0 ? 300 : _ref$duration,\n        _ref$easing = _ref.easing,\n        easing = _ref$easing === void 0 ? identity : _ref$easing,\n        _ref$tick = _ref.tick,\n        tick = _ref$tick === void 0 ? noop : _ref$tick,\n        css = _ref.css;\n\n    if (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n    tick(0, 1);\n    var start_time = now() + delay;\n    var end_time = start_time + duration;\n    if (task) task.abort();\n    running = true;\n    add_render_callback(function () {\n      return dispatch(node, true, 'start');\n    });\n    task = loop(function (now) {\n      if (running) {\n        if (now >= end_time) {\n          tick(1, 0);\n          dispatch(node, true, 'end');\n          cleanup();\n          return running = false;\n        }\n\n        if (now >= start_time) {\n          var t = easing((now - start_time) / duration);\n          tick(t, 1 - t);\n        }\n      }\n\n      return running;\n    });\n  }\n\n  var started = false;\n  return {\n    start: function start() {\n      if (started) return;\n      delete_rule(node);\n\n      if (is_function(config)) {\n        config = config();\n        wait().then(go);\n      } else {\n        go();\n      }\n    },\n    invalidate: function invalidate() {\n      started = false;\n    },\n    end: function end() {\n      if (running) {\n        cleanup();\n        running = false;\n      }\n    }\n  };\n}\n\nfunction create_bidirectional_transition(node, fn, params, intro) {\n  var config = fn(node, params);\n  var t = intro ? 0 : 1;\n  var running_program = null;\n  var pending_program = null;\n  var animation_name = null;\n\n  function clear_animation() {\n    if (animation_name) delete_rule(node, animation_name);\n  }\n\n  function init(program, duration) {\n    var d = program.b - t;\n    duration *= Math.abs(d);\n    return {\n      a: t,\n      b: program.b,\n      d: d,\n      duration: duration,\n      start: program.start,\n      end: program.start + duration,\n      group: program.group\n    };\n  }\n\n  function go(b) {\n    var _ref2 = config || null_transition,\n        _ref2$delay = _ref2.delay,\n        delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === void 0 ? 300 : _ref2$duration,\n        _ref2$easing = _ref2.easing,\n        easing = _ref2$easing === void 0 ? identity : _ref2$easing,\n        _ref2$tick = _ref2.tick,\n        tick = _ref2$tick === void 0 ? noop : _ref2$tick,\n        css = _ref2.css;\n\n    var program = {\n      start: now() + delay,\n      b: b\n    };\n\n    if (!b) {\n      // @ts-ignore todo: improve typings\n      program.group = outros;\n      outros.r += 1;\n    }\n\n    if (running_program) {\n      pending_program = program;\n    } else {\n      // if this is an intro, and there's a delay, we need to do\n      // an initial tick and/or apply CSS animation immediately\n      if (css) {\n        clear_animation();\n        animation_name = create_rule(node, t, b, duration, delay, easing, css);\n      }\n\n      if (b) tick(0, 1);\n      running_program = init(program, duration);\n      add_render_callback(function () {\n        return dispatch(node, b, 'start');\n      });\n      loop(function (now) {\n        if (pending_program && now > pending_program.start) {\n          running_program = init(pending_program, duration);\n          pending_program = null;\n          dispatch(node, running_program.b, 'start');\n\n          if (css) {\n            clear_animation();\n            animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n          }\n        }\n\n        if (running_program) {\n          if (now >= running_program.end) {\n            tick(t = running_program.b, 1 - t);\n            dispatch(node, running_program.b, 'end');\n\n            if (!pending_program) {\n              // we're done\n              if (running_program.b) {\n                // intro — we can tidy up immediately\n                clear_animation();\n              } else {\n                // outro — needs to be coordinated\n                if (! --running_program.group.r) run_all(running_program.group.c);\n              }\n            }\n\n            running_program = null;\n          } else if (now >= running_program.start) {\n            var p = now - running_program.start;\n            t = running_program.a + running_program.d * easing(p / running_program.duration);\n            tick(t, 1 - t);\n          }\n        }\n\n        return !!(running_program || pending_program);\n      });\n    }\n  }\n\n  return {\n    run: function run(b) {\n      if (is_function(config)) {\n        wait().then(function () {\n          // @ts-ignore\n          config = config();\n          go(b);\n        });\n      } else {\n        go(b);\n      }\n    },\n    end: function end() {\n      clear_animation();\n      running_program = pending_program = null;\n    }\n  };\n}\n\nfunction outro_and_destroy_block(block, lookup) {\n  transition_out(block, 1, 1, function () {\n    lookup[\"delete\"](block.key);\n  });\n}\n\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n  var o = old_blocks.length;\n  var n = list.length;\n  var i = o;\n  var old_indexes = {};\n\n  while (i--) {\n    old_indexes[old_blocks[i].key] = i;\n  }\n\n  var new_blocks = [];\n  var new_lookup = new Map();\n  var deltas = new Map();\n  i = n;\n\n  while (i--) {\n    var child_ctx = get_context(ctx, list, i);\n    var key = get_key(child_ctx);\n    var block = lookup.get(key);\n\n    if (!block) {\n      block = create_each_block(key, child_ctx);\n      block.c();\n    } else if (dynamic) {\n      block.p(child_ctx, dirty);\n    }\n\n    new_lookup.set(key, new_blocks[i] = block);\n    if (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n  }\n\n  var will_move = new Set();\n  var did_move = new Set();\n\n  function insert(block) {\n    transition_in(block, 1);\n    block.m(node, next);\n    lookup.set(block.key, block);\n    next = block.first;\n    n--;\n  }\n\n  while (o && n) {\n    var new_block = new_blocks[n - 1];\n    var old_block = old_blocks[o - 1];\n    var new_key = new_block.key;\n    var old_key = old_block.key;\n\n    if (new_block === old_block) {\n      // do nothing\n      next = new_block.first;\n      o--;\n      n--;\n    } else if (!new_lookup.has(old_key)) {\n      // remove old block\n      destroy(old_block, lookup);\n      o--;\n    } else if (!lookup.has(new_key) || will_move.has(new_key)) {\n      insert(new_block);\n    } else if (did_move.has(old_key)) {\n      o--;\n    } else if (deltas.get(new_key) > deltas.get(old_key)) {\n      did_move.add(new_key);\n      insert(new_block);\n    } else {\n      will_move.add(old_key);\n      o--;\n    }\n  }\n\n  while (o--) {\n    var _old_block = old_blocks[o];\n    if (!new_lookup.has(_old_block.key)) destroy(_old_block, lookup);\n  }\n\n  while (n) {\n    insert(new_blocks[n - 1]);\n  }\n\n  return new_blocks;\n}\n\nfunction create_component(block) {\n  block && block.c();\n}\n\nfunction mount_component(component, target, anchor) {\n  var _component$$$ = component.$$,\n      fragment = _component$$$.fragment,\n      on_mount = _component$$$.on_mount,\n      on_destroy = _component$$$.on_destroy,\n      after_update = _component$$$.after_update;\n  fragment && fragment.m(target, anchor); // onMount happens before the initial afterUpdate\n\n  add_render_callback(function () {\n    var new_on_destroy = on_mount.map(run).filter(is_function);\n\n    if (on_destroy) {\n      on_destroy.push.apply(on_destroy, _toConsumableArray(new_on_destroy));\n    } else {\n      // Edge case - component was destroyed immediately,\n      // most likely as a result of a binding initialising\n      run_all(new_on_destroy);\n    }\n\n    component.$$.on_mount = [];\n  });\n  after_update.forEach(add_render_callback);\n}\n\nfunction destroy_component(component, detaching) {\n  var $$ = component.$$;\n\n  if ($$.fragment !== null) {\n    run_all($$.on_destroy);\n    $$.fragment && $$.fragment.d(detaching); // TODO null out other refs, including component.$$ (but need to\n    // preserve final state?)\n\n    $$.on_destroy = $$.fragment = null;\n    $$.ctx = [];\n  }\n}\n\nfunction make_dirty(component, i) {\n  if (component.$$.dirty[0] === -1) {\n    dirty_components.push(component);\n    schedule_update();\n    component.$$.dirty.fill(0);\n  }\n\n  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;\n}\n\nfunction init(component, options, instance, create_fragment, not_equal, props) {\n  var dirty = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [-1];\n  var parent_component = current_component;\n  set_current_component(component);\n  var prop_values = options.props || {};\n  var $$ = component.$$ = {\n    fragment: null,\n    ctx: null,\n    // state\n    props: props,\n    update: noop,\n    not_equal: not_equal,\n    bound: blank_object(),\n    // lifecycle\n    on_mount: [],\n    on_destroy: [],\n    before_update: [],\n    after_update: [],\n    context: new Map(parent_component ? parent_component.$$.context : []),\n    // everything else\n    callbacks: blank_object(),\n    dirty: dirty\n  };\n  var ready = false;\n  $$.ctx = instance ? instance(component, prop_values, function (i, ret) {\n    var value = (arguments.length <= 2 ? 0 : arguments.length - 2) ? arguments.length <= 2 ? undefined : arguments[2] : ret;\n\n    if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n      if ($$.bound[i]) $$.bound[i](value);\n      if (ready) make_dirty(component, i);\n    }\n\n    return ret;\n  }) : [];\n  $$.update();\n  ready = true;\n  run_all($$.before_update); // `false` as a special case of no DOM component\n\n  $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\n  if (options.target) {\n    if (options.hydrate) {\n      var nodes = children(options.target); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      $$.fragment && $$.fragment.l(nodes);\n      nodes.forEach(detach);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      $$.fragment && $$.fragment.c();\n    }\n\n    if (options.intro) transition_in(component.$$.fragment);\n    mount_component(component, options.target, options.anchor);\n    flush();\n  }\n\n  set_current_component(parent_component);\n}\n\nvar SvelteComponent = /*#__PURE__*/function () {\n  function SvelteComponent() {\n    _classCallCheck(this, SvelteComponent);\n  }\n\n  _createClass(SvelteComponent, [{\n    key: \"$destroy\",\n    value: function $destroy() {\n      destroy_component(this, 1);\n      this.$destroy = noop;\n    }\n  }, {\n    key: \"$on\",\n    value: function $on(type, callback) {\n      var callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n      callbacks.push(callback);\n      return function () {\n        var index = callbacks.indexOf(callback);\n        if (index !== -1) callbacks.splice(index, 1);\n      };\n    }\n  }, {\n    key: \"$set\",\n    value: function $set() {// overridden by instance, if it has props\n    }\n  }]);\n\n  return SvelteComponent;\n}();\n\nvar subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\n\nfunction readable(value, start) {\n  return {\n    subscribe: writable(value, start).subscribe\n  };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\n\n\nfunction writable(value) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  var stop;\n  var subscribers = [];\n\n  function set(new_value) {\n    if (safe_not_equal(value, new_value)) {\n      value = new_value;\n\n      if (stop) {\n        // store is ready\n        var run_queue = !subscriber_queue.length;\n\n        for (var i = 0; i < subscribers.length; i += 1) {\n          var s = subscribers[i];\n          s[1]();\n          subscriber_queue.push(s, value);\n        }\n\n        if (run_queue) {\n          for (var _i2 = 0; _i2 < subscriber_queue.length; _i2 += 2) {\n            subscriber_queue[_i2][0](subscriber_queue[_i2 + 1]);\n          }\n\n          subscriber_queue.length = 0;\n        }\n      }\n    }\n  }\n\n  function update(fn) {\n    set(fn(value));\n  }\n\n  function subscribe(run) {\n    var invalidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    var subscriber = [run, invalidate];\n    subscribers.push(subscriber);\n\n    if (subscribers.length === 1) {\n      stop = start(set) || noop;\n    }\n\n    run(value);\n    return function () {\n      var index = subscribers.indexOf(subscriber);\n\n      if (index !== -1) {\n        subscribers.splice(index, 1);\n      }\n\n      if (subscribers.length === 0) {\n        stop();\n        stop = null;\n      }\n    };\n  }\n\n  return {\n    set: set,\n    update: update,\n    subscribe: subscribe\n  };\n}\n\nfunction derived(stores, fn, initial_value) {\n  var single = !Array.isArray(stores);\n  var stores_array = single ? [stores] : stores;\n  var auto = fn.length < 2;\n  return readable(initial_value, function (set) {\n    var inited = false;\n    var values = [];\n    var pending = 0;\n    var cleanup = noop;\n\n    var sync = function sync() {\n      if (pending) {\n        return;\n      }\n\n      cleanup();\n      var result = fn(single ? values[0] : values, set);\n\n      if (auto) {\n        set(result);\n      } else {\n        cleanup = is_function(result) ? result : noop;\n      }\n    };\n\n    var unsubscribers = stores_array.map(function (store, i) {\n      return subscribe(store, function (value) {\n        values[i] = value;\n        pending &= ~(1 << i);\n\n        if (inited) {\n          sync();\n        }\n      }, function () {\n        pending |= 1 << i;\n      });\n    });\n    inited = true;\n    sync();\n    return function stop() {\n      run_all(unsubscribers);\n      cleanup();\n    };\n  });\n}\n\nfunction fade(node, _ref3) {\n  var _ref3$delay = _ref3.delay,\n      delay = _ref3$delay === void 0 ? 0 : _ref3$delay,\n      _ref3$duration = _ref3.duration,\n      duration = _ref3$duration === void 0 ? 400 : _ref3$duration,\n      _ref3$easing = _ref3.easing,\n      easing = _ref3$easing === void 0 ? identity : _ref3$easing;\n  var o = +getComputedStyle(node).opacity;\n  return {\n    delay: delay,\n    duration: duration,\n    easing: easing,\n    css: function css(t) {\n      return \"opacity: \".concat(t * o);\n    }\n  };\n}\n\nvar blocknative;\n\nfunction initializeBlocknative(dappId, networkId, apiUrl) {\n  blocknative = new bnc_sdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    dappId: dappId,\n    networkId: networkId,\n    name: 'Onboard',\n    apiUrl: apiUrl\n  });\n  return blocknative;\n}\n\nfunction getBlocknative() {\n  return blocknative;\n}\n\nfunction getNetwork(provider) {\n  return new Promise(function (resolve, reject) {\n    var options = {\n      jsonrpc: '2.0',\n      method: 'net_version',\n      params: [],\n      id: 42\n    }; // use MetaMask parameter if there\n\n    if (provider.chainId) {\n      return resolve(Number(provider.chainId));\n    }\n\n    var callback = function callback(e, res) {\n      e && reject(e);\n      var result = res && res.result;\n      resolve(result && Number(result));\n    };\n\n    if (typeof provider.sendAsync === 'function') {\n      provider.sendAsync(options, callback);\n    } else if (typeof provider.send === 'function') {\n      provider.send(options, callback);\n    } else {\n      resolve(null);\n    }\n  });\n}\n\nfunction getAddress(provider) {\n  return new Promise(function (resolve, reject) {\n    var options = {\n      jsonrpc: '2.0',\n      method: 'eth_accounts',\n      params: [],\n      id: 42\n    }; // use MetaMask request method if there\n\n    if (provider.request) {\n      return provider.request(options).then(function (res) {\n        return resolve(res[0]);\n      });\n    }\n\n    var callback = function callback(e, res) {\n      e && reject(e);\n      var result = res && res.result && res.result[0];\n      resolve(result);\n    };\n\n    if (typeof provider.sendAsync === 'function') {\n      provider.sendAsync(options, callback);\n    } else if (typeof provider.send === 'function') {\n      provider.send(options, callback);\n    } else {\n      resolve(null);\n    }\n  });\n}\n\nfunction getBalance(provider, address) {\n  return new Promise( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var currentAddress, options, callback;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = address;\n\n              if (_context.t0) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return getAddress(provider);\n\n            case 4:\n              _context.t0 = _context.sent;\n\n            case 5:\n              currentAddress = _context.t0;\n\n              if (currentAddress) {\n                _context.next = 9;\n                break;\n              }\n\n              resolve(null);\n              return _context.abrupt(\"return\");\n\n            case 9:\n              options = {\n                jsonrpc: '2.0',\n                method: 'eth_getBalance',\n                params: [currentAddress, 'latest'],\n                id: 42\n              }; // use MetaMask request method if there\n\n              if (!provider.request) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\", provider.request(options).then(function (res) {\n                return res ? new bignumber_js__WEBPACK_IMPORTED_MODULE_1___default.a(res).toString(10) : null;\n              }).then(resolve));\n\n            case 12:\n              callback = function callback(e, res) {\n                e && reject(e);\n                var result = res && res.result;\n                resolve(result && new bignumber_js__WEBPACK_IMPORTED_MODULE_1___default.a(result).toString(10));\n              };\n\n              if (typeof provider.sendAsync === 'function') {\n                provider.sendAsync(options, callback);\n              } else if (typeof provider.send === 'function') {\n                provider.send(options, callback);\n              } else {\n                resolve(null);\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n}\n\nfunction createModernProviderInterface(provider) {\n  provider.autoRefreshOnNetworkChange = false;\n  var onFuncExists = typeof provider.on === 'function';\n  return {\n    address: onFuncExists ? {\n      onChange: function onChange(func) {\n        // get the initial value\n        getAddress(provider).then(func);\n        provider.on('accountsChanged', function (accounts) {\n          return func(accounts && accounts[0]);\n        });\n      }\n    } : {\n      get: function get() {\n        return getAddress(provider);\n      }\n    },\n    network: onFuncExists ? {\n      onChange: function onChange(func) {\n        // get initial value\n        getNetwork(provider).then(func); // networkChanged event is deprecated in MM, keep for wallets that may not have updated\n\n        provider.on('networkChanged', function (netId) {\n          return func(netId && Number(netId));\n        }); // use new chainChanged event for network change\n\n        provider.on('chainChanged', function (netId) {\n          return func(netId && Number(netId));\n        });\n      }\n    } : {\n      get: function get() {\n        return getNetwork(provider);\n      }\n    },\n    balance: {\n      get: function get() {\n        return getBalance(provider);\n      }\n    },\n    connect: function connect() {\n      return new Promise(function (resolve, reject) {\n        var request = provider.request ? getAddress(provider).then(function (address) {\n          return address ? address : provider.request({\n            method: 'eth_requestAccounts'\n          });\n        }) : provider.enable();\n        return request.then(resolve)[\"catch\"](function () {\n          return reject({\n            message: 'This dapp needs access to your account information.'\n          });\n        });\n      });\n    },\n    name: getProviderName(provider)\n  };\n}\n\nfunction createLegacyProviderInterface(provider) {\n  return {\n    address: {\n      get: function get() {\n        return getAddress(provider);\n      }\n    },\n    network: {\n      get: function get() {\n        return getNetwork(provider);\n      }\n    },\n    balance: {\n      get: function get() {\n        return getBalance(provider);\n      }\n    },\n    name: getProviderName(provider)\n  };\n}\n\nfunction getProviderName(provider) {\n  if (!provider) return;\n\n  if (provider.isWalletIO) {\n    return 'wallet.io';\n  }\n\n  if (provider.isDcentWallet) {\n    return 'D\\'CENT';\n  }\n\n  if (provider.isTokenPocket) {\n    return 'TokenPocket';\n  }\n\n  if (provider.wallet === 'MEETONE') {\n    return 'MEETONE';\n  }\n\n  if (provider.isTorus) {\n    return 'Torus';\n  }\n\n  if (provider.isImToken) {\n    return 'imToken';\n  }\n\n  if (provider.isDapper) {\n    return 'Dapper';\n  }\n\n  if (provider.isWalletConnect) {\n    return 'WalletConnect';\n  }\n\n  if (provider.isTrust) {\n    return 'Trust';\n  }\n\n  if (provider.isCoinbaseWallet) {\n    return 'Coinbase';\n  }\n\n  if (provider.isToshi) {\n    return 'Toshi';\n  }\n\n  if (provider.isCipher) {\n    return 'Cipher';\n  }\n\n  if (provider.isOpera) {\n    return 'Opera';\n  }\n\n  if (provider.isStatus) {\n    return 'Status';\n  }\n\n  if (provider.isMetaMask) {\n    return 'MetaMask';\n  }\n\n  if (provider.isMYKEY) {\n    return 'MYKEY';\n  }\n\n  if (provider.isHbWallet) {\n    return 'huobiwallet';\n  }\n\n  if (provider.isHyperPay) {\n    return 'HyperPay';\n  }\n\n  if (provider.host && provider.host.indexOf('localhost') !== -1) {\n    return 'localhost';\n  }\n\n  return 'web3Wallet';\n}\n\nfunction getDeviceInfo() {\n  var parsed = bowser__WEBPACK_IMPORTED_MODULE_3___default.a.getParser(window.navigator.userAgent);\n  var os = parsed.getOS();\n  var browser = parsed.getBrowser();\n\n  var _parsed$getPlatform = parsed.getPlatform(),\n      type = _parsed$getPlatform.type;\n\n  return {\n    isMobile: type ? type !== 'desktop' : window.innerWidth < 600,\n    os: os,\n    browser: browser\n  };\n}\n\nfunction networkName(id) {\n  switch (id) {\n    case 1:\n      return 'mainnet';\n\n    case 3:\n      return 'ropsten';\n\n    case 4:\n      return 'rinkeby';\n\n    case 5:\n      return 'goerli';\n\n    case 42:\n      return 'kovan';\n\n    case 100:\n      return 'xdai';\n\n    default:\n      return 'local';\n  }\n}\n\nfunction networkToId(network) {\n  switch (network) {\n    case 'mainnet':\n      return 1;\n\n    case 'ropsten':\n      return 3;\n\n    case 'rinkeby':\n      return 4;\n\n    case 'goerli':\n      return 5;\n\n    case 'kovan':\n      return 42;\n\n    case 'xdai':\n      return 100;\n\n    default:\n      return 0;\n  }\n}\n\nfunction wait$1(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n}\n\nfunction makeCancelable(promise) {\n  var rejectFn;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    rejectFn = reject;\n    promise.then(resolve)[\"catch\"](reject);\n  });\n\n  wrappedPromise.cancel = function () {\n    rejectFn('canceled');\n  };\n\n  return wrappedPromise;\n}\n\nfunction isPromise(val) {\n  if (val instanceof Promise) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction createInterval(func, interval) {\n  var id = setInterval(func, interval);\n  var status = {\n    active: true\n  };\n  return {\n    status: status,\n    clear: function clear() {\n      clearInterval(id);\n      status.active = false;\n    }\n  };\n}\n\nfunction openLink(url) {\n  window.open(url);\n}\n\nvar validSubscriptionKeys = ['address', 'network', 'balance', 'wallet'];\n\nfunction validateType(options) {\n  var name = options.name,\n      value = options.value,\n      type = options.type,\n      optional = options.optional;\n\n  if (!optional && typeof value === 'undefined') {\n    throw new Error(\"\\\"\".concat(name, \"\\\" is required\"));\n  }\n\n  if (typeof value !== 'undefined' && (type === 'array' ? Array.isArray(type) : _typeof(value) !== type)) {\n    throw new Error(\"\\\"\".concat(name, \"\\\" must be of type: \").concat(type, \", received type: \").concat(_typeof(value), \" from value: \").concat(value));\n  }\n}\n\nfunction invalidParams(params, validParams, functionName) {\n  var keys = Object.keys(params);\n  keys.forEach(function (key) {\n    if (!validParams.includes(key)) {\n      throw new Error(\"\".concat(key, \" is not a valid parameter for \").concat(functionName, \", must be one of the following valid parameters: \").concat(validParams.join(', ')));\n    }\n  });\n}\n\nfunction validateInit(init) {\n  validateType({\n    name: 'init',\n    value: init,\n    type: 'object'\n  });\n\n  var dappId = init.dappId,\n      networkId = init.networkId,\n      subscriptions = init.subscriptions,\n      walletSelect = init.walletSelect,\n      walletCheck = init.walletCheck,\n      darkMode = init.darkMode,\n      apiUrl = init.apiUrl,\n      hideBranding = init.hideBranding,\n      otherParams = _objectWithoutProperties(init, [\"dappId\", \"networkId\", \"subscriptions\", \"walletSelect\", \"walletCheck\", \"darkMode\", \"apiUrl\", \"hideBranding\"]);\n\n  invalidParams(otherParams, ['dappId', 'networkId', 'subscriptions', 'walletSelect', 'walletCheck', 'darkMode', 'apiUrl', 'hideBranding'], 'init');\n  validateType({\n    name: 'dappId',\n    value: dappId,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'networkId',\n    value: networkId,\n    type: 'number'\n  });\n  validateType({\n    name: 'darkMode',\n    value: darkMode,\n    type: 'boolean',\n    optional: true\n  });\n  validateType({\n    name: 'apiUrl',\n    value: apiUrl,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'hideBranding',\n    value: hideBranding,\n    type: 'boolean',\n    optional: true\n  });\n  validateType({\n    name: 'subscriptions',\n    value: subscriptions,\n    type: 'object',\n    optional: true\n  });\n\n  if (subscriptions) {\n    validateSubscriptions(subscriptions);\n  }\n\n  validateType({\n    name: 'walletSelect',\n    value: walletSelect,\n    type: 'object',\n    optional: true\n  });\n\n  if (walletSelect) {\n    validateWalletSelect(walletSelect);\n  }\n\n  validateType({\n    name: 'walletCheck',\n    value: walletCheck,\n    type: 'object',\n    optional: true\n  });\n\n  if (walletCheck) {\n    validateWalletCheck(walletCheck);\n  }\n}\n\nfunction validateSubscriptions(subscriptions) {\n  var address = subscriptions.address,\n      network = subscriptions.network,\n      balance = subscriptions.balance,\n      wallet = subscriptions.wallet,\n      otherParams = _objectWithoutProperties(subscriptions, [\"address\", \"network\", \"balance\", \"wallet\"]);\n\n  invalidParams(otherParams, validSubscriptionKeys, 'subscriptions');\n  validateType({\n    name: 'subscriptions.address',\n    value: address,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'subscriptions.network',\n    value: network,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'subscriptions.balance',\n    value: balance,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'subscriptions.wallet',\n    value: wallet,\n    type: 'function',\n    optional: true\n  });\n}\n\nfunction validateWalletSelect(walletSelect) {\n  validateType({\n    name: 'walletSelect',\n    value: walletSelect,\n    type: 'object'\n  });\n\n  var heading = walletSelect.heading,\n      description = walletSelect.description,\n      explanation = walletSelect.explanation,\n      wallets = walletSelect.wallets,\n      otherParams = _objectWithoutProperties(walletSelect, [\"heading\", \"description\", \"explanation\", \"wallets\"]);\n\n  invalidParams(otherParams, ['heading', 'description', 'explanation', 'wallets'], 'walletSelect');\n  validateType({\n    name: 'heading',\n    value: heading,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'description',\n    value: description,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'explanation',\n    value: explanation,\n    type: 'string',\n    optional: true\n  });\n\n  if (Array.isArray(wallets)) {\n    wallets.forEach(validateWallet);\n  }\n}\n\nfunction isWalletModule(obj) {\n  return obj.wallet !== undefined;\n}\n\nfunction isWalletInit(obj) {\n  return obj.walletName !== undefined;\n}\n\nfunction validateWallet(obj) {\n  validateType({\n    name: 'selectWallet.wallets item',\n    value: obj,\n    type: 'object'\n  });\n\n  if (isWalletModule(obj)) {\n    var name = obj.name,\n        iconSrc = obj.iconSrc,\n        iconSrcSet = obj.iconSrcSet,\n        svg = obj.svg,\n        _wallet = obj.wallet,\n        link = obj.link,\n        installMessage = obj.installMessage,\n        preferred = obj.preferred,\n        desktop = obj.desktop,\n        mobile = obj.mobile,\n        type = obj.type,\n        osExclusions = obj.osExclusions,\n        otherParams = _objectWithoutProperties(obj, [\"name\", \"iconSrc\", \"iconSrcSet\", \"svg\", \"wallet\", \"link\", \"installMessage\", \"preferred\", \"desktop\", \"mobile\", \"type\", \"osExclusions\"]);\n\n    invalidParams(otherParams, ['name', 'iconSrc', 'iconSrcSet', 'svg', 'wallet', 'type', 'link', 'installMessage', 'preferred', 'desktop', 'mobile', 'osExclusions'], 'selectWallets.wallets item');\n    validateType({\n      name: 'name',\n      value: name,\n      type: 'string'\n    });\n    validateType({\n      name: 'wallet',\n      value: _wallet,\n      type: 'function'\n    });\n    validateType({\n      name: 'iconSrc',\n      value: iconSrc,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'iconSrcSet',\n      value: iconSrcSet,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'svg',\n      value: svg,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'link',\n      value: link,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'installMessage',\n      value: installMessage,\n      type: 'function',\n      optional: true\n    });\n    validateType({\n      name: 'preferred',\n      value: preferred,\n      type: 'boolean',\n      optional: true\n    });\n    validateType({\n      name: 'desktop',\n      value: desktop,\n      type: 'boolean',\n      optional: true\n    });\n    validateType({\n      name: 'mobile',\n      value: mobile,\n      type: 'boolean',\n      optional: true\n    });\n    validateType({\n      name: 'type',\n      value: type,\n      type: 'string',\n      optional: true\n    });\n    validateType({\n      name: 'osExclusions',\n      value: osExclusions,\n      type: 'array',\n      optional: true\n    });\n    return;\n  }\n\n  validateWalletInit(obj);\n}\n\nfunction isWalletCheckModule(obj) {\n  return typeof obj === 'function';\n}\n\nfunction validateWalletCheck(walletCheck) {\n  validateType({\n    name: 'walletCheck',\n    value: walletCheck,\n    type: 'array'\n  });\n  walletCheck.forEach(function (check) {\n    if (isWalletCheckModule(check)) {\n      validateWalletCheckModule(check);\n    } else {\n      validateType({\n        name: 'walletCheck item',\n        value: check,\n        type: 'object'\n      });\n\n      var checkName = check.checkName,\n          heading = check.heading,\n          description = check.description,\n          minimumBalance = check.minimumBalance,\n          html = check.html,\n          icon = check.icon,\n          button = check.button,\n          otherParams = _objectWithoutProperties(check, [\"checkName\", \"heading\", \"description\", \"minimumBalance\", \"html\", \"icon\", \"button\"]);\n\n      invalidParams(otherParams, ['checkName', 'heading', 'description', 'html', 'icon', 'button', 'minimumBalance'], 'walletCheck item');\n      validateType({\n        name: 'checkName',\n        value: checkName,\n        type: 'string'\n      });\n      validateType({\n        name: 'heading',\n        value: heading,\n        type: 'string',\n        optional: true\n      });\n      validateType({\n        name: 'description',\n        value: description,\n        type: 'string',\n        optional: true\n      });\n      validateType({\n        name: 'html',\n        value: html,\n        type: 'string',\n        optional: true\n      });\n      validateType({\n        name: 'icon',\n        value: icon,\n        type: 'string',\n        optional: true\n      });\n      validateType({\n        name: 'button',\n        value: button,\n        type: 'object',\n        optional: true\n      });\n      validateType({\n        name: 'minimumBalance',\n        value: minimumBalance,\n        type: 'string',\n        optional: true\n      });\n    }\n  });\n}\n\nfunction validateWalletCheckModule(module) {\n  validateType({\n    name: 'walletCheck module',\n    value: module,\n    type: 'function'\n  });\n}\n\nfunction validateConfig(configuration) {\n  validateType({\n    name: 'configuration',\n    value: configuration,\n    type: 'object'\n  });\n\n  var darkMode = configuration.darkMode,\n      networkId = configuration.networkId,\n      otherParams = _objectWithoutProperties(configuration, [\"darkMode\", \"networkId\"]);\n\n  invalidParams(otherParams, ['darkMode', 'networkId'], 'configuration');\n  validateType({\n    name: 'darkMode',\n    value: darkMode,\n    type: 'boolean',\n    optional: true\n  });\n  validateType({\n    name: 'networkId',\n    value: networkId,\n    type: 'number',\n    optional: true\n  });\n}\n\nfunction validateModal(modal) {\n  validateType({\n    name: 'modal',\n    value: modal,\n    type: 'object'\n  });\n\n  var heading = modal.heading,\n      description = modal.description,\n      button = modal.button,\n      eventCode = modal.eventCode,\n      action = modal.action,\n      icon = modal.icon,\n      html = modal.html,\n      otherParams = _objectWithoutProperties(modal, [\"heading\", \"description\", \"button\", \"eventCode\", \"action\", \"icon\", \"html\"]);\n\n  invalidParams(otherParams, ['heading', 'description', 'button', 'eventCode', 'action', 'icon', 'html'], 'modal');\n  validateType({\n    name: 'heading',\n    value: heading,\n    type: 'string'\n  });\n  validateType({\n    name: 'description',\n    value: description,\n    type: 'string'\n  });\n  validateType({\n    name: 'eventCode',\n    value: eventCode,\n    type: 'string'\n  });\n  validateType({\n    name: 'action',\n    value: action,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'button',\n    value: button,\n    type: 'object',\n    optional: true\n  });\n  validateType({\n    name: 'html',\n    value: html,\n    type: 'string',\n    optional: true\n  });\n\n  if (button) {\n    var onclick = button.onclick,\n        _text = button.text,\n        restParams = _objectWithoutProperties(button, [\"onclick\", \"text\"]);\n\n    invalidParams(restParams, ['onclick', 'text'], 'button');\n    validateType({\n      name: 'onclick',\n      value: onclick,\n      type: 'function'\n    });\n    validateType({\n      name: 'text',\n      value: _text,\n      type: 'string'\n    });\n  }\n\n  validateType({\n    name: 'icon',\n    value: icon,\n    type: 'string',\n    optional: true\n  });\n}\n\nfunction validateWalletInterface(walletInterface) {\n  validateType({\n    name: 'walletInterface',\n    value: walletInterface,\n    type: 'object'\n  });\n\n  var name = walletInterface.name,\n      connect = walletInterface.connect,\n      disconnect = walletInterface.disconnect,\n      address = walletInterface.address,\n      network = walletInterface.network,\n      balance = walletInterface.balance,\n      otherParams = _objectWithoutProperties(walletInterface, [\"name\", \"connect\", \"disconnect\", \"address\", \"network\", \"balance\"]);\n\n  invalidParams(otherParams, ['name', 'connect', 'disconnect', 'address', 'network', 'balance'], 'walletInterface');\n  validateType({\n    name: 'name',\n    value: name,\n    type: 'string'\n  });\n  validateType({\n    name: 'connect',\n    value: connect,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'disconnect',\n    value: disconnect,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'address',\n    value: address,\n    type: 'object'\n  });\n  validateType({\n    name: 'address.get',\n    value: address.get,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'address.onChange',\n    value: address.onChange,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'network',\n    value: network,\n    type: 'object'\n  });\n  validateType({\n    name: 'network.get',\n    value: network.get,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'network.onChange',\n    value: network.onChange,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'balance',\n    value: balance,\n    type: 'object'\n  });\n  validateType({\n    name: 'balance.get',\n    value: balance.get,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'balance.onChange',\n    value: balance.onChange,\n    type: 'function',\n    optional: true\n  });\n}\n\nfunction validateWalletInit(walletInit) {\n  validateType({\n    name: 'walletInit',\n    value: walletInit,\n    type: 'object'\n  });\n\n  var walletName = walletInit.walletName,\n      preferred = walletInit.preferred,\n      label = walletInit.label,\n      iconSrc = walletInit.iconSrc,\n      svg = walletInit.svg,\n      otherParams = _objectWithoutProperties(walletInit, [\"walletName\", \"preferred\", \"label\", \"iconSrc\", \"svg\"]);\n\n  invalidParams(otherParams, ['walletName', 'apiKey', 'networkId', 'infuraKey', 'rpc', 'bridge', 'preferred', 'label', 'iconSrc', 'svg', 'appUrl', 'email', 'rpcUrl', 'LedgerTransport', 'buildEnv', 'buttonPosition', 'enableLogging', 'loginMethod', 'loginConfig', 'showTorusButton', 'modalZindex', 'integrity', 'whiteLabel', 'appName', 'appLogoUrl', 'enabledVerifiers', 'disableNotifications', 'rpcUri', 'webUri', 'xsUri', 'blockedPopupRedirect'], 'walletInitObject');\n  validateType({\n    name: 'walletInit.walletName',\n    value: walletName,\n    type: 'string'\n  });\n  validateType({\n    name: 'walletInit.preferred',\n    value: preferred,\n    type: 'boolean',\n    optional: true\n  });\n  validateType({\n    name: 'walletInit.label',\n    value: label,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'walletInit.iconSrc',\n    value: iconSrc,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'walletInit.svg',\n    value: svg,\n    type: 'string',\n    optional: true\n  });\n}\n\nvar app = writable({\n  dappId: '',\n  networkId: 1,\n  version: '',\n  mobileDevice: false,\n  os: '',\n  darkMode: false,\n  walletSelectInProgress: false,\n  walletSelectCompleted: false,\n  walletCheckInProgress: false,\n  walletCheckCompleted: false,\n  accountSelectInProgress: false,\n  autoSelectWallet: '',\n  checkModules: [],\n  walletSelectDisplayedUI: false,\n  walletCheckDisplayedUI: false,\n  displayBranding: false\n});\nvar stateSyncStatus = {\n  balance: null,\n  address: null,\n  network: null\n};\nvar address;\nvar network;\nvar balance;\nvar wallet;\nvar state;\nvar walletInterface;\nvar currentSyncerIntervals;\n\nfunction initializeStores() {\n  address = createWalletStateSliceStore({\n    parameter: 'address',\n    initialState: null\n  });\n  network = createWalletStateSliceStore({\n    parameter: 'network',\n    initialState: null\n  });\n  balance = get_store_value(app).dappId ? createBalanceStore(null) : createWalletStateSliceStore({\n    parameter: 'balance',\n    initialState: null,\n    intervalSetting: 1000\n  });\n  wallet = writable({\n    name: null,\n    provider: null,\n    connect: null,\n    instance: null,\n    dashboard: null,\n    type: null\n  });\n  state = derived([address, network, balance, wallet, app], function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 5),\n        $address = _ref6[0],\n        $network = _ref6[1],\n        $balance = _ref6[2],\n        $wallet = _ref6[3],\n        $app = _ref6[4];\n\n    return {\n      address: $address,\n      network: $network,\n      balance: $balance,\n      wallet: $wallet,\n      mobileDevice: $app.mobileDevice,\n      appNetworkId: $app.networkId\n    };\n  });\n  currentSyncerIntervals = [];\n  walletInterface = createWalletInterfaceStore(null);\n  walletInterface.subscribe(function (walletInterface) {\n    // make sure that stores have been initialized\n    if (state) {\n      // clear all current intervals if they exist\n      currentSyncerIntervals.forEach(function (interval) {\n        return interval && interval.clear();\n      });\n      var currentState = get_store_value(state); // reset state\n\n      currentState.balance && balance.reset();\n      currentState.address && address.reset();\n      currentState.network && network.reset();\n\n      if (walletInterface) {\n        // start syncing state and save intervals\n        currentSyncerIntervals = [address.setStateSyncer(walletInterface.address), network.setStateSyncer(walletInterface.network), balance.setStateSyncer(walletInterface.balance)];\n      }\n\n      resetCheckModules();\n    }\n  });\n}\n\nfunction resetWalletState(options) {\n  walletInterface.update(function (currentInterface) {\n    // no interface then don't do anything\n    if (!currentInterface) {\n      return currentInterface;\n    } // no options object, so do a full reset by disconnecting and setting interface to null\n\n\n    if (!options) {\n      wallet.update(function () {\n        return {\n          name: undefined,\n          provider: undefined,\n          connect: undefined,\n          instance: undefined,\n          dashboard: undefined,\n          type: undefined\n        };\n      });\n      currentInterface.disconnect && currentInterface.disconnect();\n      return null;\n    }\n\n    var walletName = options.walletName,\n        disconnected = options.disconnected; // if walletName is the same as the current interface name then do a full reset (checking if to do a disconnect)\n\n    if (currentInterface.name === walletName) {\n      wallet.update(function () {\n        return {\n          name: undefined,\n          provider: undefined,\n          connect: undefined,\n          instance: undefined,\n          dashboard: undefined\n        };\n      });\n      !disconnected && currentInterface.disconnect && currentInterface.disconnect();\n      return null;\n    }\n\n    return currentInterface;\n  });\n  resetCheckModules();\n  app.update(function (store) {\n    return _objectSpread(_objectSpread({}, store), {}, {\n      walletSelectInProgress: false,\n      walletSelectCompleted: false\n    });\n  });\n}\n\nfunction resetCheckModules() {\n  var _get_store_value = get_store_value(app),\n      checkModules = _get_store_value.checkModules;\n\n  if (Array.isArray(checkModules)) {\n    checkModules.forEach(function (m) {\n      return m.reset && m.reset();\n    });\n  }\n}\n\nfunction createWalletInterfaceStore(initialState) {\n  var _writable = writable(initialState),\n      subscribe = _writable.subscribe,\n      _set = _writable.set,\n      update = _writable.update;\n\n  return {\n    subscribe: subscribe,\n    update: update,\n    set: function set(walletInterface) {\n      if (walletInterface) {\n        validateWalletInterface(walletInterface);\n      }\n\n      _set(walletInterface);\n    }\n  };\n}\n\nfunction createWalletStateSliceStore(options) {\n  var parameter = options.parameter,\n      initialState = options.initialState,\n      intervalSetting = options.intervalSetting;\n\n  var _writable2 = writable(initialState),\n      subscribe = _writable2.subscribe,\n      set = _writable2.set;\n\n  var currentState;\n  subscribe(function (store) {\n    currentState = store;\n  });\n  return {\n    subscribe: subscribe,\n    reset: function reset() {\n      set(undefined);\n    },\n    get: function get() {\n      return currentState;\n    },\n    setStateSyncer: function setStateSyncer(stateSyncer) {\n      validateType({\n        name: 'stateSyncer',\n        value: stateSyncer,\n        type: 'object'\n      });\n      var get = stateSyncer.get,\n          onChange = stateSyncer.onChange;\n      validateType({\n        name: \"\".concat(parameter, \".get\"),\n        value: get,\n        type: 'function',\n        optional: true\n      });\n      validateType({\n        name: \"\".concat(parameter, \".onChange\"),\n        value: onChange,\n        type: 'function',\n        optional: true\n      });\n\n      if (onChange) {\n        stateSyncStatus[parameter] = new Promise(function (resolve) {\n          onChange(function (newVal) {\n            resolve();\n\n            if (newVal || currentState !== initialState) {\n              set(newVal);\n            }\n          });\n        });\n        return;\n      }\n\n      if (get) {\n        var interval = createInterval(function () {\n          stateSyncStatus[parameter] = get().then(function (newVal) {\n            stateSyncStatus[parameter] = null;\n\n            if (newVal || currentState !== initialState) {\n              interval.status.active && set(newVal);\n            }\n          })[\"catch\"](function (err) {\n            console.warn(\"Error getting \".concat(parameter, \" from state syncer: \").concat(err));\n            stateSyncStatus[parameter] = null;\n          });\n        }, intervalSetting || 200);\n        return interval;\n      }\n    }\n  };\n}\n\nfunction createBalanceStore(initialState) {\n  var stateSyncer;\n  var emitter;\n  var emitterAddress;\n\n  var cancel = function cancel() {};\n\n  var _derived = derived([address, network], function (_ref7, set) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        $address = _ref8[0],\n        $network = _ref8[1];\n\n    if (stateSyncer && !stateSyncer.onChange) {\n      if ($address && $network && stateSyncer.get && set) {\n        cancel = syncStateWithTimeout({\n          getState: stateSyncer.get,\n          setState: set,\n          timeout: 2000,\n          currentBalance: get_store_value(balance)\n        });\n\n        if (emitterAddress !== $address) {\n          var _blocknative = getBlocknative(); // unsubscribe from previous address\n\n\n          if (emitterAddress) {\n            _blocknative.unsubscribe(emitterAddress);\n          }\n\n          emitter = _blocknative.account($address).emitter;\n          emitter.on('txConfirmed', function () {\n            if (stateSyncer.get) {\n              cancel = syncStateWithTimeout({\n                getState: stateSyncer.get,\n                setState: set,\n                timeout: 2000,\n                currentBalance: get_store_value(balance),\n                pollStart: Date.now()\n              });\n            }\n\n            return false;\n          });\n          emitterAddress = $address;\n        }\n      } else if (emitterAddress && !$address) {\n        var _blocknative2 = getBlocknative(); // unsubscribe from previous address\n\n\n        _blocknative2.unsubscribe(emitterAddress); // no address, so set balance to undefined\n\n\n        set && set(undefined);\n        emitterAddress = undefined;\n      }\n    }\n\n    set(initialState);\n  }),\n      subscribe = _derived.subscribe;\n\n  var currentState;\n  subscribe(function (store) {\n    currentState = store;\n  });\n  return {\n    subscribe: subscribe,\n    get: function get() {\n      return currentState;\n    },\n    setStateSyncer: function setStateSyncer(syncer) {\n      validateType({\n        name: 'syncer',\n        value: syncer,\n        type: 'object'\n      });\n      var get = syncer.get,\n          onChange = syncer.onChange;\n      validateType({\n        name: 'balance.get',\n        value: get,\n        type: 'function',\n        optional: true\n      });\n      validateType({\n        name: 'balance.onChange',\n        value: onChange,\n        type: 'function',\n        optional: true\n      });\n      stateSyncer = syncer;\n      return undefined;\n    },\n    reset: cancel\n  };\n}\n\nfunction syncStateWithTimeout(options) {\n  var getState = options.getState,\n      setState = options.setState,\n      timeout = options.timeout,\n      currentBalance = options.currentBalance,\n      pollStart = options.pollStart;\n\n  if (pollStart && Date.now() - pollStart > 25000) {\n    return function () {};\n  }\n\n  var prom = makeCancelable(getState());\n  stateSyncStatus.balance = prom;\n  prom.then( /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(result) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(result === currentBalance && pollStart)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return wait$1(350);\n\n            case 3:\n              syncStateWithTimeout(options);\n              _context2.next = 8;\n              break;\n\n            case 6:\n              stateSyncStatus.balance = null;\n              setState(result);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3) {\n      return _ref9.apply(this, arguments);\n    };\n  }())[\"catch\"](function () {\n    stateSyncStatus.balance = null;\n  });\n  var timedOut = wait$1(timeout);\n  timedOut.then(function () {\n    prom.cancel();\n  });\n  return function () {\n    return prom.cancel();\n  };\n}\n/* src/elements/Branding.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css() {\n  var style = element(\"style\");\n  style.id = \"svelte-15m9up6-style\";\n  style.textContent = \".bn-branding.svelte-15m9up6{font-size:0.75rem;font-family:inherit;margin:0.4rem;display:flex;justify-content:center;width:100%;align-items:center}span.svelte-15m9up6{opacity:0.3}a.svelte-15m9up6{color:inherit;display:flex;margin-left:0.25rem;align-items:center}.bn-logo.svelte-15m9up6{height:1.1rem;margin-left:0.25rem;margin-bottom:0.1rem}svg.svelte-15m9up6{height:100%;width:auto}\";\n  append(document.head, style);\n} // (76:6) {:else}\n\n\nfunction create_else_block(ctx) {\n  var svg;\n  var g;\n  var path0;\n  var path1;\n  return {\n    c: function c() {\n      svg = svg_element(\"svg\");\n      g = svg_element(\"g\");\n      path0 = svg_element(\"path\");\n      path1 = svg_element(\"path\");\n      attr(path0, \"d\", \"m1.35473654 25.2695268\\n              41.68515786-24.21771792c.5647044-.32807482 1.2619836-.32807795\\n              1.8266909-.00000821l19.9275013\\n              11.57698923c.5635938.3274228.9088026.9314826.9048094\\n              1.5832707l-.1501112 24.5017756 20.8472716\\n              12.1113348c.5601525.3254236.9048434.9243111.9048434\\n              1.5721317v48.4560123c0 .647825-.3446953 1.246715-.9048537\\n              1.572138l-41.6835092\\n              24.215895c-.5655731.328567-1.2640448.328023-1.8291052-.001426l-41.5311197-24.21401c-.5587764-.325785-.90240476-.923899-.90240476-1.570712v-49.505258-24.5082917c0-.6478147.34468473-1.2466978.9048293-1.5721235z\");\n      attr(path1, \"d\", \"m22.0428451 114.442824v-25.2731141l-21.59284788-12.5449388\\n              42.75014288 24.6551909c.5648507.325765 1.260898.324109\\n              1.8241926-.004339l42.2766571-24.6508519-21.5955473\\n              12.6370084v-24.2248276c0-.6488012-.3457266-1.2484405-.9072187-1.5735092l-20.9222804-12.1126883\\n              21.6729314-12.6370084-42.4525958\\n              24.4763352c-.5545159.3197099-1.236865.3218902-1.7934127.0057303l-20.85286908-11.8459598\");\n      set_style(g, \"stroke\", \"#000\");\n      set_style(g, \"stroke-width\", \"2.70793\");\n      set_style(g, \"fill\", \"none\");\n      set_style(g, \"fill-rule\", \"evenodd\");\n      set_style(g, \"stroke-linecap\", \"round\");\n      set_style(g, \"stroke-linejoin\", \"round\");\n      attr(g, \"transform\", \"translate(1.818182 .909091)\");\n      attr(svg, \"height\", \"130\");\n      attr(svg, \"viewBox\", \"0 0 91 130\");\n      attr(svg, \"width\", \"91\");\n      attr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n      attr(svg, \"class\", \"svelte-15m9up6\");\n    },\n    m: function m(target, anchor) {\n      insert(target, svg, anchor);\n      append(svg, g);\n      append(g, path0);\n      append(g, path1);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(svg);\n    }\n  };\n} // (48:6) {#if darkMode}\n\n\nfunction create_if_block(ctx) {\n  var svg;\n  var g;\n  var path0;\n  var path1;\n  return {\n    c: function c() {\n      svg = svg_element(\"svg\");\n      g = svg_element(\"g\");\n      path0 = svg_element(\"path\");\n      path1 = svg_element(\"path\");\n      attr(path0, \"d\", \"m1.35473654 25.2695268\\n              41.68515786-24.21771792c.5647044-.32807482 1.2619836-.32807795\\n              1.8266909-.00000821l19.9275013\\n              11.57698923c.5635938.3274228.9088026.9314826.9048094\\n              1.5832707l-.1501112 24.5017756 20.8472716\\n              12.1113348c.5601525.3254236.9048434.9243111.9048434\\n              1.5721317v48.4560123c0 .647825-.3446953 1.246715-.9048537\\n              1.572138l-41.6835092\\n              24.215895c-.5655731.328567-1.2640448.328023-1.8291052-.001426l-41.5311197-24.21401c-.5587764-.325785-.90240476-.923899-.90240476-1.570712v-49.505258-24.5082917c0-.6478147.34468473-1.2466978.9048293-1.5721235z\");\n      attr(path1, \"d\", \"m22.0428451 114.442824v-25.2731141l-21.59284788-12.5449388\\n              42.75014288 24.6551909c.5648507.325765 1.260898.324109\\n              1.8241926-.004339l42.2766571-24.6508519-21.5955473\\n              12.6370084v-24.2248276c0-.6488012-.3457266-1.2484405-.9072187-1.5735092l-20.9222804-12.1126883\\n              21.6729314-12.6370084-42.4525958\\n              24.4763352c-.5545159.3197099-1.236865.3218902-1.7934127.0057303l-20.85286908-11.8459598\");\n      set_style(g, \"stroke\", \"#fff\");\n      set_style(g, \"stroke-width\", \"2.70793\");\n      set_style(g, \"fill\", \"none\");\n      set_style(g, \"fill-rule\", \"evenodd\");\n      set_style(g, \"stroke-linecap\", \"round\");\n      set_style(g, \"stroke-linejoin\", \"round\");\n      attr(g, \"transform\", \"translate(1.818182 .909091)\");\n      attr(svg, \"height\", \"130\");\n      attr(svg, \"viewBox\", \"0 0 91 130\");\n      attr(svg, \"width\", \"91\");\n      attr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n      attr(svg, \"class\", \"svelte-15m9up6\");\n    },\n    m: function m(target, anchor) {\n      insert(target, svg, anchor);\n      append(svg, g);\n      append(g, path0);\n      append(g, path1);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(svg);\n    }\n  };\n}\n\nfunction create_fragment(ctx) {\n  var div1;\n  var span0;\n  var t1;\n  var a;\n  var span1;\n  var t3;\n  var div0;\n\n  function select_block_type(ctx, dirty) {\n    if (\n    /*darkMode*/\n    ctx[0]) return create_if_block;\n    return create_else_block;\n  }\n\n  var current_block_type = select_block_type(ctx);\n  var if_block = current_block_type(ctx);\n  return {\n    c: function c() {\n      div1 = element(\"div\");\n      span0 = element(\"span\");\n      span0.textContent = \"Powered by\";\n      t1 = space();\n      a = element(\"a\");\n      span1 = element(\"span\");\n      span1.textContent = \"Blocknative\";\n      t3 = space();\n      div0 = element(\"div\");\n      if_block.c();\n      attr(span0, \"class\", \"svelte-15m9up6\");\n      attr(span1, \"class\", \"svelte-15m9up6\");\n      attr(div0, \"class\", \"bn-logo svelte-15m9up6\");\n      attr(a, \"href\", \"https://hubs.ly/H0qh2g10\");\n      attr(a, \"class\", \"bn-onboard-clickable svelte-15m9up6\");\n      attr(a, \"target\", \"_blank\");\n      attr(a, \"rel\", \"noopener noreferrer\");\n      attr(div1, \"class\", \"bn-branding svelte-15m9up6\");\n    },\n    m: function m(target, anchor) {\n      insert(target, div1, anchor);\n      append(div1, span0);\n      append(div1, t1);\n      append(div1, a);\n      append(a, span1);\n      append(a, t3);\n      append(a, div0);\n      if_block.m(div0, null);\n    },\n    p: function p(ctx, _ref10) {\n      var _ref11 = _slicedToArray(_ref10, 1),\n          dirty = _ref11[0];\n\n      if (current_block_type !== (current_block_type = select_block_type(ctx))) {\n        if_block.d(1);\n        if_block = current_block_type(ctx);\n\n        if (if_block) {\n          if_block.c();\n          if_block.m(div0, null);\n        }\n      }\n    },\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(div1);\n      if_block.d();\n    }\n  };\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var darkMode = $$props.darkMode;\n\n  $$self.$set = function ($$props) {\n    if (\"darkMode\" in $$props) $$invalidate(0, darkMode = $$props.darkMode);\n  };\n\n  return [darkMode];\n}\n\nvar Branding = /*#__PURE__*/function (_SvelteComponent) {\n  _inherits(Branding, _SvelteComponent);\n\n  var _super = _createSuper(Branding);\n\n  function Branding(options) {\n    var _this;\n\n    _classCallCheck(this, Branding);\n\n    _this = _super.call(this);\n    if (!document.getElementById(\"svelte-15m9up6-style\")) add_css();\n    init(_assertThisInitialized(_this), options, instance, create_fragment, safe_not_equal, {\n      darkMode: 0\n    });\n    return _this;\n  }\n\n  return Branding;\n}(SvelteComponent);\n/* src/components/Modal.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$1() {\n  var style = element(\"style\");\n  style.id = \"svelte-rntogh-style\";\n  style.textContent = \"aside.svelte-rntogh{display:flex;font-family:'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;justify-content:center;align-items:center;position:fixed;font-size:16px;top:0;left:0;width:100vw;height:100vh;background:rgba(0, 0, 0, 0.3)}@media screen and (max-width: 420px){aside.svelte-rntogh{font-size:14px}}section.svelte-rntogh{display:block;box-sizing:content-box;background:#ffffff;border-radius:10px;box-shadow:0 1px 5px 0 rgba(0, 0, 0, 0.1);font-family:inherit;font-size:inherit;padding:1.33em;position:relative;overflow:hidden;max-width:37em;color:#4a4a4a}div.svelte-rntogh{height:0.66em;position:absolute;padding:0.25em;top:1.33em;right:1.33em;font-size:inherit;font-family:inherit;border-radius:5px;transition:background 200ms ease-in-out;display:flex;justify-content:center;align-items:center}div.svelte-rntogh:hover{cursor:pointer;background:#eeeeee}svg.svelte-rntogh{width:10px;height:10px}.bn-onboard-dark-mode-close-background.svelte-rntogh:hover{background:#00222c}.no-padding-branding.svelte-rntogh{padding-bottom:0}\";\n  append(document.head, style);\n} // (95:4) {#if $app.displayBranding}\n\n\nfunction create_if_block_1(ctx) {\n  var branding;\n  var current;\n  branding = new Branding({\n    props: {\n      darkMode:\n      /*$app*/\n      ctx[3].darkMode\n    }\n  });\n  return {\n    c: function c() {\n      create_component(branding.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(branding, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var branding_changes = {};\n      if (dirty &\n      /*$app*/\n      8) branding_changes.darkMode =\n      /*$app*/\n      ctx[3].darkMode;\n      branding.$set(branding_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(branding.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(branding.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(branding, detaching);\n    }\n  };\n} // (98:4) {#if closeable}\n\n\nfunction create_if_block$1(ctx) {\n  var div;\n  var svg;\n  var g0;\n  var path;\n  var g1;\n  var g2;\n  var g3;\n  var g4;\n  var g5;\n  var g6;\n  var g7;\n  var g8;\n  var g9;\n  var g10;\n  var g11;\n  var g12;\n  var g13;\n  var g14;\n  var g15;\n  var svg_fill_value;\n  var mounted;\n  var dispose;\n  return {\n    c: function c() {\n      div = element(\"div\");\n      svg = svg_element(\"svg\");\n      g0 = svg_element(\"g\");\n      path = svg_element(\"path\");\n      g1 = svg_element(\"g\");\n      g2 = svg_element(\"g\");\n      g3 = svg_element(\"g\");\n      g4 = svg_element(\"g\");\n      g5 = svg_element(\"g\");\n      g6 = svg_element(\"g\");\n      g7 = svg_element(\"g\");\n      g8 = svg_element(\"g\");\n      g9 = svg_element(\"g\");\n      g10 = svg_element(\"g\");\n      g11 = svg_element(\"g\");\n      g12 = svg_element(\"g\");\n      g13 = svg_element(\"g\");\n      g14 = svg_element(\"g\");\n      g15 = svg_element(\"g\");\n      attr(path, \"d\", \"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\\n              c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\\n              C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\\n              s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\");\n      attr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n      attr(svg, \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n      attr(svg, \"x\", \"0px\");\n      attr(svg, \"y\", \"0px\");\n      attr(svg, \"viewBox\", \"0 0 47.971 47.971\");\n      set_style(svg, \"enable-background\", \"new 0 0 47.971 47.971\");\n      set_style(svg, \"transition\", \"fill 150ms\\n          ease-in-out\");\n      attr(svg, \"fill\", svg_fill_value =\n      /*closeHovered*/\n      ctx[2] ?\n      /*$app*/\n      ctx[3].darkMode ? \"#ffffff\" : \"#4a4a4a\" : \"#9B9B9B\");\n      attr(svg, \"xml:space\", \"preserve\");\n      attr(svg, \"class\", \"svelte-rntogh\");\n      attr(div, \"class\", \"bn-onboard-custom bn-onboard-modal-content-close svelte-rntogh\");\n      toggle_class(div, \"bn-onboard-dark-mode-close-background\",\n      /*$app*/\n      ctx[3].darkMode);\n    },\n    m: function m(target, anchor) {\n      insert(target, div, anchor);\n      append(div, svg);\n      append(svg, g0);\n      append(g0, path);\n      append(svg, g1);\n      append(svg, g2);\n      append(svg, g3);\n      append(svg, g4);\n      append(svg, g5);\n      append(svg, g6);\n      append(svg, g7);\n      append(svg, g8);\n      append(svg, g9);\n      append(svg, g10);\n      append(svg, g11);\n      append(svg, g12);\n      append(svg, g13);\n      append(svg, g14);\n      append(svg, g15);\n\n      if (!mounted) {\n        dispose = [listen(div, \"click\", function () {\n          if (is_function(\n          /*closeModal*/\n          ctx[0]))\n            /*closeModal*/\n            ctx[0].apply(this, arguments);\n        }), listen(div, \"mouseenter\",\n        /*mouseenter_handler*/\n        ctx[6]), listen(div, \"mouseleave\",\n        /*mouseleave_handler*/\n        ctx[7])];\n        mounted = true;\n      }\n    },\n    p: function p(new_ctx, dirty) {\n      ctx = new_ctx;\n\n      if (dirty &\n      /*closeHovered, $app*/\n      12 && svg_fill_value !== (svg_fill_value =\n      /*closeHovered*/\n      ctx[2] ?\n      /*$app*/\n      ctx[3].darkMode ? \"#ffffff\" : \"#4a4a4a\" : \"#9B9B9B\")) {\n        attr(svg, \"fill\", svg_fill_value);\n      }\n\n      if (dirty &\n      /*$app*/\n      8) {\n        toggle_class(div, \"bn-onboard-dark-mode-close-background\",\n        /*$app*/\n        ctx[3].darkMode);\n      }\n    },\n    d: function d(detaching) {\n      if (detaching) detach(div);\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\n\nfunction create_fragment$1(ctx) {\n  var aside;\n  var section;\n  var t0;\n  var t1;\n  var aside_transition;\n  var current;\n  var mounted;\n  var dispose;\n  var default_slot_template =\n  /*$$slots*/\n  ctx[5][\"default\"];\n  var default_slot = create_slot(default_slot_template, ctx,\n  /*$$scope*/\n  ctx[4], null);\n  var if_block0 =\n  /*$app*/\n  ctx[3].displayBranding && create_if_block_1(ctx);\n  var if_block1 =\n  /*closeable*/\n  ctx[1] && create_if_block$1(ctx);\n  return {\n    c: function c() {\n      aside = element(\"aside\");\n      section = element(\"section\");\n      if (default_slot) default_slot.c();\n      t0 = space();\n      if (if_block0) if_block0.c();\n      t1 = space();\n      if (if_block1) if_block1.c();\n      attr(section, \"class\", \"bn-onboard-custom bn-onboard-modal-content svelte-rntogh\");\n      toggle_class(section, \"bn-onboard-dark-mode\",\n      /*$app*/\n      ctx[3].darkMode);\n      toggle_class(section, \"no-padding-branding\",\n      /*$app*/\n      ctx[3].displayBranding);\n      attr(aside, \"class\", \"bn-onboard-custom bn-onboard-modal svelte-rntogh\");\n    },\n    m: function m(target, anchor) {\n      insert(target, aside, anchor);\n      append(aside, section);\n\n      if (default_slot) {\n        default_slot.m(section, null);\n      }\n\n      append(section, t0);\n      if (if_block0) if_block0.m(section, null);\n      append(section, t1);\n      if (if_block1) if_block1.m(section, null);\n      current = true;\n\n      if (!mounted) {\n        dispose = [listen(section, \"click\", click_handler), listen(aside, \"click\", function () {\n          if (is_function(\n          /*closeModal*/\n          ctx[0]))\n            /*closeModal*/\n            ctx[0].apply(this, arguments);\n        })];\n        mounted = true;\n      }\n    },\n    p: function p(new_ctx, _ref12) {\n      var _ref13 = _slicedToArray(_ref12, 1),\n          dirty = _ref13[0];\n\n      ctx = new_ctx;\n\n      if (default_slot) {\n        if (default_slot.p && dirty &\n        /*$$scope*/\n        16) {\n          update_slot(default_slot, default_slot_template, ctx,\n          /*$$scope*/\n          ctx[4], dirty, null, null);\n        }\n      }\n\n      if (\n      /*$app*/\n      ctx[3].displayBranding) {\n        if (if_block0) {\n          if_block0.p(ctx, dirty);\n\n          if (dirty &\n          /*$app*/\n          8) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_1(ctx);\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(section, t1);\n        }\n      } else if (if_block0) {\n        group_outros();\n        transition_out(if_block0, 1, 1, function () {\n          if_block0 = null;\n        });\n        check_outros();\n      }\n\n      if (\n      /*closeable*/\n      ctx[1]) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n        } else {\n          if_block1 = create_if_block$1(ctx);\n          if_block1.c();\n          if_block1.m(section, null);\n        }\n      } else if (if_block1) {\n        if_block1.d(1);\n        if_block1 = null;\n      }\n\n      if (dirty &\n      /*$app*/\n      8) {\n        toggle_class(section, \"bn-onboard-dark-mode\",\n        /*$app*/\n        ctx[3].darkMode);\n      }\n\n      if (dirty &\n      /*$app*/\n      8) {\n        toggle_class(section, \"no-padding-branding\",\n        /*$app*/\n        ctx[3].displayBranding);\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(default_slot, local);\n      transition_in(if_block0);\n      add_render_callback(function () {\n        if (!aside_transition) aside_transition = create_bidirectional_transition(aside, fade, {}, true);\n        aside_transition.run(1);\n      });\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(default_slot, local);\n      transition_out(if_block0);\n      if (!aside_transition) aside_transition = create_bidirectional_transition(aside, fade, {}, false);\n      aside_transition.run(0);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(aside);\n      if (default_slot) default_slot.d(detaching);\n      if (if_block0) if_block0.d();\n      if (if_block1) if_block1.d();\n      if (detaching && aside_transition) aside_transition.end();\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\n\nvar click_handler = function click_handler(e) {\n  return e.stopPropagation();\n};\n\nfunction instance$1($$self, $$props, $$invalidate) {\n  var $app;\n  component_subscribe($$self, app, function ($$value) {\n    return $$invalidate(3, $app = $$value);\n  });\n  var closeModal = $$props.closeModal;\n  var _$$props$closeable = $$props.closeable,\n      closeable = _$$props$closeable === void 0 ? true : _$$props$closeable;\n  var closeHovered;\n  var _$$props$$$slots = $$props.$$slots,\n      $$slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n\n  var mouseenter_handler = function mouseenter_handler() {\n    return $$invalidate(2, closeHovered = true);\n  };\n\n  var mouseleave_handler = function mouseleave_handler() {\n    return $$invalidate(2, closeHovered = false);\n  };\n\n  $$self.$set = function ($$props) {\n    if (\"closeModal\" in $$props) $$invalidate(0, closeModal = $$props.closeModal);\n    if (\"closeable\" in $$props) $$invalidate(1, closeable = $$props.closeable);\n    if (\"$$scope\" in $$props) $$invalidate(4, $$scope = $$props.$$scope);\n  };\n\n  return [closeModal, closeable, closeHovered, $app, $$scope, $$slots, mouseenter_handler, mouseleave_handler];\n}\n\nvar Modal = /*#__PURE__*/function (_SvelteComponent2) {\n  _inherits(Modal, _SvelteComponent2);\n\n  var _super2 = _createSuper(Modal);\n\n  function Modal(options) {\n    var _this2;\n\n    _classCallCheck(this, Modal);\n\n    _this2 = _super2.call(this);\n    if (!document.getElementById(\"svelte-rntogh-style\")) add_css$1();\n    init(_assertThisInitialized(_this2), options, instance$1, create_fragment$1, safe_not_equal, {\n      closeModal: 0,\n      closeable: 1\n    });\n    return _this2;\n  }\n\n  return Modal;\n}(SvelteComponent);\n/* src/components/ModalHeader.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$2() {\n  var style = element(\"style\");\n  style.id = \"svelte-8i8o6j-style\";\n  style.textContent = \"header.svelte-8i8o6j{display:flex;align-items:center;font-size:inherit;font-family:inherit;margin-bottom:1em}div.svelte-8i8o6j{display:flex;justify-content:center;align-items:center;font-size:inherit;font-family:inherit;padding:0.6em;border-radius:30px;background:#eeeeee}h3.svelte-8i8o6j{font-weight:bold;font-size:1.33em;font-family:inherit;margin:0 0 0 0.5em}\";\n  append(document.head, style);\n}\n\nfunction create_fragment$2(ctx) {\n  var header;\n  var div;\n  var t0;\n  var h3;\n  var t1;\n  return {\n    c: function c() {\n      header = element(\"header\");\n      div = element(\"div\");\n      t0 = space();\n      h3 = element(\"h3\");\n      t1 = text(\n      /*heading*/\n      ctx[0]);\n      attr(div, \"class\", \"bn-onboard-custom bn-onboard-modal-content-header-icon svelte-8i8o6j\");\n      toggle_class(div, \"bn-onboard-dark-mode-background\",\n      /*$app*/\n      ctx[2].darkMode);\n      attr(h3, \"class\", \"bn-onboard-custom bn-onboard-modal-content-header-heading svelte-8i8o6j\");\n      attr(header, \"class\", \"bn-onboard-custom bn-onboard-modal-content-header svelte-8i8o6j\");\n    },\n    m: function m(target, anchor) {\n      insert(target, header, anchor);\n      append(header, div);\n      div.innerHTML =\n      /*icon*/\n      ctx[1];\n      append(header, t0);\n      append(header, h3);\n      append(h3, t1);\n    },\n    p: function p(ctx, _ref14) {\n      var _ref15 = _slicedToArray(_ref14, 1),\n          dirty = _ref15[0];\n\n      if (dirty &\n      /*icon*/\n      2) div.innerHTML =\n      /*icon*/\n      ctx[1];\n\n      if (dirty &\n      /*$app*/\n      4) {\n        toggle_class(div, \"bn-onboard-dark-mode-background\",\n        /*$app*/\n        ctx[2].darkMode);\n      }\n\n      if (dirty &\n      /*heading*/\n      1) set_data(t1,\n      /*heading*/\n      ctx[0]);\n    },\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(header);\n    }\n  };\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n  var $app;\n  component_subscribe($$self, app, function ($$value) {\n    return $$invalidate(2, $app = $$value);\n  });\n  var heading = $$props.heading;\n  var icon = $$props.icon;\n\n  $$self.$set = function ($$props) {\n    if (\"heading\" in $$props) $$invalidate(0, heading = $$props.heading);\n    if (\"icon\" in $$props) $$invalidate(1, icon = $$props.icon);\n  };\n\n  return [heading, icon, $app];\n}\n\nvar ModalHeader = /*#__PURE__*/function (_SvelteComponent3) {\n  _inherits(ModalHeader, _SvelteComponent3);\n\n  var _super3 = _createSuper(ModalHeader);\n\n  function ModalHeader(options) {\n    var _this3;\n\n    _classCallCheck(this, ModalHeader);\n\n    _this3 = _super3.call(this);\n    if (!document.getElementById(\"svelte-8i8o6j-style\")) add_css$2();\n    init(_assertThisInitialized(_this3), options, instance$2, create_fragment$2, safe_not_equal, {\n      heading: 0,\n      icon: 1\n    });\n    return _this3;\n  }\n\n  return ModalHeader;\n}(SvelteComponent);\n/* src/elements/Button.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$3() {\n  var style = element(\"style\");\n  style.id = \"svelte-r5g1v4-style\";\n  style.textContent = \"button.svelte-r5g1v4{background:inherit;font-size:0.889em;font-family:inherit;border:1px solid #4a90e2;border-radius:40px;padding:0.55em 1.4em;cursor:pointer;color:#4a90e2;font-family:inherit;transition:background 150ms ease-in-out;line-height:1.15}button.svelte-r5g1v4:focus{outline:none}button.svelte-r5g1v4:hover{background:#ecf3fc}.bn-onboard-prepare-button-right.svelte-r5g1v4{position:absolute;right:0}.bn-onboard-prepare-button-left.svelte-r5g1v4{position:absolute;left:0}\";\n  append(document.head, style);\n}\n\nfunction create_fragment$3(ctx) {\n  var button;\n  var current;\n  var mounted;\n  var dispose;\n  var default_slot_template =\n  /*$$slots*/\n  ctx[4][\"default\"];\n  var default_slot = create_slot(default_slot_template, ctx,\n  /*$$scope*/\n  ctx[3], null);\n  return {\n    c: function c() {\n      button = element(\"button\");\n      if (default_slot) default_slot.c();\n      attr(button, \"class\", \"bn-onboard-custom bn-onboard-prepare-button svelte-r5g1v4\");\n      toggle_class(button, \"bn-onboard-prepare-button-right\",\n      /*position*/\n      ctx[1] === \"right\");\n      toggle_class(button, \"bn-onboard-prepare-button-left\",\n      /*position*/\n      ctx[1] === \"left\");\n      toggle_class(button, \"bn-onboard-prepare-button-center\",\n      /*position*/\n      ctx[1] !== \"left\" &&\n      /*position*/\n      ctx[1] !== \"right\");\n      toggle_class(button, \"bn-onboard-dark-mode-link\",\n      /*$app*/\n      ctx[2].darkMode);\n      toggle_class(button, \"bn-onboard-dark-mode-background-hover\",\n      /*$app*/\n      ctx[2].darkMode);\n    },\n    m: function m(target, anchor) {\n      insert(target, button, anchor);\n\n      if (default_slot) {\n        default_slot.m(button, null);\n      }\n\n      current = true;\n\n      if (!mounted) {\n        dispose = listen(button, \"click\", function () {\n          if (is_function(\n          /*onclick*/\n          ctx[0]))\n            /*onclick*/\n            ctx[0].apply(this, arguments);\n        });\n        mounted = true;\n      }\n    },\n    p: function p(new_ctx, _ref16) {\n      var _ref17 = _slicedToArray(_ref16, 1),\n          dirty = _ref17[0];\n\n      ctx = new_ctx;\n\n      if (default_slot) {\n        if (default_slot.p && dirty &\n        /*$$scope*/\n        8) {\n          update_slot(default_slot, default_slot_template, ctx,\n          /*$$scope*/\n          ctx[3], dirty, null, null);\n        }\n      }\n\n      if (dirty &\n      /*position*/\n      2) {\n        toggle_class(button, \"bn-onboard-prepare-button-right\",\n        /*position*/\n        ctx[1] === \"right\");\n      }\n\n      if (dirty &\n      /*position*/\n      2) {\n        toggle_class(button, \"bn-onboard-prepare-button-left\",\n        /*position*/\n        ctx[1] === \"left\");\n      }\n\n      if (dirty &\n      /*position*/\n      2) {\n        toggle_class(button, \"bn-onboard-prepare-button-center\",\n        /*position*/\n        ctx[1] !== \"left\" &&\n        /*position*/\n        ctx[1] !== \"right\");\n      }\n\n      if (dirty &\n      /*$app*/\n      4) {\n        toggle_class(button, \"bn-onboard-dark-mode-link\",\n        /*$app*/\n        ctx[2].darkMode);\n      }\n\n      if (dirty &\n      /*$app*/\n      4) {\n        toggle_class(button, \"bn-onboard-dark-mode-background-hover\",\n        /*$app*/\n        ctx[2].darkMode);\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(default_slot, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(default_slot, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(button);\n      if (default_slot) default_slot.d(detaching);\n      mounted = false;\n      dispose();\n    }\n  };\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n  var $app;\n  component_subscribe($$self, app, function ($$value) {\n    return $$invalidate(2, $app = $$value);\n  });\n  var _$$props$onclick = $$props.onclick,\n      onclick = _$$props$onclick === void 0 ? function () {} : _$$props$onclick;\n  var position = $$props.position;\n  var _$$props$$$slots2 = $$props.$$slots,\n      $$slots = _$$props$$$slots2 === void 0 ? {} : _$$props$$$slots2,\n      $$scope = $$props.$$scope;\n\n  $$self.$set = function ($$props) {\n    if (\"onclick\" in $$props) $$invalidate(0, onclick = $$props.onclick);\n    if (\"position\" in $$props) $$invalidate(1, position = $$props.position);\n    if (\"$$scope\" in $$props) $$invalidate(3, $$scope = $$props.$$scope);\n  };\n\n  return [onclick, position, $app, $$scope, $$slots];\n}\n\nvar Button = /*#__PURE__*/function (_SvelteComponent4) {\n  _inherits(Button, _SvelteComponent4);\n\n  var _super4 = _createSuper(Button);\n\n  function Button(options) {\n    var _this4;\n\n    _classCallCheck(this, Button);\n\n    _this4 = _super4.call(this);\n    if (!document.getElementById(\"svelte-r5g1v4-style\")) add_css$3();\n    init(_assertThisInitialized(_this4), options, instance$3, create_fragment$3, safe_not_equal, {\n      onclick: 0,\n      position: 1\n    });\n    return _this4;\n  }\n\n  return Button;\n}(SvelteComponent);\n/* src/elements/Spinner.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$4() {\n  var style = element(\"style\");\n  style.id = \"svelte-16ghk2h-style\";\n  style.textContent = \".bn-onboard-loading-container.svelte-16ghk2h{display:flex;flex-direction:column;align-items:center;justify-content:center;font-family:inherit;font-size:inherit;color:inherit}span.svelte-16ghk2h{font-family:inherit;font-size:0.889em;margin-top:1rem}.bn-onboard-loading{display:inline-block;position:relative;width:2em;height:2em}.bn-onboard-loading div{box-sizing:border-box;font-size:inherit;display:block;position:absolute;width:2em;height:2em;border:3px solid;border-radius:50%;animation:bn-onboard-loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;border-color:currentColor transparent transparent transparent}.bn-onboard-loading .bn-onboard-loading-first{animation-delay:-0.45s}.bn-onboard-loading .bn-onboard-loading-second{animation-delay:-0.3s}.bn-onboard-loading .bn-onboard-loading-third{animation-delay:-0.15s}@keyframes bn-onboard-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\";\n  append(document.head, style);\n} // (65:2) {#if description}\n\n\nfunction create_if_block$2(ctx) {\n  var span;\n  var t;\n  return {\n    c: function c() {\n      span = element(\"span\");\n      t = text(\n      /*description*/\n      ctx[0]);\n      attr(span, \"class\", \"svelte-16ghk2h\");\n    },\n    m: function m(target, anchor) {\n      insert(target, span, anchor);\n      append(span, t);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*description*/\n      1) set_data(t,\n      /*description*/\n      ctx[0]);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(span);\n    }\n  };\n}\n\nfunction create_fragment$4(ctx) {\n  var div4;\n  var div3;\n  var t2;\n  var if_block =\n  /*description*/\n  ctx[0] && create_if_block$2(ctx);\n  return {\n    c: function c() {\n      div4 = element(\"div\");\n      div3 = element(\"div\");\n      div3.innerHTML = \"<div class=\\\"bn-onboard-loading-first\\\"></div> \\n    <div class=\\\"bn-onboard-loading-second\\\"></div> \\n    <div class=\\\"bn-onboard-loading-third\\\"></div>\";\n      t2 = space();\n      if (if_block) if_block.c();\n      attr(div3, \"class\", \"bn-onboard-custom bn-onboard-loading\");\n      attr(div4, \"class\", \"bn-onboard-loading-container svelte-16ghk2h\");\n    },\n    m: function m(target, anchor) {\n      insert(target, div4, anchor);\n      append(div4, div3);\n      append(div4, t2);\n      if (if_block) if_block.m(div4, null);\n    },\n    p: function p(ctx, _ref18) {\n      var _ref19 = _slicedToArray(_ref18, 1),\n          dirty = _ref19[0];\n\n      if (\n      /*description*/\n      ctx[0]) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block = create_if_block$2(ctx);\n          if_block.c();\n          if_block.m(div4, null);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n    },\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(div4);\n      if (if_block) if_block.d();\n    }\n  };\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n  var description = $$props.description;\n\n  $$self.$set = function ($$props) {\n    if (\"description\" in $$props) $$invalidate(0, description = $$props.description);\n  };\n\n  return [description];\n}\n\nvar Spinner = /*#__PURE__*/function (_SvelteComponent5) {\n  _inherits(Spinner, _SvelteComponent5);\n\n  var _super5 = _createSuper(Spinner);\n\n  function Spinner(options) {\n    var _this5;\n\n    _classCallCheck(this, Spinner);\n\n    _this5 = _super5.call(this);\n    if (!document.getElementById(\"svelte-16ghk2h-style\")) add_css$4();\n    init(_assertThisInitialized(_this5), options, instance$4, create_fragment$4, safe_not_equal, {\n      description: 0\n    });\n    return _this5;\n  }\n\n  return Spinner;\n}(SvelteComponent);\n/* src/elements/IconButton.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$5() {\n  var style = element(\"style\");\n  style.id = \"svelte-1skxsnk-style\";\n  style.textContent = \"button.svelte-1skxsnk{display:flex;align-items:center;border:none;margin:0.33em 0;background:inherit;font-size:inherit;width:18em;padding:0.625em 1.25em;transition:box-shadow 150ms ease-in-out, background 200ms ease-in-out;border-radius:40px;cursor:pointer;color:inherit;line-height:1.15;font-family:inherit}button.svelte-1skxsnk:hover{box-shadow:0 2px 10px 0 rgba(0, 0, 0, 0.1)}button.svelte-1skxsnk:focus{outline:none}div.svelte-1skxsnk{display:flex;justify-content:center;align-items:center;text-align:center;height:40px;width:40px;line-height:40px;font-family:inherit}img.svelte-1skxsnk{max-height:100%;max-width:100%;vertical-align:middle}span.svelte-1skxsnk{width:100%;display:flex;justify-content:space-between;align-items:center;font-size:inherit;margin-left:0.66em;font-weight:bold;text-align:left;font-family:inherit}i.svelte-1skxsnk{font-size:0.8rem;font-weight:lighter;color:inherit;text-decoration:underline}@media only screen and (max-width: 450px){button.svelte-1skxsnk{width:100%}}.bn-onboard-selected-wallet.svelte-1skxsnk{background:#c3c3c3}\";\n  append(document.head, style);\n} // (96:4) {:else}\n\n\nfunction create_else_block$1(ctx) {\n  var img;\n  var img_src_value;\n  return {\n    c: function c() {\n      img = element(\"img\");\n      if (img.src !== (img_src_value =\n      /*iconSrc*/\n      ctx[0])) attr(img, \"src\", img_src_value);\n      attr(img, \"srcset\",\n      /*iconSrcSet*/\n      ctx[1]);\n      attr(img, \"alt\",\n      /*text*/\n      ctx[4]);\n      attr(img, \"class\", \"svelte-1skxsnk\");\n    },\n    m: function m(target, anchor) {\n      insert(target, img, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*iconSrc*/\n      1 && img.src !== (img_src_value =\n      /*iconSrc*/\n      ctx[0])) {\n        attr(img, \"src\", img_src_value);\n      }\n\n      if (dirty &\n      /*iconSrcSet*/\n      2) {\n        attr(img, \"srcset\",\n        /*iconSrcSet*/\n        ctx[1]);\n      }\n\n      if (dirty &\n      /*text*/\n      16) {\n        attr(img, \"alt\",\n        /*text*/\n        ctx[4]);\n      }\n    },\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(img);\n    }\n  };\n} // (94:18) \n\n\nfunction create_if_block_2(ctx) {\n  var html_tag;\n  var html_anchor;\n  return {\n    c: function c() {\n      html_anchor = empty();\n      html_tag = new HtmlTag(html_anchor);\n    },\n    m: function m(target, anchor) {\n      html_tag.m(\n      /*svg*/\n      ctx[2], target, anchor);\n      insert(target, html_anchor, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*svg*/\n      4) html_tag.p(\n      /*svg*/\n      ctx[2]);\n    },\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(html_anchor);\n      if (detaching) html_tag.d();\n    }\n  };\n} // (92:4) {#if loadingWallet === text}\n\n\nfunction create_if_block_1$1(ctx) {\n  var spinner;\n  var current;\n  spinner = new Spinner({});\n  return {\n    c: function c() {\n      create_component(spinner.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(spinner, target, anchor);\n      current = true;\n    },\n    p: noop,\n    i: function i(local) {\n      if (current) return;\n      transition_in(spinner.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(spinner.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(spinner, detaching);\n    }\n  };\n} // (102:4) {#if currentlySelected}\n\n\nfunction create_if_block$3(ctx) {\n  var i;\n  return {\n    c: function c() {\n      i = element(\"i\");\n      i.textContent = \"selected\";\n      attr(i, \"class\", \"svelte-1skxsnk\");\n    },\n    m: function m(target, anchor) {\n      insert(target, i, anchor);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(i);\n    }\n  };\n}\n\nfunction create_fragment$5(ctx) {\n  var button;\n  var div;\n  var current_block_type_index;\n  var if_block0;\n  var t0;\n  var span;\n  var t1;\n  var t2;\n  var current;\n  var mounted;\n  var dispose;\n  var if_block_creators = [create_if_block_1$1, create_if_block_2, create_else_block$1];\n  var if_blocks = [];\n\n  function select_block_type(ctx, dirty) {\n    if (\n    /*loadingWallet*/\n    ctx[5] ===\n    /*text*/\n    ctx[4]) return 0;\n    if (\n    /*svg*/\n    ctx[2]) return 1;\n    return 2;\n  }\n\n  current_block_type_index = select_block_type(ctx);\n  if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n  var if_block1 =\n  /*currentlySelected*/\n  ctx[6] && create_if_block$3();\n  return {\n    c: function c() {\n      button = element(\"button\");\n      div = element(\"div\");\n      if_block0.c();\n      t0 = space();\n      span = element(\"span\");\n      t1 = text(\n      /*text*/\n      ctx[4]);\n      t2 = space();\n      if (if_block1) if_block1.c();\n      attr(div, \"class\", \"svelte-1skxsnk\");\n      attr(span, \"class\", \"svelte-1skxsnk\");\n      attr(button, \"class\", \"bn-onboard-custom bn-onboard-icon-button svelte-1skxsnk\");\n      toggle_class(button, \"bn-onboard-dark-mode-background-hover\",\n      /*$app*/\n      ctx[7].darkMode);\n      toggle_class(button, \"bn-onboard-selected-wallet\",\n      /*currentlySelected*/\n      ctx[6]);\n    },\n    m: function m(target, anchor) {\n      insert(target, button, anchor);\n      append(button, div);\n      if_blocks[current_block_type_index].m(div, null);\n      append(button, t0);\n      append(button, span);\n      append(span, t1);\n      append(span, t2);\n      if (if_block1) if_block1.m(span, null);\n      current = true;\n\n      if (!mounted) {\n        dispose = listen(button, \"click\", function () {\n          if (is_function(\n          /*onclick*/\n          ctx[3]))\n            /*onclick*/\n            ctx[3].apply(this, arguments);\n        });\n        mounted = true;\n      }\n    },\n    p: function p(new_ctx, _ref20) {\n      var _ref21 = _slicedToArray(_ref20, 1),\n          dirty = _ref21[0];\n\n      ctx = new_ctx;\n      var previous_block_index = current_block_type_index;\n      current_block_type_index = select_block_type(ctx);\n\n      if (current_block_type_index === previous_block_index) {\n        if_blocks[current_block_type_index].p(ctx, dirty);\n      } else {\n        group_outros();\n        transition_out(if_blocks[previous_block_index], 1, 1, function () {\n          if_blocks[previous_block_index] = null;\n        });\n        check_outros();\n        if_block0 = if_blocks[current_block_type_index];\n\n        if (!if_block0) {\n          if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n          if_block0.c();\n        }\n\n        transition_in(if_block0, 1);\n        if_block0.m(div, null);\n      }\n\n      if (!current || dirty &\n      /*text*/\n      16) set_data(t1,\n      /*text*/\n      ctx[4]);\n\n      if (\n      /*currentlySelected*/\n      ctx[6]) {\n        if (if_block1) ;else {\n          if_block1 = create_if_block$3();\n          if_block1.c();\n          if_block1.m(span, null);\n        }\n      } else if (if_block1) {\n        if_block1.d(1);\n        if_block1 = null;\n      }\n\n      if (dirty &\n      /*$app*/\n      128) {\n        toggle_class(button, \"bn-onboard-dark-mode-background-hover\",\n        /*$app*/\n        ctx[7].darkMode);\n      }\n\n      if (dirty &\n      /*currentlySelected*/\n      64) {\n        toggle_class(button, \"bn-onboard-selected-wallet\",\n        /*currentlySelected*/\n        ctx[6]);\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(if_block0);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(if_block0);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(button);\n      if_blocks[current_block_type_index].d();\n      if (if_block1) if_block1.d();\n      mounted = false;\n      dispose();\n    }\n  };\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n  var $app;\n  component_subscribe($$self, app, function ($$value) {\n    return $$invalidate(7, $app = $$value);\n  });\n  var iconSrc = $$props.iconSrc;\n  var iconSrcSet = $$props.iconSrcSet;\n  var svg = $$props.svg;\n  var _$$props$onclick2 = $$props.onclick,\n      onclick = _$$props$onclick2 === void 0 ? function () {} : _$$props$onclick2;\n  var text = $$props.text;\n  var loadingWallet = $$props.loadingWallet;\n  var _$$props$currentlySel = $$props.currentlySelected,\n      currentlySelected = _$$props$currentlySel === void 0 ? false : _$$props$currentlySel;\n\n  $$self.$set = function ($$props) {\n    if (\"iconSrc\" in $$props) $$invalidate(0, iconSrc = $$props.iconSrc);\n    if (\"iconSrcSet\" in $$props) $$invalidate(1, iconSrcSet = $$props.iconSrcSet);\n    if (\"svg\" in $$props) $$invalidate(2, svg = $$props.svg);\n    if (\"onclick\" in $$props) $$invalidate(3, onclick = $$props.onclick);\n    if (\"text\" in $$props) $$invalidate(4, text = $$props.text);\n    if (\"loadingWallet\" in $$props) $$invalidate(5, loadingWallet = $$props.loadingWallet);\n    if (\"currentlySelected\" in $$props) $$invalidate(6, currentlySelected = $$props.currentlySelected);\n  };\n\n  return [iconSrc, iconSrcSet, svg, onclick, text, loadingWallet, currentlySelected, $app];\n}\n\nvar IconButton = /*#__PURE__*/function (_SvelteComponent6) {\n  _inherits(IconButton, _SvelteComponent6);\n\n  var _super6 = _createSuper(IconButton);\n\n  function IconButton(options) {\n    var _this6;\n\n    _classCallCheck(this, IconButton);\n\n    _this6 = _super6.call(this);\n    if (!document.getElementById(\"svelte-1skxsnk-style\")) add_css$5();\n    init(_assertThisInitialized(_this6), options, instance$5, create_fragment$5, safe_not_equal, {\n      iconSrc: 0,\n      iconSrcSet: 1,\n      svg: 2,\n      onclick: 3,\n      text: 4,\n      loadingWallet: 5,\n      currentlySelected: 6\n    });\n    return _this6;\n  }\n\n  return IconButton;\n}(SvelteComponent);\n/* src/components/Wallets.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$6() {\n  var style = element(\"style\");\n  style.id = \"svelte-q1527-style\";\n  style.textContent = \"ul.svelte-q1527.svelte-q1527{display:flex;flex-flow:row wrap;align-items:center;list-style-type:none;margin:1.25em 0;padding:0;font-family:inherit;font-size:inherit;line-height:1.15;box-sizing:border-box}ul.svelte-q1527 li.svelte-q1527{padding:0 0.25em}div.svelte-q1527.svelte-q1527{width:100%;display:flex;font-size:inherit;font-family:inherit;justify-content:center;margin-top:1.25em}.svelte-q1527.svelte-q1527::-webkit-scrollbar{display:none}@media only screen and (max-width: 450px){ul.svelte-q1527 li.svelte-q1527{width:100%}ul.svelte-q1527.svelte-q1527{max-height:66vh;overflow-y:scroll}}\";\n  append(document.head, style);\n}\n\nfunction get_each_context(ctx, list, i) {\n  var child_ctx = ctx.slice();\n  child_ctx[9] = list[i];\n  child_ctx[11] = i;\n  return child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n  var child_ctx = ctx.slice();\n  child_ctx[9] = list[i];\n  child_ctx[11] = i;\n  return child_ctx;\n} // (61:2) {#each modalData.primaryWallets as wallet, i (wallet.name)}\n\n\nfunction create_each_block_1(key_1, ctx) {\n  var li;\n  var iconbutton;\n  var current;\n\n  function func() {\n    var _ctx;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return (\n      /*func*/\n      (_ctx = ctx)[6].apply(_ctx, [\n      /*wallet*/\n      ctx[9]].concat(args))\n    );\n  }\n\n  iconbutton = new IconButton({\n    props: {\n      onclick: func,\n      iconSrc:\n      /*wallet*/\n      ctx[9].iconSrc,\n      iconSrcSet:\n      /*wallet*/\n      ctx[9].iconSrcSet,\n      svg:\n      /*wallet*/\n      ctx[9].svg,\n      text:\n      /*wallet*/\n      ctx[9].name,\n      currentlySelected:\n      /*wallet*/\n      ctx[9].name ===\n      /*selectedWallet*/\n      ctx[5].name,\n      loadingWallet:\n      /*loadingWallet*/\n      ctx[2]\n    }\n  });\n  return {\n    key: key_1,\n    first: null,\n    c: function c() {\n      li = element(\"li\");\n      create_component(iconbutton.$$.fragment);\n      attr(li, \"class\", \"svelte-q1527\");\n      this.first = li;\n    },\n    m: function m(target, anchor) {\n      insert(target, li, anchor);\n      mount_component(iconbutton, li, null);\n      current = true;\n    },\n    p: function p(new_ctx, dirty) {\n      ctx = new_ctx;\n      var iconbutton_changes = {};\n      if (dirty &\n      /*handleWalletSelect, modalData*/\n      3) iconbutton_changes.onclick = func;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.iconSrc =\n      /*wallet*/\n      ctx[9].iconSrc;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.iconSrcSet =\n      /*wallet*/\n      ctx[9].iconSrcSet;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.svg =\n      /*wallet*/\n      ctx[9].svg;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.text =\n      /*wallet*/\n      ctx[9].name;\n      if (dirty &\n      /*modalData, selectedWallet*/\n      33) iconbutton_changes.currentlySelected =\n      /*wallet*/\n      ctx[9].name ===\n      /*selectedWallet*/\n      ctx[5].name;\n      if (dirty &\n      /*loadingWallet*/\n      4) iconbutton_changes.loadingWallet =\n      /*loadingWallet*/\n      ctx[2];\n      iconbutton.$set(iconbutton_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(iconbutton.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(iconbutton.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(li);\n      destroy_component(iconbutton);\n    }\n  };\n} // (74:2) {#if modalData.secondaryWallets && modalData.secondaryWallets.length && !showingAllWalletModules}\n\n\nfunction create_if_block_1$2(ctx) {\n  var div;\n  var button;\n  var current;\n  button = new Button({\n    props: {\n      onclick:\n      /*showAllWallets*/\n      ctx[4],\n      $$slots: {\n        \"default\": [create_default_slot]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      div = element(\"div\");\n      create_component(button.$$.fragment);\n      attr(div, \"class\", \"svelte-q1527\");\n    },\n    m: function m(target, anchor) {\n      insert(target, div, anchor);\n      mount_component(button, div, null);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var button_changes = {};\n      if (dirty &\n      /*showAllWallets*/\n      16) button_changes.onclick =\n      /*showAllWallets*/\n      ctx[4];\n\n      if (dirty &\n      /*$$scope*/\n      8192) {\n        button_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button.$set(button_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(button.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(button.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(div);\n      destroy_component(button);\n    }\n  };\n} // (76:6) <Button onclick={showAllWallets}>\n\n\nfunction create_default_slot(ctx) {\n  var t;\n  return {\n    c: function c() {\n      t = text(\"Show More\");\n    },\n    m: function m(target, anchor) {\n      insert(target, t, anchor);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t);\n    }\n  };\n} // (80:2) {#if showingAllWalletModules}\n\n\nfunction create_if_block$4(ctx) {\n  var each_blocks = [];\n  var each_1_lookup = new Map();\n  var each_1_anchor;\n  var current;\n  var each_value =\n  /*modalData*/\n  ctx[0].secondaryWallets;\n\n  var get_key = function get_key(ctx) {\n    return (\n      /*wallet*/\n      ctx[9].name\n    );\n  };\n\n  for (var i = 0; i < each_value.length; i += 1) {\n    var child_ctx = get_each_context(ctx, each_value, i);\n    var key = get_key(child_ctx);\n    each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n  }\n\n  return {\n    c: function c() {\n      for (var _i3 = 0; _i3 < each_blocks.length; _i3 += 1) {\n        each_blocks[_i3].c();\n      }\n\n      each_1_anchor = empty();\n    },\n    m: function m(target, anchor) {\n      for (var _i4 = 0; _i4 < each_blocks.length; _i4 += 1) {\n        each_blocks[_i4].m(target, anchor);\n      }\n\n      insert(target, each_1_anchor, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*handleWalletSelect, modalData, selectedWallet, loadingWallet*/\n      39) {\n        var _each_value =\n        /*modalData*/\n        ctx[0].secondaryWallets;\n        group_outros();\n        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, _each_value, each_1_lookup, each_1_anchor.parentNode, outro_and_destroy_block, create_each_block, each_1_anchor, get_each_context);\n        check_outros();\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n\n      for (var _i5 = 0; _i5 < each_value.length; _i5 += 1) {\n        transition_in(each_blocks[_i5]);\n      }\n\n      current = true;\n    },\n    o: function o(local) {\n      for (var _i6 = 0; _i6 < each_blocks.length; _i6 += 1) {\n        transition_out(each_blocks[_i6]);\n      }\n\n      current = false;\n    },\n    d: function d(detaching) {\n      for (var _i7 = 0; _i7 < each_blocks.length; _i7 += 1) {\n        each_blocks[_i7].d(detaching);\n      }\n\n      if (detaching) detach(each_1_anchor);\n    }\n  };\n} // (81:4) {#each modalData.secondaryWallets as wallet, i (wallet.name)}\n\n\nfunction create_each_block(key_1, ctx) {\n  var li;\n  var iconbutton;\n  var t;\n  var current;\n\n  function func_1() {\n    var _ctx2;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return (\n      /*func_1*/\n      (_ctx2 = ctx)[7].apply(_ctx2, [\n      /*wallet*/\n      ctx[9]].concat(args))\n    );\n  }\n\n  iconbutton = new IconButton({\n    props: {\n      onclick: func_1,\n      iconSrc:\n      /*wallet*/\n      ctx[9].iconSrc,\n      iconSrcSet:\n      /*wallet*/\n      ctx[9].iconSrcSet,\n      svg:\n      /*wallet*/\n      ctx[9].svg,\n      text:\n      /*wallet*/\n      ctx[9].name,\n      currentlySelected:\n      /*wallet*/\n      ctx[9].name ===\n      /*selectedWallet*/\n      ctx[5].name,\n      loadingWallet:\n      /*loadingWallet*/\n      ctx[2]\n    }\n  });\n  return {\n    key: key_1,\n    first: null,\n    c: function c() {\n      li = element(\"li\");\n      create_component(iconbutton.$$.fragment);\n      t = space();\n      attr(li, \"class\", \"svelte-q1527\");\n      this.first = li;\n    },\n    m: function m(target, anchor) {\n      insert(target, li, anchor);\n      mount_component(iconbutton, li, null);\n      append(li, t);\n      current = true;\n    },\n    p: function p(new_ctx, dirty) {\n      ctx = new_ctx;\n      var iconbutton_changes = {};\n      if (dirty &\n      /*handleWalletSelect, modalData*/\n      3) iconbutton_changes.onclick = func_1;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.iconSrc =\n      /*wallet*/\n      ctx[9].iconSrc;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.iconSrcSet =\n      /*wallet*/\n      ctx[9].iconSrcSet;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.svg =\n      /*wallet*/\n      ctx[9].svg;\n      if (dirty &\n      /*modalData*/\n      1) iconbutton_changes.text =\n      /*wallet*/\n      ctx[9].name;\n      if (dirty &\n      /*modalData, selectedWallet*/\n      33) iconbutton_changes.currentlySelected =\n      /*wallet*/\n      ctx[9].name ===\n      /*selectedWallet*/\n      ctx[5].name;\n      if (dirty &\n      /*loadingWallet*/\n      4) iconbutton_changes.loadingWallet =\n      /*loadingWallet*/\n      ctx[2];\n      iconbutton.$set(iconbutton_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(iconbutton.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(iconbutton.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(li);\n      destroy_component(iconbutton);\n    }\n  };\n}\n\nfunction create_fragment$6(ctx) {\n  var ul;\n  var each_blocks = [];\n  var each_1_lookup = new Map();\n  var t0;\n  var t1;\n  var current;\n  var each_value_1 =\n  /*modalData*/\n  ctx[0].primaryWallets;\n\n  var get_key = function get_key(ctx) {\n    return (\n      /*wallet*/\n      ctx[9].name\n    );\n  };\n\n  for (var i = 0; i < each_value_1.length; i += 1) {\n    var child_ctx = get_each_context_1(ctx, each_value_1, i);\n    var key = get_key(child_ctx);\n    each_1_lookup.set(key, each_blocks[i] = create_each_block_1(key, child_ctx));\n  }\n\n  var if_block0 =\n  /*modalData*/\n  ctx[0].secondaryWallets &&\n  /*modalData*/\n  ctx[0].secondaryWallets.length && !\n  /*showingAllWalletModules*/\n  ctx[3] && create_if_block_1$2(ctx);\n  var if_block1 =\n  /*showingAllWalletModules*/\n  ctx[3] && create_if_block$4(ctx);\n  return {\n    c: function c() {\n      ul = element(\"ul\");\n\n      for (var _i8 = 0; _i8 < each_blocks.length; _i8 += 1) {\n        each_blocks[_i8].c();\n      }\n\n      t0 = space();\n      if (if_block0) if_block0.c();\n      t1 = space();\n      if (if_block1) if_block1.c();\n      attr(ul, \"class\", \"bn-onboard-custom bn-onboard-modal-select-wallets svelte-q1527\");\n    },\n    m: function m(target, anchor) {\n      insert(target, ul, anchor);\n\n      for (var _i9 = 0; _i9 < each_blocks.length; _i9 += 1) {\n        each_blocks[_i9].m(ul, null);\n      }\n\n      append(ul, t0);\n      if (if_block0) if_block0.m(ul, null);\n      append(ul, t1);\n      if (if_block1) if_block1.m(ul, null);\n      current = true;\n    },\n    p: function p(ctx, _ref22) {\n      var _ref23 = _slicedToArray(_ref22, 1),\n          dirty = _ref23[0];\n\n      if (dirty &\n      /*handleWalletSelect, modalData, selectedWallet, loadingWallet*/\n      39) {\n        var _each_value_ =\n        /*modalData*/\n        ctx[0].primaryWallets;\n        group_outros();\n        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, _each_value_, each_1_lookup, ul, outro_and_destroy_block, create_each_block_1, t0, get_each_context_1);\n        check_outros();\n      }\n\n      if (\n      /*modalData*/\n      ctx[0].secondaryWallets &&\n      /*modalData*/\n      ctx[0].secondaryWallets.length && !\n      /*showingAllWalletModules*/\n      ctx[3]) {\n        if (if_block0) {\n          if_block0.p(ctx, dirty);\n\n          if (dirty &\n          /*modalData, showingAllWalletModules*/\n          9) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_1$2(ctx);\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(ul, t1);\n        }\n      } else if (if_block0) {\n        group_outros();\n        transition_out(if_block0, 1, 1, function () {\n          if_block0 = null;\n        });\n        check_outros();\n      }\n\n      if (\n      /*showingAllWalletModules*/\n      ctx[3]) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n\n          if (dirty &\n          /*showingAllWalletModules*/\n          8) {\n            transition_in(if_block1, 1);\n          }\n        } else {\n          if_block1 = create_if_block$4(ctx);\n          if_block1.c();\n          transition_in(if_block1, 1);\n          if_block1.m(ul, null);\n        }\n      } else if (if_block1) {\n        group_outros();\n        transition_out(if_block1, 1, 1, function () {\n          if_block1 = null;\n        });\n        check_outros();\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n\n      for (var _i10 = 0; _i10 < each_value_1.length; _i10 += 1) {\n        transition_in(each_blocks[_i10]);\n      }\n\n      transition_in(if_block0);\n      transition_in(if_block1);\n      current = true;\n    },\n    o: function o(local) {\n      for (var _i11 = 0; _i11 < each_blocks.length; _i11 += 1) {\n        transition_out(each_blocks[_i11]);\n      }\n\n      transition_out(if_block0);\n      transition_out(if_block1);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(ul);\n\n      for (var _i12 = 0; _i12 < each_blocks.length; _i12 += 1) {\n        each_blocks[_i12].d();\n      }\n\n      if (if_block0) if_block0.d();\n      if (if_block1) if_block1.d();\n    }\n  };\n}\n\nfunction instance$6($$self, $$props, $$invalidate) {\n  var modalData = $$props.modalData;\n  var handleWalletSelect = $$props.handleWalletSelect;\n  var loadingWallet = $$props.loadingWallet;\n  var _$$props$showingAllWa = $$props.showingAllWalletModules,\n      showingAllWalletModules = _$$props$showingAllWa === void 0 ? false : _$$props$showingAllWa;\n  var showAllWallets = $$props.showAllWallets;\n  var selectedWallet;\n  var unsubscribe = wallet.subscribe(function (wallet) {\n    return $$invalidate(5, selectedWallet = wallet);\n  });\n  onDestroy(function () {\n    return unsubscribe();\n  });\n\n  var func = function func(wallet) {\n    return handleWalletSelect(wallet);\n  };\n\n  var func_1 = function func_1(wallet) {\n    return handleWalletSelect(wallet);\n  };\n\n  $$self.$set = function ($$props) {\n    if (\"modalData\" in $$props) $$invalidate(0, modalData = $$props.modalData);\n    if (\"handleWalletSelect\" in $$props) $$invalidate(1, handleWalletSelect = $$props.handleWalletSelect);\n    if (\"loadingWallet\" in $$props) $$invalidate(2, loadingWallet = $$props.loadingWallet);\n    if (\"showingAllWalletModules\" in $$props) $$invalidate(3, showingAllWalletModules = $$props.showingAllWalletModules);\n    if (\"showAllWallets\" in $$props) $$invalidate(4, showAllWallets = $$props.showAllWallets);\n  };\n\n  return [modalData, handleWalletSelect, loadingWallet, showingAllWalletModules, showAllWallets, selectedWallet, func, func_1];\n}\n\nvar Wallets = /*#__PURE__*/function (_SvelteComponent7) {\n  _inherits(Wallets, _SvelteComponent7);\n\n  var _super7 = _createSuper(Wallets);\n\n  function Wallets(options) {\n    var _this7;\n\n    _classCallCheck(this, Wallets);\n\n    _this7 = _super7.call(this);\n    if (!document.getElementById(\"svelte-q1527-style\")) add_css$6();\n    init(_assertThisInitialized(_this7), options, instance$6, create_fragment$6, safe_not_equal, {\n      modalData: 0,\n      handleWalletSelect: 1,\n      loadingWallet: 2,\n      showingAllWalletModules: 3,\n      showAllWallets: 4\n    });\n    return _this7;\n  }\n\n  return Wallets;\n}(SvelteComponent);\n/* src/elements/IconDisplay.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$7() {\n  var style = element(\"style\");\n  style.id = \"svelte-18zts4b-style\";\n  style.textContent = \"div.svelte-18zts4b{display:flex;align-items:center;border:none;margin:0;font-size:inherit;font-family:inherit;background:inherit;padding:0;width:18em;border-radius:40px;color:inherit}img.svelte-18zts4b{width:auto;height:3em}span.svelte-18zts4b{margin-left:0.66em;font-weight:bold;font-size:inherit;font-family:inherit;opacity:0.7;text-align:left}\";\n  append(document.head, style);\n} // (41:2) {:else}\n\n\nfunction create_else_block$2(ctx) {\n  var img;\n  var img_src_value;\n  return {\n    c: function c() {\n      img = element(\"img\");\n      if (img.src !== (img_src_value =\n      /*iconSrc*/\n      ctx[0])) attr(img, \"src\", img_src_value);\n      attr(img, \"srcset\",\n      /*iconSrcSet*/\n      ctx[1]);\n      attr(img, \"alt\",\n      /*text*/\n      ctx[2]);\n      attr(img, \"class\", \"svelte-18zts4b\");\n    },\n    m: function m(target, anchor) {\n      insert(target, img, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*iconSrc*/\n      1 && img.src !== (img_src_value =\n      /*iconSrc*/\n      ctx[0])) {\n        attr(img, \"src\", img_src_value);\n      }\n\n      if (dirty &\n      /*iconSrcSet*/\n      2) {\n        attr(img, \"srcset\",\n        /*iconSrcSet*/\n        ctx[1]);\n      }\n\n      if (dirty &\n      /*text*/\n      4) {\n        attr(img, \"alt\",\n        /*text*/\n        ctx[2]);\n      }\n    },\n    d: function d(detaching) {\n      if (detaching) detach(img);\n    }\n  };\n} // (39:2) {#if svg}\n\n\nfunction create_if_block$5(ctx) {\n  var html_tag;\n  var html_anchor;\n  return {\n    c: function c() {\n      html_anchor = empty();\n      html_tag = new HtmlTag(html_anchor);\n    },\n    m: function m(target, anchor) {\n      html_tag.m(\n      /*svg*/\n      ctx[3], target, anchor);\n      insert(target, html_anchor, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*svg*/\n      8) html_tag.p(\n      /*svg*/\n      ctx[3]);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(html_anchor);\n      if (detaching) html_tag.d();\n    }\n  };\n}\n\nfunction create_fragment$7(ctx) {\n  var div;\n  var t0;\n  var span;\n  var t1;\n\n  function select_block_type(ctx, dirty) {\n    if (\n    /*svg*/\n    ctx[3]) return create_if_block$5;\n    return create_else_block$2;\n  }\n\n  var current_block_type = select_block_type(ctx);\n  var if_block = current_block_type(ctx);\n  return {\n    c: function c() {\n      div = element(\"div\");\n      if_block.c();\n      t0 = space();\n      span = element(\"span\");\n      t1 = text(\n      /*text*/\n      ctx[2]);\n      attr(span, \"class\", \"svelte-18zts4b\");\n      attr(div, \"class\", \"bn-onboard-custom bn-onboard-icon-display svelte-18zts4b\");\n    },\n    m: function m(target, anchor) {\n      insert(target, div, anchor);\n      if_block.m(div, null);\n      append(div, t0);\n      append(div, span);\n      append(span, t1);\n    },\n    p: function p(ctx, _ref24) {\n      var _ref25 = _slicedToArray(_ref24, 1),\n          dirty = _ref25[0];\n\n      if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\n        if_block.p(ctx, dirty);\n      } else {\n        if_block.d(1);\n        if_block = current_block_type(ctx);\n\n        if (if_block) {\n          if_block.c();\n          if_block.m(div, t0);\n        }\n      }\n\n      if (dirty &\n      /*text*/\n      4) set_data(t1,\n      /*text*/\n      ctx[2]);\n    },\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(div);\n      if_block.d();\n    }\n  };\n}\n\nfunction instance$7($$self, $$props, $$invalidate) {\n  var iconSrc = $$props.iconSrc;\n  var iconSrcSet = $$props.iconSrcSet;\n  var text = $$props.text;\n  var svg = $$props.svg;\n\n  $$self.$set = function ($$props) {\n    if (\"iconSrc\" in $$props) $$invalidate(0, iconSrc = $$props.iconSrc);\n    if (\"iconSrcSet\" in $$props) $$invalidate(1, iconSrcSet = $$props.iconSrcSet);\n    if (\"text\" in $$props) $$invalidate(2, text = $$props.text);\n    if (\"svg\" in $$props) $$invalidate(3, svg = $$props.svg);\n  };\n\n  return [iconSrc, iconSrcSet, text, svg];\n}\n\nvar IconDisplay = /*#__PURE__*/function (_SvelteComponent8) {\n  _inherits(IconDisplay, _SvelteComponent8);\n\n  var _super8 = _createSuper(IconDisplay);\n\n  function IconDisplay(options) {\n    var _this8;\n\n    _classCallCheck(this, IconDisplay);\n\n    _this8 = _super8.call(this);\n    if (!document.getElementById(\"svelte-18zts4b-style\")) add_css$7();\n    init(_assertThisInitialized(_this8), options, instance$7, create_fragment$7, safe_not_equal, {\n      iconSrc: 0,\n      iconSrcSet: 1,\n      text: 2,\n      svg: 3\n    });\n    return _this8;\n  }\n\n  return IconDisplay;\n}(SvelteComponent);\n/* src/components/SelectedWallet.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$8() {\n  var style = element(\"style\");\n  style.id = \"svelte-mi6ahc-style\";\n  style.textContent = \"section.svelte-mi6ahc{color:inherit;font-size:inherit;font-family:inherit;display:block}footer.svelte-mi6ahc{display:flex;font-size:inherit;font-family:inherit;justify-content:space-between}\";\n  append(document.head, style);\n} // (33:2) {#if installMessage}\n\n\nfunction create_if_block$6(ctx) {\n  var html_tag;\n  var html_anchor;\n  return {\n    c: function c() {\n      html_anchor = empty();\n      html_tag = new HtmlTag(html_anchor);\n    },\n    m: function m(target, anchor) {\n      html_tag.m(\n      /*installMessage*/\n      ctx[2], target, anchor);\n      insert(target, html_anchor, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*installMessage*/\n      4) html_tag.p(\n      /*installMessage*/\n      ctx[2]);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(html_anchor);\n      if (detaching) html_tag.d();\n    }\n  };\n} // (42:6) <Button>\n\n\nfunction create_default_slot_1(ctx) {\n  var t0;\n  var t1_value =\n  /*selectedWalletModule*/\n  ctx[0].name + \"\";\n  var t1;\n  return {\n    c: function c() {\n      t0 = text(\"Open or install \");\n      t1 = text(t1_value);\n    },\n    m: function m(target, anchor) {\n      insert(target, t0, anchor);\n      insert(target, t1, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*selectedWalletModule*/\n      1 && t1_value !== (t1_value =\n      /*selectedWalletModule*/\n      ctx[0].name + \"\")) set_data(t1, t1_value);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t0);\n      if (detaching) detach(t1);\n    }\n  };\n} // (44:4) <Button onclick={onBack}>\n\n\nfunction create_default_slot$1(ctx) {\n  var t;\n  return {\n    c: function c() {\n      t = text(\"Back\");\n    },\n    m: function m(target, anchor) {\n      insert(target, t, anchor);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t);\n    }\n  };\n}\n\nfunction create_fragment$8(ctx) {\n  var section;\n  var icondisplay;\n  var t0;\n  var t1;\n  var footer;\n  var a;\n  var button0;\n  var a_href_value;\n  var t2;\n  var button1;\n  var section_intro;\n  var current;\n  icondisplay = new IconDisplay({\n    props: {\n      iconSrc:\n      /*selectedWalletModule*/\n      ctx[0].iconSrc,\n      iconSrcSet:\n      /*selectedWalletModule*/\n      ctx[0].iconSrcSet,\n      svg:\n      /*selectedWalletModule*/\n      ctx[0].svg,\n      text:\n      /*selectedWalletModule*/\n      ctx[0].name\n    }\n  });\n  var if_block =\n  /*installMessage*/\n  ctx[2] && create_if_block$6(ctx);\n  button0 = new Button({\n    props: {\n      $$slots: {\n        \"default\": [create_default_slot_1]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  button1 = new Button({\n    props: {\n      onclick:\n      /*onBack*/\n      ctx[1],\n      $$slots: {\n        \"default\": [create_default_slot$1]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      section = element(\"section\");\n      create_component(icondisplay.$$.fragment);\n      t0 = space();\n      if (if_block) if_block.c();\n      t1 = space();\n      footer = element(\"footer\");\n      a = element(\"a\");\n      create_component(button0.$$.fragment);\n      t2 = space();\n      create_component(button1.$$.fragment);\n      attr(a, \"href\", a_href_value =\n      /*selectedWalletModule*/\n      ctx[0].link);\n      attr(a, \"rel\", \"noreferrer noopener\");\n      attr(a, \"target\", \"_blank\");\n      attr(footer, \"class\", \"bn-onboard-custom bn-onboard-modal-selected-wallet-footer svelte-mi6ahc\");\n      attr(section, \"class\", \"bn-onboard-custom bn-onboard-modal-selected-wallet svelte-mi6ahc\");\n    },\n    m: function m(target, anchor) {\n      insert(target, section, anchor);\n      mount_component(icondisplay, section, null);\n      append(section, t0);\n      if (if_block) if_block.m(section, null);\n      append(section, t1);\n      append(section, footer);\n      append(footer, a);\n      mount_component(button0, a, null);\n      append(footer, t2);\n      mount_component(button1, footer, null);\n      current = true;\n    },\n    p: function p(ctx, _ref26) {\n      var _ref27 = _slicedToArray(_ref26, 1),\n          dirty = _ref27[0];\n\n      var icondisplay_changes = {};\n      if (dirty &\n      /*selectedWalletModule*/\n      1) icondisplay_changes.iconSrc =\n      /*selectedWalletModule*/\n      ctx[0].iconSrc;\n      if (dirty &\n      /*selectedWalletModule*/\n      1) icondisplay_changes.iconSrcSet =\n      /*selectedWalletModule*/\n      ctx[0].iconSrcSet;\n      if (dirty &\n      /*selectedWalletModule*/\n      1) icondisplay_changes.svg =\n      /*selectedWalletModule*/\n      ctx[0].svg;\n      if (dirty &\n      /*selectedWalletModule*/\n      1) icondisplay_changes.text =\n      /*selectedWalletModule*/\n      ctx[0].name;\n      icondisplay.$set(icondisplay_changes);\n\n      if (\n      /*installMessage*/\n      ctx[2]) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block = create_if_block$6(ctx);\n          if_block.c();\n          if_block.m(section, t1);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n\n      var button0_changes = {};\n\n      if (dirty &\n      /*$$scope, selectedWalletModule*/\n      9) {\n        button0_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button0.$set(button0_changes);\n\n      if (!current || dirty &\n      /*selectedWalletModule*/\n      1 && a_href_value !== (a_href_value =\n      /*selectedWalletModule*/\n      ctx[0].link)) {\n        attr(a, \"href\", a_href_value);\n      }\n\n      var button1_changes = {};\n      if (dirty &\n      /*onBack*/\n      2) button1_changes.onclick =\n      /*onBack*/\n      ctx[1];\n\n      if (dirty &\n      /*$$scope*/\n      8) {\n        button1_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button1.$set(button1_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(icondisplay.$$.fragment, local);\n      transition_in(button0.$$.fragment, local);\n      transition_in(button1.$$.fragment, local);\n\n      if (!section_intro) {\n        add_render_callback(function () {\n          section_intro = create_in_transition(section, fade, {});\n          section_intro.start();\n        });\n      }\n\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(icondisplay.$$.fragment, local);\n      transition_out(button0.$$.fragment, local);\n      transition_out(button1.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(section);\n      destroy_component(icondisplay);\n      if (if_block) if_block.d();\n      destroy_component(button0);\n      destroy_component(button1);\n    }\n  };\n}\n\nfunction instance$8($$self, $$props, $$invalidate) {\n  var selectedWalletModule = $$props.selectedWalletModule;\n  var onBack = $$props.onBack;\n  var installMessage = $$props.installMessage;\n\n  $$self.$set = function ($$props) {\n    if (\"selectedWalletModule\" in $$props) $$invalidate(0, selectedWalletModule = $$props.selectedWalletModule);\n    if (\"onBack\" in $$props) $$invalidate(1, onBack = $$props.onBack);\n    if (\"installMessage\" in $$props) $$invalidate(2, installMessage = $$props.installMessage);\n  };\n\n  return [selectedWalletModule, onBack, installMessage];\n}\n\nvar SelectedWallet = /*#__PURE__*/function (_SvelteComponent9) {\n  _inherits(SelectedWallet, _SvelteComponent9);\n\n  var _super9 = _createSuper(SelectedWallet);\n\n  function SelectedWallet(options) {\n    var _this9;\n\n    _classCallCheck(this, SelectedWallet);\n\n    _this9 = _super9.call(this);\n    if (!document.getElementById(\"svelte-mi6ahc-style\")) add_css$8();\n    init(_assertThisInitialized(_this9), options, instance$8, create_fragment$8, safe_not_equal, {\n      selectedWalletModule: 0,\n      onBack: 1,\n      installMessage: 2\n    });\n    return _this9;\n  }\n\n  return SelectedWallet;\n}(SvelteComponent);\n\nvar walletIcon = \"\\n<svg\\nheight=\\\"18\\\"\\nviewBox=\\\"0 0 19 18\\\"\\nwidth=\\\"19\\\"\\nxmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g fill=\\\"currentColor\\\" fill-rule=\\\"evenodd\\\">\\n\\t<path\\n\\t\\td=\\\"m15.7721618.00006623h-13.27469839c-.86762065\\n\\t\\t0-1.48592681.3078086-1.89741046.76113193-.40615823.44745064-.60839063\\n\\t\\t1.04661988-.59978974\\n\\t\\t1.64464107.00029187.005124.00040335.01025653.00033423.01538822v3.66899811c.06682404-.11685776.14162507-.22938827.22533894-.33628895.36778845-.46959466.90812952-.82116145\\n\\t\\t1.61866132-.95623339v-.59093422c0-.55214353.17649657-1.05790163.47278173-1.43388645.29630745-.37596275.72292065-.62513272\\n\\t\\t1.19969088-.62513272h11.23546239c.4765474 0 .9032497.24850764\\n\\t\\t1.199624.62424961.2963743.37574196.4728709.88161045.4728709\\n\\t\\t1.43476956v.4652895c.5235626-.11047728.9266682-.35445897\\n\\t\\t1.2246022-.6733727.4116397-.44060653.6210469-1.03392515.6210469-1.63015804s-.2094072-1.18955151-.6210469-1.63018011c-.4116396-.44060653-1.0238627-.73834765-1.877468-.73834765z\\\" />\\n\\t<path\\n\\t\\td=\\\"m14.6096047 2.57151734h-11.21914267c-.32073002\\n\\t\\t0-.6185428.16561433-.84722564.45769739s-.37782286.70763901-.37782286\\n\\t\\t1.16808814v.53953924c.06265527-.0036172.12640078-.00570319.19125878-.00616921.00518482-.00032924.01037961-.00047727.01557482-.00044383h.01326084\\n\\t\\t13.24215593c.0706652 0\\n\\t\\t.1395281-.00228571.2069226-.00630235v-.52671262c0-.46164746-.1491623-.87711464-.3777561-1.16884264-.2286161-.29175019-.5263622-.45694289-.8473147-.45694289z\\\" />\\n\\t<path\\n\\t\\td=\\\"m18.2706767\\n\\t\\t3.92481203c-.0857195.13278047-.1837832.25906993-.2945478.376829-.495466.52680184-1.2439236.87400468-2.2045296.87400468h-13.26144765c-.93286471\\n\\t\\t0-1.53628777.33766369-1.93268731.8403655s-.57746434\\n\\t\\t1.18877443-.57746434\\n\\t\\t1.87212785v.41252951c.13725808.14817467.29229732.20450824.50016754.23211693.21170276.02811305.46814809.01403459.74212947.02170977h5.25979191c.94146564\\n\\t\\t0 1.67588548.36084271 2.15878435.90341155.48289887.54259078.7188669\\n\\t\\t1.25649138.7188669 1.96738768s-.23596803 1.4247969-.7188669\\n\\t\\t1.9673877c-.48289887.5425689-1.21731871.9033896-2.15878435.9033896h-5.25979191c-.25038458\\n\\t\\t0-.55749953-.0171046-.84908381-.0866198-.13520812-.0322576-.27003744-.0756114-.3932132-.1380653v1.5302318c0\\n\\t\\t1.3201295 1.09561358 2.3983815 2.43697706\\n\\t\\t2.3983815h13.39672254c1.3413635 0 2.4369771-1.078252\\n\\t\\t2.4369771-2.3983815z\\\" />\\n\\t<path\\n\\t\\td=\\\"m0\\n\\t\\t8.79699248c.14260628.06959022.29864665.11050376.44557501.1299645.2753208.03649163.54484912.01335327.79368049.02057717.002302.00003506.00460441.00003506.00690641\\n\\t\\t0h5.25640383c.82827939 0 1.4220972.30156492\\n\\t\\t1.8240727.75248941.40199777.45094634.60569239 1.06221954.60569239\\n\\t\\t1.67601014 0 .6137467-.20369462 1.2250637-.60569239\\n\\t\\t1.6759882-.4019755.4509463-.99579331.7524894-1.8240727.7524894h-5.25640383c-.22831264\\n\\t\\t0-.50846792-.0188259-.74493458-.075238-.23646666-.0563245-.41416197-.1517676-.48734767-.2599728-.00440013-.0047203-.00900883-.0092487-.01387966-.0135722v-4.65860448zm6.42601595\\n\\t\\t1.42288912c-.62979799 0-1.14873693.5024111-1.14873693 1.1218933 0\\n\\t\\t.6211677.51893894 1.128745 1.14873693 1.128745.62984256 0\\n\\t\\t1.14178597-.5082122 1.14178597-1.128745\\n\\t\\t0-.6188692-.51194341-1.1218933-1.14178597-1.1218933z\\\" />\\n</g>\\n</svg>\\n\\t\";\n/* src/views/WalletSelect.svelte generated by Svelte v3.24.0 */\n\nfunction add_css$9() {\n  var style = element(\"style\");\n  style.id = \"svelte-rj3fpa-style\";\n  style.textContent = \"p.svelte-rj3fpa.svelte-rj3fpa{font-size:0.889em;margin:1.6em 0 0 0;font-family:inherit}div.svelte-rj3fpa.svelte-rj3fpa{display:flex;font-size:inherit;font-family:inherit;justify-content:space-between}div.svelte-rj3fpa span.svelte-rj3fpa{color:#4a90e2;font-size:inherit;font-family:inherit;margin-top:0.66em;cursor:pointer}\";\n  append(document.head, style);\n} // (180:0) {#if modalData}\n\n\nfunction create_if_block$7(ctx) {\n  var modal;\n  var current;\n  modal = new Modal({\n    props: {\n      closeModal:\n      /*func_2*/\n      ctx[15],\n      $$slots: {\n        \"default\": [create_default_slot$2]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(modal.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(modal, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var modal_changes = {};\n\n      if (dirty &\n      /*$$scope, modalData, showWalletDefinition, loadingWallet, showingAllWalletModules, selectedWalletModule, walletAlreadyInstalled, installMessage*/\n      33554559) {\n        modal_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      modal.$set(modal_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(modal.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(modal.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(modal, detaching);\n    }\n  };\n} // (210:4) {:else}\n\n\nfunction create_else_block$3(ctx) {\n  var selectedwallet;\n  var current;\n  selectedwallet = new SelectedWallet({\n    props: {\n      selectedWalletModule:\n      /*selectedWalletModule*/\n      ctx[4],\n      onBack:\n      /*func_1*/\n      ctx[14],\n      installMessage:\n      /*installMessage*/\n      ctx[3]\n    }\n  });\n  return {\n    c: function c() {\n      create_component(selectedwallet.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(selectedwallet, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var selectedwallet_changes = {};\n      if (dirty &\n      /*selectedWalletModule*/\n      16) selectedwallet_changes.selectedWalletModule =\n      /*selectedWalletModule*/\n      ctx[4];\n      if (dirty &\n      /*selectedWalletModule, walletAlreadyInstalled*/\n      20) selectedwallet_changes.onBack =\n      /*func_1*/\n      ctx[14];\n      if (dirty &\n      /*installMessage*/\n      8) selectedwallet_changes.installMessage =\n      /*installMessage*/\n      ctx[3];\n      selectedwallet.$set(selectedwallet_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(selectedwallet.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(selectedwallet.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(selectedwallet, detaching);\n    }\n  };\n} // (183:4) {#if !selectedWalletModule}\n\n\nfunction create_if_block_1$3(ctx) {\n  var _p;\n\n  var raw_value =\n  /*modalData*/\n  ctx[0].description + \"\";\n  var t0;\n  var wallets_1;\n  var t1;\n  var div;\n  var span;\n  var t3;\n  var t4;\n  var if_block1_anchor;\n  var current;\n  var mounted;\n  var dispose;\n  wallets_1 = new Wallets({\n    props: {\n      modalData:\n      /*modalData*/\n      ctx[0],\n      handleWalletSelect:\n      /*handleWalletSelect*/\n      ctx[9],\n      loadingWallet:\n      /*loadingWallet*/\n      ctx[5],\n      showingAllWalletModules:\n      /*showingAllWalletModules*/\n      ctx[6],\n      showAllWallets:\n      /*showAllWallets*/\n      ctx[8]\n    }\n  });\n  var if_block0 =\n  /*mobileDevice*/\n  ctx[7] && create_if_block_3(ctx);\n  var if_block1 =\n  /*showWalletDefinition*/\n  ctx[1] && create_if_block_2$1(ctx);\n  return {\n    c: function c() {\n      _p = element(\"p\");\n      t0 = space();\n      create_component(wallets_1.$$.fragment);\n      t1 = space();\n      div = element(\"div\");\n      span = element(\"span\");\n      span.textContent = \"What is a wallet?\";\n      t3 = space();\n      if (if_block0) if_block0.c();\n      t4 = space();\n      if (if_block1) if_block1.c();\n      if_block1_anchor = empty();\n      attr(_p, \"class\", \"bn-onboard-custom bn-onboard-select-description svelte-rj3fpa\");\n      attr(span, \"class\", \"bn-onboard-custom bn-onboard-select-wallet-info svelte-rj3fpa\");\n      attr(div, \"class\", \"bn-onboard-custom bn-onboard-select-info-container svelte-rj3fpa\");\n    },\n    m: function m(target, anchor) {\n      insert(target, _p, anchor);\n      _p.innerHTML = raw_value;\n      insert(target, t0, anchor);\n      mount_component(wallets_1, target, anchor);\n      insert(target, t1, anchor);\n      insert(target, div, anchor);\n      append(div, span);\n      append(div, t3);\n      if (if_block0) if_block0.m(div, null);\n      insert(target, t4, anchor);\n      if (if_block1) if_block1.m(target, anchor);\n      insert(target, if_block1_anchor, anchor);\n      current = true;\n\n      if (!mounted) {\n        dispose = listen(span, \"click\",\n        /*click_handler*/\n        ctx[12]);\n        mounted = true;\n      }\n    },\n    p: function p(ctx, dirty) {\n      if ((!current || dirty &\n      /*modalData*/\n      1) && raw_value !== (raw_value =\n      /*modalData*/\n      ctx[0].description + \"\")) _p.innerHTML = raw_value;\n      var wallets_1_changes = {};\n      if (dirty &\n      /*modalData*/\n      1) wallets_1_changes.modalData =\n      /*modalData*/\n      ctx[0];\n      if (dirty &\n      /*loadingWallet*/\n      32) wallets_1_changes.loadingWallet =\n      /*loadingWallet*/\n      ctx[5];\n      if (dirty &\n      /*showingAllWalletModules*/\n      64) wallets_1_changes.showingAllWalletModules =\n      /*showingAllWalletModules*/\n      ctx[6];\n      wallets_1.$set(wallets_1_changes);\n      if (\n      /*mobileDevice*/\n      ctx[7]) if_block0.p(ctx, dirty);\n\n      if (\n      /*showWalletDefinition*/\n      ctx[1]) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n\n          if (dirty &\n          /*showWalletDefinition*/\n          2) {\n            transition_in(if_block1, 1);\n          }\n        } else {\n          if_block1 = create_if_block_2$1(ctx);\n          if_block1.c();\n          transition_in(if_block1, 1);\n          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);\n        }\n      } else if (if_block1) {\n        if_block1.d(1);\n        if_block1 = null;\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(wallets_1.$$.fragment, local);\n      transition_in(if_block0);\n      transition_in(if_block1);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(wallets_1.$$.fragment, local);\n      transition_out(if_block0);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(_p);\n      if (detaching) detach(t0);\n      destroy_component(wallets_1, detaching);\n      if (detaching) detach(t1);\n      if (detaching) detach(div);\n      if (if_block0) if_block0.d();\n      if (detaching) detach(t4);\n      if (if_block1) if_block1.d(detaching);\n      if (detaching) detach(if_block1_anchor);\n      mounted = false;\n      dispose();\n    }\n  };\n} // (199:8) {#if mobileDevice}\n\n\nfunction create_if_block_3(ctx) {\n  var button;\n  var current;\n  button = new Button({\n    props: {\n      onclick:\n      /*func*/\n      ctx[13],\n      $$slots: {\n        \"default\": [create_default_slot_1$1]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(button.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(button, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var button_changes = {};\n\n      if (dirty &\n      /*$$scope*/\n      33554432) {\n        button_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button.$set(button_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(button.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(button.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(button, detaching);\n    }\n  };\n} // (200:10) <Button onclick={() => finish({ completed: false })}>\n\n\nfunction create_default_slot_1$1(ctx) {\n  var t;\n  return {\n    c: function c() {\n      t = text(\"Dismiss\");\n    },\n    m: function m(target, anchor) {\n      insert(target, t, anchor);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t);\n    }\n  };\n} // (203:6) {#if showWalletDefinition}\n\n\nfunction create_if_block_2$1(ctx) {\n  var _p2;\n\n  var raw_value =\n  /*modalData*/\n  ctx[0].explanation + \"\";\n  var p_intro;\n  return {\n    c: function c() {\n      _p2 = element(\"p\");\n      attr(_p2, \"class\", \"bn-onboard-custom bn-onboard-select-wallet-definition svelte-rj3fpa\");\n    },\n    m: function m(target, anchor) {\n      insert(target, _p2, anchor);\n      _p2.innerHTML = raw_value;\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*modalData*/\n      1 && raw_value !== (raw_value =\n      /*modalData*/\n      ctx[0].explanation + \"\")) _p2.innerHTML = raw_value;\n    },\n    i: function i(local) {\n      if (!p_intro) {\n        add_render_callback(function () {\n          p_intro = create_in_transition(_p2, fade, {});\n          p_intro.start();\n        });\n      }\n    },\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(_p2);\n    }\n  };\n} // (181:2) <Modal closeModal={() => finish({ completed: false })}>\n\n\nfunction create_default_slot$2(ctx) {\n  var modalheader;\n  var t;\n  var current_block_type_index;\n  var if_block;\n  var if_block_anchor;\n  var current;\n  modalheader = new ModalHeader({\n    props: {\n      icon: walletIcon,\n      heading:\n      /*modalData*/\n      ctx[0].heading\n    }\n  });\n  var if_block_creators = [create_if_block_1$3, create_else_block$3];\n  var if_blocks = [];\n\n  function select_block_type(ctx, dirty) {\n    if (!\n    /*selectedWalletModule*/\n    ctx[4]) return 0;\n    return 1;\n  }\n\n  current_block_type_index = select_block_type(ctx);\n  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n  return {\n    c: function c() {\n      create_component(modalheader.$$.fragment);\n      t = space();\n      if_block.c();\n      if_block_anchor = empty();\n    },\n    m: function m(target, anchor) {\n      mount_component(modalheader, target, anchor);\n      insert(target, t, anchor);\n      if_blocks[current_block_type_index].m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var modalheader_changes = {};\n      if (dirty &\n      /*modalData*/\n      1) modalheader_changes.heading =\n      /*modalData*/\n      ctx[0].heading;\n      modalheader.$set(modalheader_changes);\n      var previous_block_index = current_block_type_index;\n      current_block_type_index = select_block_type(ctx);\n\n      if (current_block_type_index === previous_block_index) {\n        if_blocks[current_block_type_index].p(ctx, dirty);\n      } else {\n        group_outros();\n        transition_out(if_blocks[previous_block_index], 1, 1, function () {\n          if_blocks[previous_block_index] = null;\n        });\n        check_outros();\n        if_block = if_blocks[current_block_type_index];\n\n        if (!if_block) {\n          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n          if_block.c();\n        }\n\n        transition_in(if_block, 1);\n        if_block.m(if_block_anchor.parentNode, if_block_anchor);\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(modalheader.$$.fragment, local);\n      transition_in(if_block);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(modalheader.$$.fragment, local);\n      transition_out(if_block);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(modalheader, detaching);\n      if (detaching) detach(t);\n      if_blocks[current_block_type_index].d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n  };\n}\n\nfunction create_fragment$9(ctx) {\n  var if_block_anchor;\n  var current;\n  var if_block =\n  /*modalData*/\n  ctx[0] && create_if_block$7(ctx);\n  return {\n    c: function c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n    m: function m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n      current = true;\n    },\n    p: function p(ctx, _ref28) {\n      var _ref29 = _slicedToArray(_ref28, 1),\n          dirty = _ref29[0];\n\n      if (\n      /*modalData*/\n      ctx[0]) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n\n          if (dirty &\n          /*modalData*/\n          1) {\n            transition_in(if_block, 1);\n          }\n        } else {\n          if_block = create_if_block$7(ctx);\n          if_block.c();\n          transition_in(if_block, 1);\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        group_outros();\n        transition_out(if_block, 1, 1, function () {\n          if_block = null;\n        });\n        check_outros();\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(if_block);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(if_block);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n  };\n}\n\nfunction lockScroll() {\n  window.scrollTo(0, 0);\n}\n\nfunction instance$9($$self, $$props, $$invalidate) {\n  var _$$props$module = $$props.module,\n      module = _$$props$module === void 0 ? {\n    heading: \"\",\n    description: \"\",\n    wallets: []\n  } : _$$props$module;\n  var modalData;\n  var showWalletDefinition;\n  var walletAlreadyInstalled;\n  var installMessage;\n  var selectedWalletModule;\n\n  var _get_store_value2 = get_store_value(app),\n      mobileDevice = _get_store_value2.mobileDevice,\n      os = _get_store_value2.os;\n\n  var _module = module,\n      heading = _module.heading,\n      description = _module.description,\n      explanation = _module.explanation,\n      wallets = _module.wallets;\n  var primaryWallets;\n  var secondaryWallets;\n  var loadingWallet = undefined;\n  var showingAllWalletModules = false;\n\n  var showAllWallets = function showAllWallets() {\n    return $$invalidate(6, showingAllWalletModules = true);\n  };\n\n  var originalOverflowValue;\n  onMount(function () {\n    originalOverflowValue = window.document.body.style.overflow;\n    window.document.body.style.overflow = \"hidden\";\n    window.addEventListener(\"scroll\", lockScroll);\n  });\n  onDestroy(function () {\n    window.removeEventListener(\"scroll\", lockScroll);\n    window.document.body.style.overflow = originalOverflowValue;\n  });\n  renderWalletSelect();\n\n  function renderWalletSelect() {\n    return _renderWalletSelect.apply(this, arguments);\n  }\n\n  function _renderWalletSelect() {\n    _renderWalletSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var appState, deviceWallets, _module2;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              appState = get_store_value(app);\n              _context3.next = 3;\n              return wallets;\n\n            case 3:\n              wallets = _context3.sent;\n              deviceWallets = wallets.filter(function (wallet) {\n                return wallet[mobileDevice ? \"mobile\" : \"desktop\"];\n              }).filter(function (wallet) {\n                var _wallet$osExclusions = wallet.osExclusions,\n                    osExclusions = _wallet$osExclusions === void 0 ? [] : _wallet$osExclusions;\n                return !osExclusions.includes(os.name);\n              });\n\n              if (deviceWallets.find(function (wallet) {\n                return wallet.preferred;\n              })) {\n                // if preferred wallets, then split in to preferred and not preferred\n                primaryWallets = deviceWallets.filter(function (wallet) {\n                  return wallet.preferred;\n                });\n                secondaryWallets = deviceWallets.filter(function (wallet) {\n                  return !wallet.preferred;\n                });\n              } else {\n                // otherwise make the first 4 wallets preferred\n                primaryWallets = deviceWallets.slice(0, 4);\n                secondaryWallets = deviceWallets.length > 4 ? deviceWallets.slice(4) : undefined;\n              }\n\n              if (!appState.autoSelectWallet) {\n                _context3.next = 12;\n                break;\n              }\n\n              _module2 = deviceWallets.find(function (m) {\n                return m.name === appState.autoSelectWallet;\n              });\n              app.update(function (store) {\n                return _objectSpread(_objectSpread({}, store), {}, {\n                  autoSelectWallet: \"\"\n                });\n              });\n\n              if (!_module2) {\n                _context3.next = 12;\n                break;\n              }\n\n              handleWalletSelect(_module2, true);\n              return _context3.abrupt(\"return\");\n\n            case 12:\n              $$invalidate(0, modalData = {\n                heading: heading,\n                description: description,\n                explanation: explanation,\n                primaryWallets: primaryWallets,\n                secondaryWallets: secondaryWallets\n              });\n              app.update(function (store) {\n                return _objectSpread(_objectSpread({}, store), {}, {\n                  walletSelectDisplayedUI: true\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _renderWalletSelect.apply(this, arguments);\n  }\n\n  function handleWalletSelect(_x4, _x5) {\n    return _handleWalletSelect.apply(this, arguments);\n  }\n\n  function _handleWalletSelect() {\n    _handleWalletSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(module, autoSelected) {\n      var currentWalletInterface, _get_store_value3, browser, os, _yield$module$wallet, provider, selectedWalletInterface, instance;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              currentWalletInterface = get_store_value(walletInterface);\n              _get_store_value3 = get_store_value(app), browser = _get_store_value3.browser, os = _get_store_value3.os;\n\n              if (!(currentWalletInterface && currentWalletInterface.name === module.name)) {\n                _context4.next = 5;\n                break;\n              }\n\n              finish({\n                completed: true\n              });\n              return _context4.abrupt(\"return\");\n\n            case 5:\n              $$invalidate(5, loadingWallet = module.name);\n              _context4.next = 8;\n              return module.wallet({\n                getProviderName: getProviderName,\n                createLegacyProviderInterface: createLegacyProviderInterface,\n                createModernProviderInterface: createModernProviderInterface,\n                BigNumber: bignumber_js__WEBPACK_IMPORTED_MODULE_1___default.a,\n                getNetwork: getNetwork,\n                getAddress: getAddress,\n                getBalance: getBalance,\n                resetWalletState: resetWalletState,\n                networkName: networkName,\n                browser: browser,\n                os: os\n              });\n\n            case 8:\n              _yield$module$wallet = _context4.sent;\n              provider = _yield$module$wallet.provider;\n              selectedWalletInterface = _yield$module$wallet[\"interface\"];\n              instance = _yield$module$wallet.instance;\n              $$invalidate(5, loadingWallet = undefined); // if no interface then the user does not have the wallet they selected installed or available\n\n              if (selectedWalletInterface) {\n                _context4.next = 19;\n                break;\n              }\n\n              $$invalidate(4, selectedWalletModule = module);\n              $$invalidate(2, walletAlreadyInstalled = provider && getProviderName(provider));\n              $$invalidate(3, installMessage = module.installMessage && module.installMessage({\n                currentWallet: walletAlreadyInstalled,\n                selectedWallet: selectedWalletModule.name\n              })); // if it was autoSelected then we need to add modalData to show the modal\n\n              if (autoSelected) {\n                $$invalidate(0, modalData = {\n                  heading: heading,\n                  description: description,\n                  explanation: explanation,\n                  primaryWallets: primaryWallets,\n                  secondaryWallets: secondaryWallets\n                });\n                app.update(function (store) {\n                  return _objectSpread(_objectSpread({}, store), {}, {\n                    walletSelectDisplayedUI: true\n                  });\n                });\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 19:\n              walletInterface.update(function (currentInterface) {\n                if (currentInterface && currentInterface.disconnect) {\n                  currentInterface.disconnect();\n                }\n\n                return selectedWalletInterface;\n              });\n              wallet.set({\n                provider: provider,\n                instance: instance,\n                dashboard: selectedWalletInterface.dashboard,\n                name: module.name,\n                connect: selectedWalletInterface.connect,\n                type: module.type\n              });\n              finish({\n                completed: true\n              });\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _handleWalletSelect.apply(this, arguments);\n  }\n\n  function finish(options) {\n    $$invalidate(0, modalData = null);\n    app.update(function (store) {\n      return _objectSpread(_objectSpread({}, store), {}, {\n        walletSelectInProgress: false,\n        walletSelectCompleted: options.completed\n      });\n    });\n  }\n\n  var click_handler = function click_handler() {\n    return $$invalidate(1, showWalletDefinition = !showWalletDefinition);\n  };\n\n  var func = function func() {\n    return finish({\n      completed: false\n    });\n  };\n\n  var func_1 = function func_1() {\n    $$invalidate(4, selectedWalletModule = null);\n    $$invalidate(2, walletAlreadyInstalled = null);\n  };\n\n  var func_2 = function func_2() {\n    return finish({\n      completed: false\n    });\n  };\n\n  $$self.$set = function ($$props) {\n    if (\"module\" in $$props) $$invalidate(11, module = $$props.module);\n  };\n\n  return [modalData, showWalletDefinition, walletAlreadyInstalled, installMessage, selectedWalletModule, loadingWallet, showingAllWalletModules, mobileDevice, showAllWallets, handleWalletSelect, finish, module, click_handler, func, func_1, func_2];\n}\n\nvar WalletSelect = /*#__PURE__*/function (_SvelteComponent10) {\n  _inherits(WalletSelect, _SvelteComponent10);\n\n  var _super10 = _createSuper(WalletSelect);\n\n  function WalletSelect(options) {\n    var _this10;\n\n    _classCallCheck(this, WalletSelect);\n\n    _this10 = _super10.call(this);\n    if (!document.getElementById(\"svelte-rj3fpa-style\")) add_css$9();\n    init(_assertThisInitialized(_this10), options, instance$9, create_fragment$9, safe_not_equal, {\n      module: 11\n    });\n    return _this10;\n  }\n\n  return WalletSelect;\n}(SvelteComponent);\n/* src/views/WalletCheck.svelte generated by Svelte v3.24.0 */\n\n\nfunction add_css$a() {\n  var style = element(\"style\");\n  style.id = \"svelte-zrvscw-style\";\n  style.textContent = \"p.svelte-zrvscw{font-size:0.889em;font-family:inherit;margin:1em 0}span.svelte-zrvscw{color:#e2504a;font-size:0.889em;font-family:inherit;display:block;margin-bottom:0.75em;padding:0.5em;border:1px solid #e2504a;border-radius:5px}div.svelte-zrvscw{display:flex;justify-content:center;align-items:center;min-height:2.5rem;position:relative}section.svelte-zrvscw{display:flex;justify-content:center;flex-direction:column;align-items:center;margin-bottom:1rem}\";\n  append(document.head, style);\n} // (239:0) {#if loadingModal}\n\n\nfunction create_if_block_6(ctx) {\n  var modal;\n  var current;\n  modal = new Modal({\n    props: {\n      closeable: false,\n      $$slots: {\n        \"default\": [create_default_slot_4]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(modal.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(modal, target, anchor);\n      current = true;\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(modal.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(modal.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(modal, detaching);\n    }\n  };\n} // (240:2) <Modal closeable={false}>\n\n\nfunction create_default_slot_4(ctx) {\n  var spinner;\n  var current;\n  spinner = new Spinner({\n    props: {\n      description: \"Checking wallet\"\n    }\n  });\n  return {\n    c: function c() {\n      create_component(spinner.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(spinner, target, anchor);\n      current = true;\n    },\n    p: noop,\n    i: function i(local) {\n      if (current) return;\n      transition_in(spinner.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(spinner.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(spinner, detaching);\n    }\n  };\n} // (245:0) {#if activeModal}\n\n\nfunction create_if_block$8(ctx) {\n  var modal;\n  var current;\n  modal = new Modal({\n    props: {\n      closeModal:\n      /*func_1*/\n      ctx[10],\n      $$slots: {\n        \"default\": [create_default_slot$3]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(modal.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(modal, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var modal_changes = {};\n\n      if (dirty &\n      /*$$scope, loading, activeModal, errorMsg, $app*/\n      16777239) {\n        modal_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      modal.$set(modal_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(modal.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(modal.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(modal, detaching);\n    }\n  };\n} // (251:4) {#if errorMsg}\n\n\nfunction create_if_block_5(ctx) {\n  var span;\n  var t;\n  var span_intro;\n  return {\n    c: function c() {\n      span = element(\"span\");\n      t = text(\n      /*errorMsg*/\n      ctx[1]);\n      attr(span, \"class\", \"bn-onboard-custom bn-onboard-prepare-error svelte-zrvscw\");\n      toggle_class(span, \"bn-onboard-dark-mode-background\",\n      /*$app*/\n      ctx[4].darkMode);\n    },\n    m: function m(target, anchor) {\n      insert(target, span, anchor);\n      append(span, t);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*errorMsg*/\n      2) set_data(t,\n      /*errorMsg*/\n      ctx[1]);\n\n      if (dirty &\n      /*$app*/\n      16) {\n        toggle_class(span, \"bn-onboard-dark-mode-background\",\n        /*$app*/\n        ctx[4].darkMode);\n      }\n    },\n    i: function i(local) {\n      if (!span_intro) {\n        add_render_callback(function () {\n          span_intro = create_in_transition(span, fade, {});\n          span_intro.start();\n        });\n      }\n    },\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(span);\n    }\n  };\n} // (260:4) {#if activeModal.html}\n\n\nfunction create_if_block_4(ctx) {\n  var section;\n  var raw_value =\n  /*activeModal*/\n  ctx[0].html + \"\";\n  return {\n    c: function c() {\n      section = element(\"section\");\n      attr(section, \"class\", \"bn-onboard-custom bn-onboard-wallet-check-section svelte-zrvscw\");\n    },\n    m: function m(target, anchor) {\n      insert(target, section, anchor);\n      section.innerHTML = raw_value;\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*activeModal*/\n      1 && raw_value !== (raw_value =\n      /*activeModal*/\n      ctx[0].html + \"\")) section.innerHTML = raw_value;\n    },\n    d: function d(detaching) {\n      if (detaching) detach(section);\n    }\n  };\n} // (267:6) {#if activeModal.button}\n\n\nfunction create_if_block_3$1(ctx) {\n  var button;\n  var current;\n  button = new Button({\n    props: {\n      position: \"left\",\n      onclick:\n      /*activeModal*/\n      ctx[0].button.onclick,\n      $$slots: {\n        \"default\": [create_default_slot_3]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(button.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(button, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var button_changes = {};\n      if (dirty &\n      /*activeModal*/\n      1) button_changes.onclick =\n      /*activeModal*/\n      ctx[0].button.onclick;\n\n      if (dirty &\n      /*$$scope, activeModal*/\n      16777217) {\n        button_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button.$set(button_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(button.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(button.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(button, detaching);\n    }\n  };\n} // (268:8) <Button position=\"left\" onclick={activeModal.button.onclick}>\n\n\nfunction create_default_slot_3(ctx) {\n  var t_value =\n  /*activeModal*/\n  ctx[0].button.text + \"\";\n  var t;\n  return {\n    c: function c() {\n      t = text(t_value);\n    },\n    m: function m(target, anchor) {\n      insert(target, t, anchor);\n    },\n    p: function p(ctx, dirty) {\n      if (dirty &\n      /*activeModal*/\n      1 && t_value !== (t_value =\n      /*activeModal*/\n      ctx[0].button.text + \"\")) set_data(t, t_value);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t);\n    }\n  };\n} // (276:6) {:else}\n\n\nfunction create_else_block$4(ctx) {\n  var div;\n  return {\n    c: function c() {\n      div = element(\"div\");\n      attr(div, \"class\", \"svelte-zrvscw\");\n    },\n    m: function m(target, anchor) {\n      insert(target, div, anchor);\n    },\n    p: noop,\n    i: noop,\n    o: noop,\n    d: function d(detaching) {\n      if (detaching) detach(div);\n    }\n  };\n} // (272:6) {#if errorMsg}\n\n\nfunction create_if_block_2$2(ctx) {\n  var button;\n  var current;\n  button = new Button({\n    props: {\n      position: !\n      /*activeModal*/\n      ctx[0].button && \"left\",\n      onclick:\n      /*doAction*/\n      ctx[5],\n      $$slots: {\n        \"default\": [create_default_slot_2]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(button.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(button, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var button_changes = {};\n      if (dirty &\n      /*activeModal*/\n      1) button_changes.position = !\n      /*activeModal*/\n      ctx[0].button && \"left\";\n\n      if (dirty &\n      /*$$scope*/\n      16777216) {\n        button_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button.$set(button_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(button.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(button.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(button, detaching);\n    }\n  };\n} // (273:8) <Button position={!activeModal.button && 'left'} onclick={doAction}>\n\n\nfunction create_default_slot_2(ctx) {\n  var t;\n  return {\n    c: function c() {\n      t = text(\"Try Again\");\n    },\n    m: function m(target, anchor) {\n      insert(target, t, anchor);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t);\n    }\n  };\n} // (279:6) {#if loading}\n\n\nfunction create_if_block_1$4(ctx) {\n  var spinner;\n  var current;\n  spinner = new Spinner({});\n  return {\n    c: function c() {\n      create_component(spinner.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(spinner, target, anchor);\n      current = true;\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(spinner.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(spinner.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(spinner, detaching);\n    }\n  };\n} // (282:6) <Button position=\"right\" onclick={() => handleExit(false)}>\n\n\nfunction create_default_slot_1$2(ctx) {\n  var t;\n  return {\n    c: function c() {\n      t = text(\"Dismiss\");\n    },\n    m: function m(target, anchor) {\n      insert(target, t, anchor);\n    },\n    d: function d(detaching) {\n      if (detaching) detach(t);\n    }\n  };\n} // (246:2) <Modal closeModal={() => handleExit()}>\n\n\nfunction create_default_slot$3(ctx) {\n  var modalheader;\n  var t0;\n\n  var _p3;\n\n  var raw_value =\n  /*activeModal*/\n  ctx[0].description + \"\";\n  var t1;\n  var t2;\n  var t3;\n  var div;\n  var t4;\n  var current_block_type_index;\n  var if_block3;\n  var t5;\n  var t6;\n  var button;\n  var current;\n  modalheader = new ModalHeader({\n    props: {\n      icon:\n      /*activeModal*/\n      ctx[0].icon,\n      heading:\n      /*activeModal*/\n      ctx[0].heading\n    }\n  });\n  var if_block0 =\n  /*errorMsg*/\n  ctx[1] && create_if_block_5(ctx);\n  var if_block1 =\n  /*activeModal*/\n  ctx[0].html && create_if_block_4(ctx);\n  var if_block2 =\n  /*activeModal*/\n  ctx[0].button && create_if_block_3$1(ctx);\n  var if_block_creators = [create_if_block_2$2, create_else_block$4];\n  var if_blocks = [];\n\n  function select_block_type(ctx, dirty) {\n    if (\n    /*errorMsg*/\n    ctx[1]) return 0;\n    return 1;\n  }\n\n  current_block_type_index = select_block_type(ctx);\n  if_block3 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n  var if_block4 =\n  /*loading*/\n  ctx[2] && create_if_block_1$4();\n  button = new Button({\n    props: {\n      position: \"right\",\n      onclick:\n      /*func*/\n      ctx[9],\n      $$slots: {\n        \"default\": [create_default_slot_1$2]\n      },\n      $$scope: {\n        ctx: ctx\n      }\n    }\n  });\n  return {\n    c: function c() {\n      create_component(modalheader.$$.fragment);\n      t0 = space();\n      _p3 = element(\"p\");\n      t1 = space();\n      if (if_block0) if_block0.c();\n      t2 = space();\n      if (if_block1) if_block1.c();\n      t3 = space();\n      div = element(\"div\");\n      if (if_block2) if_block2.c();\n      t4 = space();\n      if_block3.c();\n      t5 = space();\n      if (if_block4) if_block4.c();\n      t6 = space();\n      create_component(button.$$.fragment);\n      attr(_p3, \"class\", \"bn-onboard-custom bn-onboard-prepare-description svelte-zrvscw\");\n      attr(div, \"class\", \"bn-onboard-custom bn-onboard-prepare-button-container svelte-zrvscw\");\n    },\n    m: function m(target, anchor) {\n      mount_component(modalheader, target, anchor);\n      insert(target, t0, anchor);\n      insert(target, _p3, anchor);\n      _p3.innerHTML = raw_value;\n      insert(target, t1, anchor);\n      if (if_block0) if_block0.m(target, anchor);\n      insert(target, t2, anchor);\n      if (if_block1) if_block1.m(target, anchor);\n      insert(target, t3, anchor);\n      insert(target, div, anchor);\n      if (if_block2) if_block2.m(div, null);\n      append(div, t4);\n      if_blocks[current_block_type_index].m(div, null);\n      append(div, t5);\n      if (if_block4) if_block4.m(div, null);\n      append(div, t6);\n      mount_component(button, div, null);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var modalheader_changes = {};\n      if (dirty &\n      /*activeModal*/\n      1) modalheader_changes.icon =\n      /*activeModal*/\n      ctx[0].icon;\n      if (dirty &\n      /*activeModal*/\n      1) modalheader_changes.heading =\n      /*activeModal*/\n      ctx[0].heading;\n      modalheader.$set(modalheader_changes);\n      if ((!current || dirty &\n      /*activeModal*/\n      1) && raw_value !== (raw_value =\n      /*activeModal*/\n      ctx[0].description + \"\")) _p3.innerHTML = raw_value;\n\n      if (\n      /*errorMsg*/\n      ctx[1]) {\n        if (if_block0) {\n          if_block0.p(ctx, dirty);\n\n          if (dirty &\n          /*errorMsg*/\n          2) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_5(ctx);\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(t2.parentNode, t2);\n        }\n      } else if (if_block0) {\n        if_block0.d(1);\n        if_block0 = null;\n      }\n\n      if (\n      /*activeModal*/\n      ctx[0].html) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n        } else {\n          if_block1 = create_if_block_4(ctx);\n          if_block1.c();\n          if_block1.m(t3.parentNode, t3);\n        }\n      } else if (if_block1) {\n        if_block1.d(1);\n        if_block1 = null;\n      }\n\n      if (\n      /*activeModal*/\n      ctx[0].button) {\n        if (if_block2) {\n          if_block2.p(ctx, dirty);\n\n          if (dirty &\n          /*activeModal*/\n          1) {\n            transition_in(if_block2, 1);\n          }\n        } else {\n          if_block2 = create_if_block_3$1(ctx);\n          if_block2.c();\n          transition_in(if_block2, 1);\n          if_block2.m(div, t4);\n        }\n      } else if (if_block2) {\n        group_outros();\n        transition_out(if_block2, 1, 1, function () {\n          if_block2 = null;\n        });\n        check_outros();\n      }\n\n      var previous_block_index = current_block_type_index;\n      current_block_type_index = select_block_type(ctx);\n\n      if (current_block_type_index === previous_block_index) {\n        if_blocks[current_block_type_index].p(ctx, dirty);\n      } else {\n        group_outros();\n        transition_out(if_blocks[previous_block_index], 1, 1, function () {\n          if_blocks[previous_block_index] = null;\n        });\n        check_outros();\n        if_block3 = if_blocks[current_block_type_index];\n\n        if (!if_block3) {\n          if_block3 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n          if_block3.c();\n        }\n\n        transition_in(if_block3, 1);\n        if_block3.m(div, t5);\n      }\n\n      if (\n      /*loading*/\n      ctx[2]) {\n        if (if_block4) {\n          if (dirty &\n          /*loading*/\n          4) {\n            transition_in(if_block4, 1);\n          }\n        } else {\n          if_block4 = create_if_block_1$4();\n          if_block4.c();\n          transition_in(if_block4, 1);\n          if_block4.m(div, t6);\n        }\n      } else if (if_block4) {\n        group_outros();\n        transition_out(if_block4, 1, 1, function () {\n          if_block4 = null;\n        });\n        check_outros();\n      }\n\n      var button_changes = {};\n\n      if (dirty &\n      /*$$scope*/\n      16777216) {\n        button_changes.$$scope = {\n          dirty: dirty,\n          ctx: ctx\n        };\n      }\n\n      button.$set(button_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(modalheader.$$.fragment, local);\n      transition_in(if_block0);\n      transition_in(if_block2);\n      transition_in(if_block3);\n      transition_in(if_block4);\n      transition_in(button.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(modalheader.$$.fragment, local);\n      transition_out(if_block2);\n      transition_out(if_block3);\n      transition_out(if_block4);\n      transition_out(button.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(modalheader, detaching);\n      if (detaching) detach(t0);\n      if (detaching) detach(_p3);\n      if (detaching) detach(t1);\n      if (if_block0) if_block0.d(detaching);\n      if (detaching) detach(t2);\n      if (if_block1) if_block1.d(detaching);\n      if (detaching) detach(t3);\n      if (detaching) detach(div);\n      if (if_block2) if_block2.d();\n      if_blocks[current_block_type_index].d();\n      if (if_block4) if_block4.d();\n      destroy_component(button);\n    }\n  };\n}\n\nfunction create_fragment$a(ctx) {\n  var t;\n  var if_block1_anchor;\n  var current;\n  var if_block0 =\n  /*loadingModal*/\n  ctx[3] && create_if_block_6(ctx);\n  var if_block1 =\n  /*activeModal*/\n  ctx[0] && create_if_block$8(ctx);\n  return {\n    c: function c() {\n      if (if_block0) if_block0.c();\n      t = space();\n      if (if_block1) if_block1.c();\n      if_block1_anchor = empty();\n    },\n    m: function m(target, anchor) {\n      if (if_block0) if_block0.m(target, anchor);\n      insert(target, t, anchor);\n      if (if_block1) if_block1.m(target, anchor);\n      insert(target, if_block1_anchor, anchor);\n      current = true;\n    },\n    p: function p(ctx, _ref30) {\n      var _ref31 = _slicedToArray(_ref30, 1),\n          dirty = _ref31[0];\n\n      if (\n      /*loadingModal*/\n      ctx[3]) {\n        if (if_block0) {\n          if (dirty &\n          /*loadingModal*/\n          8) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_6(ctx);\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(t.parentNode, t);\n        }\n      } else if (if_block0) {\n        group_outros();\n        transition_out(if_block0, 1, 1, function () {\n          if_block0 = null;\n        });\n        check_outros();\n      }\n\n      if (\n      /*activeModal*/\n      ctx[0]) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n\n          if (dirty &\n          /*activeModal*/\n          1) {\n            transition_in(if_block1, 1);\n          }\n        } else {\n          if_block1 = create_if_block$8(ctx);\n          if_block1.c();\n          transition_in(if_block1, 1);\n          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);\n        }\n      } else if (if_block1) {\n        group_outros();\n        transition_out(if_block1, 1, 1, function () {\n          if_block1 = null;\n        });\n        check_outros();\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(if_block0);\n      transition_in(if_block1);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(if_block0);\n      transition_out(if_block1);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (if_block0) if_block0.d(detaching);\n      if (detaching) detach(t);\n      if (if_block1) if_block1.d(detaching);\n      if (detaching) detach(if_block1_anchor);\n    }\n  };\n}\n\nfunction lockScroll$1() {\n  window.scrollTo(0, 0);\n}\n\nfunction isCheckModal(val) {\n  return val.heading !== undefined;\n}\n\nfunction instance$a($$self, $$props, $$invalidate) {\n  var $app;\n  component_subscribe($$self, app, function ($$value) {\n    return $$invalidate(4, $app = $$value);\n  });\n  var walletSelect = $$props.walletSelect;\n  var modules = $$props.modules;\n  var blocknative = getBlocknative();\n  var currentState;\n  var activeModal = undefined;\n  var currentModule = undefined;\n  var errorMsg;\n  var pollingInterval;\n  var checkingModule = false;\n  var actionResolved = undefined;\n  var loading = false;\n  var loadingModal = false;\n  var unsubscribe = walletInterface.subscribe(function (currentInterface) {\n    if (currentInterface === null) {\n      handleExit();\n      unsubscribe();\n    }\n  });\n  var originalOverflowValue;\n  var unsubscribeCurrentState = state.subscribe(function (store) {\n    return currentState = store;\n  });\n  onMount(function () {\n    originalOverflowValue = window.document.body.style.overflow;\n    window.document.body.style.overflow = \"hidden\";\n    window.addEventListener(\"scroll\", lockScroll$1);\n  });\n  onDestroy(function () {\n    unsubscribeCurrentState();\n    window.removeEventListener(\"scroll\", lockScroll$1);\n    window.document.body.style.overflow = originalOverflowValue;\n  });\n\n  function renderModule() {\n    return _renderModule.apply(this, arguments);\n  }\n\n  function _renderModule() {\n    _renderModule = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var checkModules, currentWallet;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              $$invalidate(14, checkingModule = true);\n              checkModules = modules || get_store_value(app).checkModules;\n\n              if (!isPromise(checkModules)) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 5;\n              return checkModules;\n\n            case 5:\n              checkModules = _context7.sent;\n              checkModules.forEach(validateWalletCheckModule);\n              app.update(function (store) {\n                return _objectSpread(_objectSpread({}, store), {}, {\n                  checkModules: checkModules\n                });\n              });\n\n            case 8:\n              currentWallet = get_store_value(wallet).name; // loop through and run each module to check if a modal needs to be shown\n\n              runModules(checkModules).then(function (result) {\n                // no result then user has passed all conditions\n                if (!result.modal) {\n                  blocknative && blocknative.event({\n                    categoryCode: \"onboard\",\n                    eventCode: \"onboardingCompleted\"\n                  });\n                  handleExit(true);\n                  return;\n                } // set that UI has been displayed, so that timeouts can be added for UI transitions\n\n\n                app.update(function (store) {\n                  return _objectSpread(_objectSpread({}, store), {}, {\n                    walletCheckDisplayedUI: true\n                  });\n                });\n                $$invalidate(0, activeModal = result.modal);\n                currentModule = result.module; // log the event code for this module\n\n                blocknative && blocknative.event({\n                  eventCode: activeModal.eventCode,\n                  categoryCode: \"onboard\"\n                }); // run any actions that module require as part of this step\n\n                if (activeModal.action) {\n                  doAction();\n                } // poll to automatically to check if condition has been met\n\n\n                pollingInterval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n                  var _result;\n\n                  return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          if (!currentModule) {\n                            _context6.next = 5;\n                            break;\n                          }\n\n                          _context6.next = 3;\n                          return invalidState(currentModule, get_store_value(state));\n\n                        case 3:\n                          _result = _context6.sent;\n\n                          if (!_result && actionResolved !== false) {\n                            resetState(); // delayed for animations\n\n                            setTimeout(function () {\n                              $$invalidate(14, checkingModule = false);\n                            }, 250);\n                          } else {\n                            $$invalidate(0, activeModal = _result && _result.modal ? _result.modal : activeModal);\n                          }\n\n                        case 5:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                })), 100);\n              });\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _renderModule.apply(this, arguments);\n  }\n\n  function doAction() {\n    actionResolved = false;\n    $$invalidate(2, loading = true);\n    activeModal && activeModal.action && activeModal.action().then(function () {\n      actionResolved = true;\n      $$invalidate(2, loading = false);\n    })[\"catch\"](function (err) {\n      $$invalidate(1, errorMsg = err.message);\n      $$invalidate(2, loading = false);\n    });\n  }\n\n  function handleExit(completed) {\n    resetState();\n    app.update(function (store) {\n      return _objectSpread(_objectSpread({}, store), {}, {\n        walletCheckInProgress: false,\n        walletCheckCompleted: completed ? completed : false,\n        accountSelectInProgress: false\n      });\n    });\n  }\n\n  function resetState() {\n    clearInterval(pollingInterval);\n    $$invalidate(1, errorMsg = \"\");\n    actionResolved = undefined;\n    $$invalidate(0, activeModal = undefined);\n    currentModule = undefined;\n  }\n\n  function runModules(modules) {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref32 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n        var _iterator, _step, module, result;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _iterator = _createForOfIteratorHelper(modules);\n                _context5.prev = 1;\n\n                _iterator.s();\n\n              case 3:\n                if ((_step = _iterator.n()).done) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                module = _step.value;\n                _context5.next = 7;\n                return invalidState(module, currentState);\n\n              case 7:\n                result = _context5.sent;\n\n                if (!result) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", resolve(result));\n\n              case 10:\n                _context5.next = 3;\n                break;\n\n              case 12:\n                _context5.next = 17;\n                break;\n\n              case 14:\n                _context5.prev = 14;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                _iterator.e(_context5.t0);\n\n              case 17:\n                _context5.prev = 17;\n\n                _iterator.f();\n\n                return _context5.finish(17);\n\n              case 20:\n                return _context5.abrupt(\"return\", resolve({\n                  modal: undefined,\n                  module: undefined\n                }));\n\n              case 21:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 14, 17, 20]]);\n      }));\n\n      return function (_x6) {\n        return _ref32.apply(this, arguments);\n      };\n    }());\n  }\n\n  function invalidState(_x7, _x8) {\n    return _invalidState.apply(this, arguments);\n  }\n\n  function _invalidState() {\n    _invalidState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(module, state) {\n      var result, modal;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              result = module(_objectSpread(_objectSpread({}, state), {}, {\n                BigNumber: bignumber_js__WEBPACK_IMPORTED_MODULE_1___default.a,\n                walletSelect: walletSelect,\n                exit: handleExit,\n                wallet: get_store_value(wallet),\n                stateSyncStatus: stateSyncStatus,\n                stateStore: {\n                  address: address,\n                  network: network,\n                  balance: balance\n                }\n              }));\n\n              if (!result) {\n                _context8.next = 12;\n                break;\n              }\n\n              if (!isCheckModal(result)) {\n                _context8.next = 7;\n                break;\n              }\n\n              validateModal(result);\n              return _context8.abrupt(\"return\", {\n                module: module,\n                modal: result\n              });\n\n            case 7:\n              _context8.next = 9;\n              return new Promise(function (resolve) {\n                var completed = false;\n                result.then(function (res) {\n                  $$invalidate(3, loadingModal = false);\n                  completed = true;\n                  modal = res;\n                  resolve();\n                });\n                setTimeout(function () {\n                  if (!completed) {\n                    $$invalidate(3, loadingModal = true);\n                  }\n                }, 650);\n              });\n\n            case 9:\n              if (!modal) {\n                _context8.next = 12;\n                break;\n              }\n\n              validateModal(modal);\n              return _context8.abrupt(\"return\", {\n                module: module,\n                modal: modal\n              });\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _invalidState.apply(this, arguments);\n  }\n\n  var func = function func() {\n    return handleExit(false);\n  };\n\n  var func_1 = function func_1() {\n    return handleExit();\n  };\n\n  $$self.$set = function ($$props) {\n    if (\"walletSelect\" in $$props) $$invalidate(7, walletSelect = $$props.walletSelect);\n    if (\"modules\" in $$props) $$invalidate(8, modules = $$props.modules);\n  };\n\n  $$self.$$.update = function () {\n    if ($$self.$$.dirty &\n    /*activeModal, checkingModule*/\n    16385) {\n      // recheck modules if below conditions\n      if (!activeModal && !checkingModule) {\n        renderModule();\n      }\n    }\n  };\n\n  return [activeModal, errorMsg, loading, loadingModal, $app, doAction, handleExit, walletSelect, modules, func, func_1];\n}\n\nvar WalletCheck = /*#__PURE__*/function (_SvelteComponent11) {\n  _inherits(WalletCheck, _SvelteComponent11);\n\n  var _super11 = _createSuper(WalletCheck);\n\n  function WalletCheck(options) {\n    var _this11;\n\n    _classCallCheck(this, WalletCheck);\n\n    _this11 = _super11.call(this);\n    if (!document.getElementById(\"svelte-zrvscw-style\")) add_css$a();\n    init(_assertThisInitialized(_this11), options, instance$a, create_fragment$a, safe_not_equal, {\n      walletSelect: 7,\n      modules: 8\n    });\n    return _this11;\n  }\n\n  return WalletCheck;\n}(SvelteComponent);\n\nvar usbIcon = \"\\n\\t<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 512 512\\\" style=\\\"enable-background:new 0 0 512 512;\\\" xml:space=\\\"preserve\\\" width=\\\"18px\\\" height=\\\"18px\\\">\\n\\t<g>\\n\\t<g>\\n\\t<path fill=\\\"currentColor\\\" d=\\\"M314.468,157.197v103.942h31.553v2.312c0,9.888-4.815,19.205-12.881,24.924l-56.652,40.171V109.939h44.546L257.634,0\\n\\t\\tl-66.527,109.939h45.404V358.25l-56.652-40.171c-8.066-5.719-12.881-15.037-12.881-24.924v-8.489\\n\\t\\tc20.19-7.815,34.552-27.427,34.552-50.342c0-29.759-24.211-53.97-53.97-53.97c-29.76,0-53.97,24.211-53.97,53.97\\n\\t\\tc0,22.482,13.821,41.789,33.41,49.891v8.94c0,22.824,11.116,44.333,29.735,57.536l66.895,47.434\\n\\t\\tc4.255,3.016,7.593,7.04,9.809,11.615c-17.713,8.862-29.909,27.173-29.909,48.29c0,29.76,24.211,53.97,53.97,53.97\\n\\t\\tc29.759,0,53.97-24.211,53.97-53.97c0-23.078-14.564-42.81-34.981-50.511v-14.174c0-9.888,4.815-19.205,12.881-24.924\\n\\t\\tl66.895-47.434c18.619-13.202,29.735-34.711,29.735-57.536v-2.312h32.411V157.197H314.468z M147.56,248.316\\n\\t\\tc-7.716,0-13.992-6.277-13.992-13.992c0-7.716,6.276-13.992,13.992-13.992c7.716,0,13.992,6.276,13.992,13.992\\n\\t\\tC161.552,242.04,155.276,248.316,147.56,248.316z M257.499,472.022c-7.716,0-13.992-6.276-13.992-13.992\\n\\t\\tc0-7.716,6.277-13.992,13.992-13.992c7.716,0,13.992,6.276,13.992,13.992C271.491,465.746,265.215,472.022,257.499,472.022z\\n\\t\\tM378.432,221.161h-23.987v-23.987h23.987V221.161z\\\"/>\\n\\t</g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t<g>\\n\\t</g>\\n\\t</svg>\\t  \\n\";\nvar connectIcon = \"\\n\\t<svg height=\\\"14\\\" viewBox=\\\"0 0 18 14\\\" width=\\\"18\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n\\t\\t<g fill=\\\"currentColor\\\">\\n\\t\\t\\t<path d=\\\"m10.29375 4.05351563c0-.04921875 0-.09140625 0-.13007813 0-1.0546875 0-2.109375 0-3.1640625 0-.43945312.3480469-.76992188.7804688-.7453125.2003906.01054688.3585937.10546875.4992187.24609375.5800781.58359375 1.1566406 1.16367188 1.7367187 1.74023438 1.4695313 1.46953125 2.9390625 2.93906249 4.4050782 4.40859375.1335937.13359375.2425781.27421875.2707031.46757812.0351562.20742188-.0246094.421875-.1652344.58007813-.0246094.028125-.0492187.05273437-.0738281.08085937-2.0601563 2.06367188-4.1203125 4.1238281-6.1804688 6.1875-.2109375.2109375-.4570312.3023438-.7453125.2179688-.2707031-.0808594-.4464843-.2707032-.5132812-.5484375-.0140625-.0738282-.0175781-.1441407-.0140625-.2179688 0-1.0335937 0-2.0707031 0-3.1042969 0-.0386719 0-.08085935 0-.13359372h-5.06953125c-.49570313 0-.80507813-.309375-.80507813-.80859375 0-1.42382813 0-2.84414063 0-4.26796875 0-.49570313.30585938-.8015625.8015625-.8015625h4.93593748z\\\"/>\\n\\t\\t\\t<path d=\\\"m5.69882812 13.978125h-4.01132812c-.928125 0-1.6875-.8753906-1.6875-1.9511719v-10.06171872c0-1.07578125.75585938-1.95117188 1.6875-1.95117188h4.01132812c.34101563 0 .61523438.31992188.61523438.71015625 0 .39023438-.27421875.71015625-.61523438.71015625h-4.01132812c-.253125 0-.45703125.23554688-.45703125.52734375v10.06171875c0 .2917969.20390625.5273437.45703125.5273437h4.01132812c.34101563 0 .61523438.3199219.61523438.7101563s-.27773438.7171875-.61523438.7171875z\\\"/>\\n\\t\\t</g>\\n\\t</svg>\\n\";\nvar balanceIcon = \"\\n\\t<svg height=\\\"18\\\" viewBox=\\\"0 0 429 695\\\" width=\\\"18\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n\\t\\t<g fill=\\\"currentColor\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"m0 394 213 126.228516 214-126.228516-214 301z\\\"/>\\n\\t\\t\\t<path d=\\\"m0 353.962264 213.5-353.962264 213.5 353.962264-213.5 126.037736z\\\"/>\\n\\t\\t</g>\\n\\t</svg>\\n\";\nvar msgStyles = \"\\n  display: block;\\n  font-size: 0.889em;\\n  font-family: inherit;\\n  color: inherit;\\n  margin-top: 0.5rem;\\n\";\n\nfunction accountSelect() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var heading = options.heading,\n      description = options.description,\n      icon = options.icon;\n  var completed = false;\n  var loadingAccounts = false;\n  var accountsAndBalances = [];\n\n  function checkModule(_x9) {\n    return _checkModule.apply(this, arguments);\n  }\n\n  function _checkModule() {\n    _checkModule = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(stateAndHelpers) {\n      var wallet, BigNumber, provider, type, _accounts, deleteWindowProperties, loadMoreAccounts, _accountSelect;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              wallet = stateAndHelpers.wallet, BigNumber = stateAndHelpers.BigNumber;\n              provider = wallet.provider, type = wallet.type;\n\n              if (!(type === 'hardware' && !completed && !provider.isCustomPath())) {\n                _context10.next = 18;\n                break;\n              }\n\n              if (!(accountsAndBalances.length === 0)) {\n                _context10.next = 12;\n                break;\n              }\n\n              loadingAccounts = true;\n              _context10.next = 7;\n              return provider.enable();\n\n            case 7:\n              _accounts = _context10.sent;\n              _context10.next = 10;\n              return provider.getBalances(_accounts);\n\n            case 10:\n              accountsAndBalances = _context10.sent;\n              loadingAccounts = false;\n\n            case 12:\n              deleteWindowProperties = function deleteWindowProperties() {\n                delete window.accountSelect;\n                delete window.loadMoreAccounts;\n              };\n\n              loadMoreAccounts = /*#__PURE__*/function () {\n                var _ref34 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          loadingAccounts = true;\n                          _context9.next = 3;\n                          return provider.getMoreAccounts();\n\n                        case 3:\n                          accountsAndBalances = _context9.sent;\n                          loadingAccounts = false;\n\n                        case 5:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function loadMoreAccounts() {\n                  return _ref34.apply(this, arguments);\n                };\n              }();\n\n              _accountSelect = function _accountSelect() {\n                var accountIndex = document.getElementById('account-select').selectedIndex;\n                provider.setPrimaryAccount(accountsAndBalances[accountIndex].address);\n              };\n\n              window.accountSelect = _accountSelect;\n              window.loadMoreAccounts = loadMoreAccounts;\n              return _context10.abrupt(\"return\", {\n                heading: heading || 'Select Account',\n                description: description || \"Please select which account you would like to use with this Dapp:\",\n                eventCode: 'accountSelect',\n                html: loadingAccounts ? \"<div class=\\\"bn-onboard-custom bn-onboard-loading\\\">\\n              <div class=\\\"bn-onboard-loading-first\\\"></div>\\n              <div class=\\\"bn-onboard-loading-second\\\"></div>\\n              <div class=\\\"bn-onboard-loading-third\\\"></div>\\n            </div>\\n            <span style=\\\"\".concat(msgStyles, \"\\\">Loading More Accounts...</span>\\n            \") : \"\\n          <div style=\\\"display: flex; align-items: center;\\\">\\n            <select id=\\\"account-select\\\" onchange=\\\"window.accountSelect();\\\" class=\\\"bn-onboard-custom bn-onboard-account-select>\\n              \".concat(accountsAndBalances.map(function (account) {\n                  return \"<option>\".concat(account.address, \" --- \").concat(account.balance != null ? new BigNumber(account.balance).div('1000000000000000000').toFixed(3) : '0', \" ETH</option>\");\n                }), \"\\n            </select>\\n            <button style=\\\"display: flex; align-items: center; text-align: center; height: 1.5rem; background: transparent; margin: 0 0.25rem; padding: 0 0.5rem; border-radius: 40px; cursor: pointer; color: inherit; border-color: inherit; border-width: 1px; border-style: solid;\\\" onclick=\\\"window.loadMoreAccounts()\\\">Load More</button>\\n          </div>\\n        \"),\n                button: {\n                  onclick: function onclick() {\n                    deleteWindowProperties();\n                    completed = true;\n                  },\n                  text: 'Done'\n                },\n                icon: icon || usbIcon\n              });\n\n            case 18:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _checkModule.apply(this, arguments);\n  }\n\n  checkModule.reset = function () {\n    completed = false;\n    accountsAndBalances = [];\n    loadingAccounts = false;\n  };\n\n  return checkModule;\n}\n\nvar accounts = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': accountSelect\n});\nvar derivationPaths = {\n  Ledger: [{\n    path: \"m/44'/60'/0'\",\n    label: 'Ethereum'\n  }, {\n    path: \"m/44'/60'\",\n    label: 'Ethereum Ledger Live'\n  }],\n  Trezor: [{\n    path: \"m/44'/60'/0'/0\",\n    label: 'Ethereum'\n  }],\n  Lattice: [{\n    path: \"m/44'/60'/0'/0\",\n    label: 'Ethereum'\n  }]\n};\nvar styles = \"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n\";\nvar baseStyles = \"\\n  background: inherit;\\n  font-size: 0.889em;\\n  font-family: inherit;\\n  border-width: 1px;\\n  border-style: solid;\\n  border-color: inherit;\\n  border-radius: 40px;\\n  margin-top: 0.5rem;\\n  padding: 0.55em 1.4em;\\n  text-align: center;\\n  color: inherit;\\n  font-family: inherit;\\n  transition: background 150ms ease-in-out;\\n  line-height: 1.15;\\n\";\nvar buttonStyles = \"\\n  cursor: pointer;\\n\";\nvar selectedStyles = \"\\n  border: 1px solid #4a90e2;\\n\";\nvar errorStyles = \"\\n  border: 1px solid #e2504a;\\n\";\nvar msgStyles$1 = \"\\n  display: block;\\n  font-size: 0.889em;\\n  font-family: inherit;\\n  color: inherit;\\n  margin-top: 0.5rem;\\n\";\nvar errorMsgStyles = \"\\n  color: #e2504a;\\n\";\n\nfunction derivationPath() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var heading = options.heading,\n      description = options.description,\n      icon = options.icon;\n  var state = {\n    completed: false,\n    showCustomInput: false,\n    dPath: '',\n    loading: false,\n    error: ''\n  };\n\n  var customInputHtmlString = function customInputHtmlString(error) {\n    return \"\\n      <input \\n        id=\\\"custom-derivation-input\\\" \\n        style=\\\"\".concat(baseStyles + selectedStyles + (error ? errorStyles : ''), \"\\\" \\n        type=\\\"text\\\" \\n        value=\\\"\").concat(state.dPath, \"\\\"\\n        placeholder=\\\"custom derivation path\\\" \\n        onchange=\\\"window.handleCustomInput(this.value)\\\" />\\n      \");\n  };\n\n  function derivationSelectHtmlString(walletName) {\n    return \"\\n      <div id=\\\"derivation-select\\\" style=\\\"\".concat(styles, \"\\\">\\n        \").concat(derivationPaths[walletName].map(function (derivation) {\n      var path = derivation.path,\n          label = derivation.label;\n      return \"\\n              <button style=\\\"\".concat(baseStyles + buttonStyles + (state.dPath === path && !state.showCustomInput ? selectedStyles : ''), \"\\\" onclick=\\\"window.handleDerivationClick(this)\\\" data-path=\\\"\").concat(path, \"\\\">\\n                \").concat(label, \" - \").concat(path, \"\\n              </button>\\n            \");\n    }).join(' '), \"\\n        \").concat(state.showCustomInput ? customInputHtmlString(state.error) : \"<button style=\\\"\".concat(baseStyles + buttonStyles, \"\\\" onclick=\\\"window.handleDerivationClick(this)\\\" data-path=\\\"custom\\\">Custom Path</button>\"), \"\\n        \").concat(state.loading ? \"<div class=\\\"bn-onboard-custom bn-onboard-loading\\\" style=\\\"margin-top: 1rem;\\\">\\n                <div class=\\\"bn-onboard-loading-first\\\"></div>\\n                <div class=\\\"bn-onboard-loading-second\\\"></div>\\n                <div class=\\\"bn-onboard-loading-third\\\"></div>\\n              </div>\\n              <span style=\\\"\".concat(msgStyles$1, \"\\\">Loading Accounts...</span>\\n              \") : state.error ? \"<span style=\\\"\".concat(msgStyles$1 + errorMsgStyles, \"\\\">\").concat(state.error, \"</span>\") : '', \"\\n      </div>\\n    \");\n  }\n\n  function resetState() {\n    state.completed = false;\n    state.showCustomInput = false;\n    state.dPath = '';\n    state.loading = false;\n    state.error = '';\n  }\n\n  function checkModule(stateAndHelpers) {\n    var wallet = stateAndHelpers.wallet;\n\n    if (wallet && wallet.type === 'hardware' && !state.completed) {\n      var handleCustomInput = function handleCustomInput() {\n        var input = document.getElementById('custom-derivation-input');\n        state.dPath = input && input.value;\n        state.error = '';\n      };\n\n      var handleDerivationClick = function handleDerivationClick(button) {\n        var selectedPath = button.dataset.path;\n\n        if (selectedPath === 'custom') {\n          state.showCustomInput = true;\n          setTimeout(function () {\n            var input = document.getElementById('custom-derivation-input');\n            input && input.focus();\n          }, 100);\n        } else {\n          state.error = '';\n          state.showCustomInput = false;\n          state.dPath = selectedPath;\n        }\n      };\n\n      var deleteWindowProperties = function deleteWindowProperties() {\n        delete window.handleCustomInput;\n        delete window.handleDerivationSelect;\n      };\n\n      window.handleCustomInput = handleCustomInput;\n      window.handleDerivationClick = handleDerivationClick;\n      return {\n        heading: heading || 'Hardware Wallet Connect',\n        description: description || \"Make sure your \".concat(wallet.name, \" is plugged in, \").concat(wallet.name === 'Ledger' ? 'and the Ethereum app is open, ' : '', \"then select a derivation path to connect your accounts:\"),\n        eventCode: 'derivationPath',\n        html: derivationSelectHtmlString(wallet.name),\n        button: {\n          text: 'Connect',\n          onclick: function () {\n            var _onclick = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n              var path, validPath;\n              return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      state.loading = true;\n                      path = state.dPath || derivationPaths[wallet.name][0].path;\n                      _context11.prev = 2;\n                      _context11.next = 5;\n                      return wallet.provider.setPath(path, state.showCustomInput);\n\n                    case 5:\n                      validPath = _context11.sent;\n\n                      if (validPath) {\n                        _context11.next = 10;\n                        break;\n                      }\n\n                      state.error = \"\".concat(path, \" is not a valid derivation path\");\n                      state.loading = false;\n                      return _context11.abrupt(\"return\");\n\n                    case 10:\n                      _context11.next = 17;\n                      break;\n\n                    case 12:\n                      _context11.prev = 12;\n                      _context11.t0 = _context11[\"catch\"](2);\n                      state.error = _context11.t0;\n                      state.loading = false;\n                      return _context11.abrupt(\"return\");\n\n                    case 17:\n                      state.error = '';\n\n                      if (wallet.connect) {\n                        wallet.connect().then(function () {\n                          deleteWindowProperties();\n                          state.loading = false;\n                          state.completed = true;\n                        })[\"catch\"](function (error) {\n                          state.error = error.message;\n                          state.loading = false;\n                        });\n                      }\n\n                    case 19:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11, null, [[2, 12]]);\n            }));\n\n            function onclick() {\n              return _onclick.apply(this, arguments);\n            }\n\n            return onclick;\n          }()\n        },\n        icon: icon || usbIcon\n      };\n    }\n  }\n\n  checkModule.reset = resetState;\n  return checkModule;\n}\n\nvar derivationPath$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': derivationPath\n});\n/* src/views/Onboard.svelte generated by Svelte v3.24.0 */\n\nfunction add_css$b() {\n  var style = element(\"style\");\n  style.id = \"svelte-1yxy612-style\";\n  style.textContent = \".bn-onboard-custom.bn-onboard-dark-mode{background:#283944;color:#ffffff}.bn-onboard-custom.bn-onboard-dark-mode-background-hover:hover, .bn-onboard-custom.bn-onboard-dark-mode-background{background:#0e212a}.bn-onboard-clickable{text-decoration:none}.bn-onboard-clickable:hover{cursor:pointer;text-decoration:underline}.bn-onboard-custom.bn-onboard-dark-mode-link{color:#91bced;border-color:#91bced}.bn-onboard-wallet-check-section select{padding:0.5rem}\";\n  append(document.head, style);\n} // (40:0) {#if $app.walletSelectInProgress}\n\n\nfunction create_if_block_2$3(ctx) {\n  var walletselect;\n  var current;\n  walletselect = new WalletSelect({\n    props: {\n      module:\n      /*walletSelectModule*/\n      ctx[0]\n    }\n  });\n  return {\n    c: function c() {\n      create_component(walletselect.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(walletselect, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var walletselect_changes = {};\n      if (dirty &\n      /*walletSelectModule*/\n      1) walletselect_changes.module =\n      /*walletSelectModule*/\n      ctx[0];\n      walletselect.$set(walletselect_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(walletselect.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(walletselect.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(walletselect, detaching);\n    }\n  };\n} // (44:0) {#if $app.walletCheckInProgress}\n\n\nfunction create_if_block_1$5(ctx) {\n  var walletcheck;\n  var current;\n  walletcheck = new WalletCheck({\n    props: {\n      walletSelect:\n      /*walletSelect*/\n      ctx[1]\n    }\n  });\n  return {\n    c: function c() {\n      create_component(walletcheck.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(walletcheck, target, anchor);\n      current = true;\n    },\n    p: function p(ctx, dirty) {\n      var walletcheck_changes = {};\n      if (dirty &\n      /*walletSelect*/\n      2) walletcheck_changes.walletSelect =\n      /*walletSelect*/\n      ctx[1];\n      walletcheck.$set(walletcheck_changes);\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(walletcheck.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(walletcheck.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(walletcheck, detaching);\n    }\n  };\n} // (48:0) {#if $app.accountSelectInProgress}\n\n\nfunction create_if_block$9(ctx) {\n  var walletcheck;\n  var current;\n  walletcheck = new WalletCheck({\n    props: {\n      modules: [derivationPath(), accountSelect()]\n    }\n  });\n  return {\n    c: function c() {\n      create_component(walletcheck.$$.fragment);\n    },\n    m: function m(target, anchor) {\n      mount_component(walletcheck, target, anchor);\n      current = true;\n    },\n    p: noop,\n    i: function i(local) {\n      if (current) return;\n      transition_in(walletcheck.$$.fragment, local);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(walletcheck.$$.fragment, local);\n      current = false;\n    },\n    d: function d(detaching) {\n      destroy_component(walletcheck, detaching);\n    }\n  };\n}\n\nfunction create_fragment$b(ctx) {\n  var t0;\n  var t1;\n  var if_block2_anchor;\n  var current;\n  var if_block0 =\n  /*$app*/\n  ctx[2].walletSelectInProgress && create_if_block_2$3(ctx);\n  var if_block1 =\n  /*$app*/\n  ctx[2].walletCheckInProgress && create_if_block_1$5(ctx);\n  var if_block2 =\n  /*$app*/\n  ctx[2].accountSelectInProgress && create_if_block$9();\n  return {\n    c: function c() {\n      if (if_block0) if_block0.c();\n      t0 = space();\n      if (if_block1) if_block1.c();\n      t1 = space();\n      if (if_block2) if_block2.c();\n      if_block2_anchor = empty();\n    },\n    m: function m(target, anchor) {\n      if (if_block0) if_block0.m(target, anchor);\n      insert(target, t0, anchor);\n      if (if_block1) if_block1.m(target, anchor);\n      insert(target, t1, anchor);\n      if (if_block2) if_block2.m(target, anchor);\n      insert(target, if_block2_anchor, anchor);\n      current = true;\n    },\n    p: function p(ctx, _ref35) {\n      var _ref36 = _slicedToArray(_ref35, 1),\n          dirty = _ref36[0];\n\n      if (\n      /*$app*/\n      ctx[2].walletSelectInProgress) {\n        if (if_block0) {\n          if_block0.p(ctx, dirty);\n\n          if (dirty &\n          /*$app*/\n          4) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_2$3(ctx);\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(t0.parentNode, t0);\n        }\n      } else if (if_block0) {\n        group_outros();\n        transition_out(if_block0, 1, 1, function () {\n          if_block0 = null;\n        });\n        check_outros();\n      }\n\n      if (\n      /*$app*/\n      ctx[2].walletCheckInProgress) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n\n          if (dirty &\n          /*$app*/\n          4) {\n            transition_in(if_block1, 1);\n          }\n        } else {\n          if_block1 = create_if_block_1$5(ctx);\n          if_block1.c();\n          transition_in(if_block1, 1);\n          if_block1.m(t1.parentNode, t1);\n        }\n      } else if (if_block1) {\n        group_outros();\n        transition_out(if_block1, 1, 1, function () {\n          if_block1 = null;\n        });\n        check_outros();\n      }\n\n      if (\n      /*$app*/\n      ctx[2].accountSelectInProgress) {\n        if (if_block2) {\n          if_block2.p(ctx, dirty);\n\n          if (dirty &\n          /*$app*/\n          4) {\n            transition_in(if_block2, 1);\n          }\n        } else {\n          if_block2 = create_if_block$9();\n          if_block2.c();\n          transition_in(if_block2, 1);\n          if_block2.m(if_block2_anchor.parentNode, if_block2_anchor);\n        }\n      } else if (if_block2) {\n        group_outros();\n        transition_out(if_block2, 1, 1, function () {\n          if_block2 = null;\n        });\n        check_outros();\n      }\n    },\n    i: function i(local) {\n      if (current) return;\n      transition_in(if_block0);\n      transition_in(if_block1);\n      transition_in(if_block2);\n      current = true;\n    },\n    o: function o(local) {\n      transition_out(if_block0);\n      transition_out(if_block1);\n      transition_out(if_block2);\n      current = false;\n    },\n    d: function d(detaching) {\n      if (if_block0) if_block0.d(detaching);\n      if (detaching) detach(t0);\n      if (if_block1) if_block1.d(detaching);\n      if (detaching) detach(t1);\n      if (if_block2) if_block2.d(detaching);\n      if (detaching) detach(if_block2_anchor);\n    }\n  };\n}\n\nfunction instance$b($$self, $$props, $$invalidate) {\n  var $app;\n  component_subscribe($$self, app, function ($$value) {\n    return $$invalidate(2, $app = $$value);\n  });\n  var walletSelectModule = $$props.walletSelectModule;\n  var walletSelect = $$props.walletSelect;\n\n  $$self.$set = function ($$props) {\n    if (\"walletSelectModule\" in $$props) $$invalidate(0, walletSelectModule = $$props.walletSelectModule);\n    if (\"walletSelect\" in $$props) $$invalidate(1, walletSelect = $$props.walletSelect);\n  };\n\n  return [walletSelectModule, walletSelect, $app];\n}\n\nvar Onboard = /*#__PURE__*/function (_SvelteComponent12) {\n  _inherits(Onboard, _SvelteComponent12);\n\n  var _super12 = _createSuper(Onboard);\n\n  function Onboard(options) {\n    var _this12;\n\n    _classCallCheck(this, Onboard);\n\n    _this12 = _super12.call(this);\n    if (!document.getElementById(\"svelte-1yxy612-style\")) add_css$b();\n    init(_assertThisInitialized(_this12), options, instance$b, create_fragment$b, safe_not_equal, {\n      walletSelectModule: 0,\n      walletSelect: 1\n    });\n    return _this12;\n  }\n\n  return Onboard;\n}(SvelteComponent);\n\nvar version = \"1.16.0\"; // wallets that qualify for default wallets need to have no\n// init parameters that are required for full functionality\n\nvar defaultWalletNames = ['web3Wallet', 'metamask', 'dapper', 'coinbase', 'trust', 'authereum', 'torus', 'opera', 'operaTouch', 'status', 'hyperpay', 'unilogin', 'tokenpocket', 'dcent'];\n\nfunction select(wallets, networkId) {\n  if (wallets) {\n    return Promise.all(wallets.map(function (wallet) {\n      if (isWalletInit(wallet)) {\n        var walletName = wallet.walletName,\n            initParams = _objectWithoutProperties(wallet, [\"walletName\"]);\n\n        var module = getModule(walletName);\n\n        if (!module) {\n          throw new Error(\"\".concat(walletName, \" is not a valid walletName.\"));\n        }\n\n        return module && module.then(function (m) {\n          return m[\"default\"](_objectSpread(_objectSpread({}, initParams), {}, {\n            networkId: networkId\n          }));\n        });\n      }\n\n      return Promise.resolve(wallet);\n    }));\n  }\n\n  return Promise.all(defaultWalletNames.map(function (walletName) {\n    var module = getModule(walletName);\n\n    if (module) {\n      return module.then(function (m) {\n        return m[\"default\"]({\n          networkId: networkId\n        });\n      });\n    }\n  }));\n}\n\nfunction getModule(name) {\n  switch (name) {\n    case 'meetone':\n      return __webpack_require__.e(/*! import() */ 19).then(__webpack_require__.bind(null, /*! ./meetone-498d5b39.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/meetone-498d5b39.js\"));\n\n    case 'metamask':\n      return __webpack_require__.e(/*! import() */ 20).then(__webpack_require__.bind(null, /*! ./metamask-df918ac9.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/metamask-df918ac9.js\"));\n\n    case 'dapper':\n      return __webpack_require__.e(/*! import() */ 14).then(__webpack_require__.bind(null, /*! ./dapper-be95b0e6.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/dapper-be95b0e6.js\"));\n\n    case 'portis':\n      return __webpack_require__.e(/*! import() */ 37).then(__webpack_require__.bind(null, /*! ./portis-cbb53753.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/portis-cbb53753.js\"));\n\n    case 'fortmatic':\n      return __webpack_require__.e(/*! import() */ 33).then(__webpack_require__.bind(null, /*! ./fortmatic-225507d1.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/fortmatic-225507d1.js\"));\n\n    case 'squarelink':\n      return __webpack_require__.e(/*! import() */ 38).then(__webpack_require__.bind(null, /*! ./squarelink-150a9d83.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/squarelink-150a9d83.js\"));\n\n    case 'authereum':\n      return __webpack_require__.e(/*! import() */ 30).then(__webpack_require__.bind(null, /*! ./authereum-57ae3381.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/authereum-57ae3381.js\"));\n\n    case 'trust':\n      return __webpack_require__.e(/*! import() */ 26).then(__webpack_require__.bind(null, /*! ./trust-67e47ffa.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/trust-67e47ffa.js\"));\n\n    case 'coinbase':\n      return __webpack_require__.e(/*! import() */ 13).then(__webpack_require__.bind(null, /*! ./coinbase-c0bb4449.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/coinbase-c0bb4449.js\"));\n\n    case 'walletConnect':\n      return __webpack_require__.e(/*! import() */ 42).then(__webpack_require__.bind(null, /*! ./wallet-connect-74bfa317.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/wallet-connect-74bfa317.js\"));\n\n    case 'opera':\n      return __webpack_require__.e(/*! import() */ 22).then(__webpack_require__.bind(null, /*! ./opera-c8be8526.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/opera-c8be8526.js\"));\n\n    case 'operaTouch':\n      return __webpack_require__.e(/*! import() */ 23).then(__webpack_require__.bind(null, /*! ./opera-touch-36d44122.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/opera-touch-36d44122.js\"));\n\n    case 'torus':\n      return __webpack_require__.e(/*! import() */ 39).then(__webpack_require__.bind(null, /*! ./torus-0dbcded9.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/torus-0dbcded9.js\"));\n\n    case 'status':\n      return __webpack_require__.e(/*! import() */ 24).then(__webpack_require__.bind(null, /*! ./status-17aacc06.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/status-17aacc06.js\"));\n\n    case 'trezor':\n      return __webpack_require__.e(/*! import() */ 40).then(__webpack_require__.bind(null, /*! ./trezor-05345fcc.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/trezor-05345fcc.js\"));\n\n    case 'lattice':\n      return __webpack_require__.e(/*! import() */ 34).then(__webpack_require__.bind(null, /*! ./lattice-63e72a8f.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/lattice-63e72a8f.js\"));\n\n    case 'ledger':\n      return __webpack_require__.e(/*! import() */ 35).then(__webpack_require__.bind(null, /*! ./ledger-71657cc6.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/ledger-71657cc6.js\"));\n\n    case 'walletLink':\n      return __webpack_require__.e(/*! import() */ 28).then(__webpack_require__.bind(null, /*! ./wallet-link-a4e44053.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/wallet-link-a4e44053.js\"));\n\n    case 'imToken':\n      return __webpack_require__.e(/*! import() */ 18).then(__webpack_require__.bind(null, /*! ./imtoken-df621d5a.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/imtoken-df621d5a.js\"));\n\n    case 'unilogin':\n      return __webpack_require__.e(/*! import() */ 41).then(__webpack_require__.bind(null, /*! ./unilogin-fc5d8386.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/unilogin-fc5d8386.js\"));\n\n    case 'mykey':\n      return __webpack_require__.e(/*! import() */ 21).then(__webpack_require__.bind(null, /*! ./mykey-f9a238ed.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/mykey-f9a238ed.js\"));\n\n    case 'web3Wallet':\n      return __webpack_require__.e(/*! import() */ 43).then(__webpack_require__.bind(null, /*! ./web3Wallet-c61c4963.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/web3Wallet-c61c4963.js\"));\n\n    case 'huobiwallet':\n      return __webpack_require__.e(/*! import() */ 16).then(__webpack_require__.bind(null, /*! ./huobiwallet-119ccc28.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/huobiwallet-119ccc28.js\"));\n\n    case 'wallet.io':\n      return __webpack_require__.e(/*! import() */ 27).then(__webpack_require__.bind(null, /*! ./wallet-io-ad35ae77.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/wallet-io-ad35ae77.js\"));\n\n    case 'hyperpay':\n      return __webpack_require__.e(/*! import() */ 17).then(__webpack_require__.bind(null, /*! ./hyperpay-da3865b4.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/hyperpay-da3865b4.js\"));\n\n    case 'tokenpocket':\n      return __webpack_require__.e(/*! import() */ 25).then(__webpack_require__.bind(null, /*! ./tokenpocket-6fce6bc5.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/tokenpocket-6fce6bc5.js\"));\n\n    case 'dcent':\n      return __webpack_require__.e(/*! import() */ 15).then(__webpack_require__.bind(null, /*! ./dcent-eb76b95d.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/dcent-eb76b95d.js\"));\n\n    default:\n      return;\n  }\n}\n\nvar defaultChecks = ['connect', 'network'];\n\nfunction check(_x10, _x11) {\n  return _check.apply(this, arguments);\n}\n\nfunction _check() {\n  _check = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(walletChecks, networkId) {\n    var checks;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (!walletChecks) {\n              _context12.next = 3;\n              break;\n            }\n\n            checks = walletChecks.map(function (checkOrModule) {\n              if (!isWalletCheckModule(checkOrModule)) {\n                var checkName = checkOrModule.checkName,\n                    otherParams = _objectWithoutProperties(checkOrModule, [\"checkName\"]);\n\n                var module = getModule$1(checkName);\n                return module && module.then(function (m) {\n                  return m[\"default\"](_objectSpread(_objectSpread({}, otherParams), {}, {\n                    networkId: networkId\n                  }));\n                });\n              }\n\n              return Promise.resolve(checkOrModule);\n            });\n            return _context12.abrupt(\"return\", Promise.all(checks));\n\n          case 3:\n            return _context12.abrupt(\"return\", Promise.all(defaultChecks.map(function (checkName) {\n              var module = getModule$1(checkName);\n              return module && module.then(function (m) {\n                return m[\"default\"]({\n                  networkId: networkId\n                });\n              });\n            })));\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _check.apply(this, arguments);\n}\n\nfunction getModule$1(name) {\n  switch (name) {\n    case 'connect':\n      return __webpack_require__.e(/*! import() */ 32).then(__webpack_require__.bind(null, /*! ./connect-42f86a38.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/connect-42f86a38.js\"));\n\n    case 'network':\n      return __webpack_require__.e(/*! import() */ 36).then(__webpack_require__.bind(null, /*! ./network-2c6412a5.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/network-2c6412a5.js\"));\n\n    case 'balance':\n      return __webpack_require__.e(/*! import() */ 31).then(__webpack_require__.bind(null, /*! ./balance-37a9ab0e.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/balance-37a9ab0e.js\"));\n\n    case 'accounts':\n      return Promise.resolve().then(function () {\n        return accounts;\n      });\n\n    case 'derivationPath':\n      return Promise.resolve().then(function () {\n        return derivationPath$1;\n      });\n\n    default:\n      throw new Error(\"invalid module name: \".concat(name));\n  }\n}\n\nvar defaultHeading = 'Select a Wallet';\nvar defaultDescription = 'Please select a wallet to connect to this dapp:';\nvar defaultWalletExplanation = \"Wallets are used to send, receive, and store digital assets like Ether. Wallets come in many forms. They are either built into your browser, an extension added to your browser, a piece of hardware plugged into your computer or even an app on your phone. For more information about wallets, see <a style=\\\"color: #4a90e2; font-size: 0.889rem; font-family: inherit;\\\" class=\\\"bn-onboard-clickable\\\" href=\\\"https://docs.ethhub.io/using-ethereum/wallets/intro-to-ethereum-wallets/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">this explanation</a>.\";\n\nfunction initializeModules(networkId, walletSelect, walletCheck) {\n  var wallets = select(walletSelect && walletSelect.wallets, networkId);\n  return {\n    walletSelect: {\n      heading: walletSelect && walletSelect.heading || defaultHeading,\n      description: walletSelect && walletSelect.description || defaultDescription,\n      wallets: wallets,\n      explanation: walletSelect && walletSelect.explanation || defaultWalletExplanation\n    },\n    walletCheck: check(walletCheck, networkId)\n  };\n}\n\nvar onboard;\n\nfunction init$1(initialization) {\n  if (onboard) {\n    console.warn('onboard has already been initialized');\n    onboard.$destroy();\n  }\n\n  validateInit(initialization);\n  var subscriptions = initialization.subscriptions,\n      dappId = initialization.dappId,\n      networkId = initialization.networkId,\n      darkMode = initialization.darkMode,\n      apiUrl = initialization.apiUrl,\n      hideBranding = initialization.hideBranding;\n\n  var _getDeviceInfo = getDeviceInfo(),\n      os = _getDeviceInfo.os,\n      browser = _getDeviceInfo.browser,\n      isMobile = _getDeviceInfo.isMobile;\n\n  var initializedModules = initializeModules(networkId, initialization.walletSelect, initialization.walletCheck);\n  var displayBranding;\n\n  if (dappId) {\n    if (hideBranding !== false) {\n      displayBranding = false;\n    } else {\n      displayBranding = true;\n    }\n  } else {\n    if (hideBranding !== true) {\n      displayBranding = true;\n    } else {\n      displayBranding = false;\n    }\n  }\n\n  app.update(function (store) {\n    return _objectSpread(_objectSpread({}, store), {}, {\n      dappId: dappId,\n      networkId: networkId,\n      version: version,\n      mobileDevice: isMobile,\n      os: os,\n      browser: browser,\n      darkMode: darkMode,\n      displayBranding: displayBranding,\n      checkModules: initializedModules.walletCheck\n    });\n  });\n  initializeStores();\n\n  if (dappId) {\n    initializeBlocknative(dappId, networkId, apiUrl);\n  }\n\n  onboard = new Onboard({\n    target: document.body,\n    props: {\n      walletSelectModule: initializedModules.walletSelect,\n      walletSelect: walletSelect\n    }\n  }); // register subscriptions\n\n  if (subscriptions) {\n    if (subscriptions.address) {\n      address.subscribe(function (address) {\n        if (address !== null) {\n          subscriptions.address && subscriptions.address(address);\n        }\n      });\n    }\n\n    if (subscriptions.network) {\n      network.subscribe(function (networkId) {\n        if (networkId !== null) {\n          subscriptions.network && subscriptions.network(networkId);\n        }\n      });\n    }\n\n    if (subscriptions.balance) {\n      balance.subscribe(function (balance) {\n        if (balance !== null) {\n          subscriptions.balance && subscriptions.balance(balance);\n        }\n      });\n    }\n\n    if (subscriptions.wallet) {\n      wallet.subscribe(function (wallet) {\n        if (wallet.provider !== null) {\n          subscriptions.wallet && subscriptions.wallet(wallet);\n        }\n      });\n    }\n  }\n\n  function walletSelect(autoSelectWallet) {\n    return new Promise(function (resolve) {\n      app.update(function (store) {\n        return _objectSpread(_objectSpread({}, store), {}, {\n          walletSelectInProgress: true,\n          autoSelectWallet: typeof autoSelectWallet === 'string' && autoSelectWallet\n        });\n      });\n      var appUnsubscribe = app.subscribe(function (store) {\n        var walletSelectInProgress = store.walletSelectInProgress,\n            walletSelectCompleted = store.walletSelectCompleted,\n            walletSelectDisplayedUI = store.walletSelectDisplayedUI;\n\n        if (walletSelectInProgress === false) {\n          appUnsubscribe(); // timeout for UI transitions if it was displayed\n\n          walletSelectDisplayedUI ? setTimeout(function () {\n            resolve(walletSelectCompleted);\n            app.update(function (store) {\n              return _objectSpread(_objectSpread({}, store), {}, {\n                displayedUI: false\n              });\n            });\n          }, 500) : resolve(walletSelectCompleted);\n        }\n      });\n    });\n  }\n\n  function walletCheck() {\n    return new Promise(function (resolve) {\n      if (!get_store_value(walletInterface)) {\n        throw new Error('walletSelect must be called before walletCheck');\n      }\n\n      app.update(function (store) {\n        return _objectSpread(_objectSpread({}, store), {}, {\n          walletCheckInProgress: true\n        });\n      });\n      var appUnsubscribe = app.subscribe(function (store) {\n        var walletCheckInProgress = store.walletCheckInProgress,\n            walletCheckCompleted = store.walletCheckCompleted,\n            walletCheckDisplayedUI = store.walletCheckDisplayedUI;\n\n        if (walletCheckInProgress === false) {\n          appUnsubscribe();\n          walletCheckDisplayedUI ? setTimeout(function () {\n            resolve(walletCheckCompleted);\n            app.update(function (store) {\n              return _objectSpread(_objectSpread({}, store), {}, {\n                displayedUI: false\n              });\n            });\n          }, 500) : resolve(walletCheckCompleted);\n        }\n      });\n    });\n  }\n\n  function walletReset() {\n    resetWalletState();\n  }\n\n  function accountSelect() {\n    return new Promise(function (resolve) {\n      var _get_store_value4 = get_store_value(wallet),\n          type = _get_store_value4.type;\n\n      if (type !== 'hardware') {\n        resolve(false);\n      }\n\n      app.update(function (store) {\n        return _objectSpread(_objectSpread({}, store), {}, {\n          accountSelectInProgress: true\n        });\n      });\n      var appUnsubscribe = app.subscribe(function (store) {\n        var accountSelectInProgress = store.accountSelectInProgress,\n            walletSelectDisplayedUI = store.walletSelectDisplayedUI;\n\n        if (accountSelectInProgress === false) {\n          appUnsubscribe();\n          walletSelectDisplayedUI ? setTimeout(function () {\n            resolve(true);\n            app.update(function (store) {\n              return _objectSpread(_objectSpread({}, store), {}, {\n                displayedUI: false\n              });\n            });\n          }, 500) : resolve(true);\n        }\n      });\n    });\n  }\n\n  function config(options) {\n    validateConfig(options);\n    app.update(function (store) {\n      return _objectSpread(_objectSpread({}, store), options);\n    });\n  }\n\n  function getState() {\n    return get_store_value(state);\n  }\n\n  return {\n    walletSelect: walletSelect,\n    walletCheck: walletCheck,\n    walletReset: walletReset,\n    config: config,\n    getState: getState,\n    accountSelect: accountSelect\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard-197ee608.js\n");

/***/ }),

/***/ "./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/@pooltogether/bnc-onboard/node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _onboard_197ee608_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onboard-197ee608.js */ \"./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard-197ee608.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _onboard_197ee608_js__WEBPACK_IMPORTED_MODULE_1__[\"i\"]; });\n\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var bnc_sdk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bnc-sdk */ \"./node_modules/bnc-sdk/dist/esm/index.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! bowser */ \"./node_modules/bowser/es5.js\");\n/* harmony import */ var bowser__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(bowser__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bwb29sdG9nZXRoZXIvYm5jLW9uYm9hcmQvZGlzdC9lc20vb25ib2FyZC5qcz80MjA2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBcUM7QUFDZ0I7QUFDL0I7QUFDTCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AcG9vbHRvZ2V0aGVyL2JuYy1vbmJvYXJkL2Rpc3QvZXNtL29uYm9hcmQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSc7XG5leHBvcnQgeyBpIGFzIGRlZmF1bHQgfSBmcm9tICcuL29uYm9hcmQtMTk3ZWU2MDguanMnO1xuaW1wb3J0ICdiaWdudW1iZXIuanMnO1xuaW1wb3J0ICdibmMtc2RrJztcbmltcG9ydCAnYm93c2VyJzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@pooltogether/bnc-onboard/dist/esm/onboard.js\n");

/***/ }),

/***/ "./node_modules/@pooltogether/bnc-onboard/node_modules/regenerator-runtime/runtime.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@pooltogether/bnc-onboard/node_modules/regenerator-runtime/runtime.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : undefined\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@pooltogether/bnc-onboard/node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/bignumber.js/bignumber.js":
/*!************************************************!*\
  !*** ./node_modules/bignumber.js/bignumber.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;;(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else {}\r\n})(this);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bignumber.js/bignumber.js\n");

/***/ }),

/***/ "./node_modules/bnc-sdk/dist/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/bnc-sdk/dist/esm/index.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sturdy_websocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sturdy-websocket */ \"./node_modules/sturdy-websocket/dist/index.js\");\n/* harmony import */ var sturdy_websocket__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sturdy_websocket__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var crypto_es__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-es */ \"./node_modules/crypto-es/lib/index.js\");\n\n\nconst networks = {\n  bitcoin: {\n    '1': 'main',\n    '2': 'testnet'\n  },\n  ethereum: {\n    '1': 'main',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '5': 'goerli',\n    '42': 'kovan',\n    '100': 'xdai'\n  }\n};\nconst DEFAULT_RATE_LIMIT_RULES = {\n  points: 150,\n  duration: 1\n};\nconst QUEUE_LIMIT = 10000;\n\nfunction createEmitter() {\n  return {\n    listeners: {},\n    on: function (eventCode, listener) {\n      // check if valid eventCode\n      switch (eventCode) {\n        case 'txSent':\n        case 'txPool':\n        case 'txConfirmed':\n        case 'txSpeedUp':\n        case 'txCancel':\n        case 'txFailed':\n        case 'all':\n          break;\n\n        default:\n          throw new Error(`${eventCode} is not a valid event code, for a list of valid event codes see: https://github.com/blocknative/sdk`);\n      } // check that listener is a function\n\n\n      if (typeof listener !== 'function') {\n        throw new Error('Listener must be a function');\n      } // add listener for the eventCode\n\n\n      this.listeners[eventCode] = listener;\n    },\n    emit: function (state) {\n      if (this.listeners[state.eventCode]) {\n        return this.listeners[state.eventCode](state);\n      }\n\n      if (this.listeners.all) {\n        return this.listeners.all(state);\n      }\n    }\n  };\n}\n\nfunction networkName(blockchain, id) {\n  return networks[blockchain][id];\n}\n\nfunction serverEcho(eventCode) {\n  switch (eventCode) {\n    case 'txRequest':\n    case 'nsfFail':\n    case 'txRepeat':\n    case 'txAwaitingApproval':\n    case 'txConfirmReminder':\n    case 'txSendFail':\n    case 'txError':\n    case 'txUnderPriced':\n    case 'txSent':\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction last(arr) {\n  return arr.reverse()[0];\n} // isAddress and isTxid are not meant to perform real validation,\n// just needs to work out if it is an address or a transaction id\n// the server will do more thorough validation\n\n\nfunction isAddress(blockchain, addressOrHash) {\n  switch (blockchain) {\n    case 'ethereum':\n      return addressOrHash.length === 42;\n\n    case 'bitcoin':\n      return addressOrHash.length !== 64;\n\n    default:\n      return false;\n  }\n}\n\nfunction isTxid(blockchain, addressOrHash) {\n  switch (blockchain) {\n    case 'ethereum':\n      return addressOrHash.length === 66;\n\n    case 'bitcoin':\n      return addressOrHash.length === 64;\n\n    default:\n      return false;\n  }\n}\n\nfunction wait(time) {\n  return new Promise(resolve => {\n    setTimeout(resolve, time);\n  });\n}\n\nfunction transaction(hash, id) {\n  if (this._destroyed) throw new Error('The WebSocket instance has been destroyed, re-initialize to continue making requests.'); // create startTime for transaction\n\n  const startTime = Date.now(); // create emitter for transaction\n\n  const emitter = createEmitter(); // create eventCode for transaction\n\n  const eventCode = 'txSent'; // put in queue\n\n  this._watchedTransactions.push({\n    hash,\n    emitter\n  });\n\n  const transaction = {\n    [this._system === 'ethereum' ? 'hash' : 'txid']: hash,\n    id: id || hash,\n    startTime,\n    status: 'sent'\n  };\n  const newState = { ...transaction,\n    eventCode\n  }; // logEvent to server\n\n  this._sendMessage({\n    eventCode,\n    categoryCode: 'activeTransaction',\n    transaction\n  });\n\n  const transactionObj = {\n    details: transaction,\n    emitter\n  };\n\n  function emitState() {\n    const emitterResult = emitter.emit(newState);\n\n    this._transactionHandlers.forEach(handler => handler({\n      transaction: newState,\n      emitterResult\n    }));\n  } // emit after delay to allow for listener to be registered\n\n\n  setTimeout(emitState.bind(this), 5);\n  return transactionObj;\n}\n\nfunction account(address) {\n  if (this._destroyed) throw new Error('The WebSocket instance has been destroyed, re-initialize to continue making requests.'); // lowercase the address if Ethereum\n\n  address = this._system === 'ethereum' ? address.toLowerCase() : address; // create emitter for transaction\n\n  const emitter = createEmitter(); // create eventCode for transaction\n\n  const eventCode = 'watch';\n\n  const existingAddressWatcher = this._watchedAccounts.find(ac => ac.address === address);\n\n  if (existingAddressWatcher) {\n    // add to existing emitters array\n    existingAddressWatcher.emitters.push(emitter);\n  } else {\n    // put in accounts queue\n    this._watchedAccounts.push({\n      address,\n      emitters: [emitter]\n    });\n  } // logEvent to server\n\n\n  this._sendMessage({\n    eventCode,\n    categoryCode: 'accountAddress',\n    account: {\n      address\n    }\n  });\n\n  return {\n    emitter,\n    details: {\n      address\n    }\n  };\n}\n\nfunction event(eventObj) {\n  if (this._destroyed) throw new Error('The WebSocket instance has been destroyed, re-initialize to continue making requests.');\n\n  this._sendMessage(eventObj);\n}\n\nfunction unsubscribe(addressOrHash) {\n  if (this._destroyed) throw new Error('The WebSocket instance has been destroyed, re-initialize to continue making requests.');\n  const address = isAddress(this._system, addressOrHash);\n  const txid = isTxid(this._system, addressOrHash); // check if it is an address or a hash\n\n  if (address) {\n    const normalizedAddress = this._system === 'ethereum' ? addressOrHash.toLowerCase() : addressOrHash; // remove address from accounts\n\n    this._watchedAccounts = this._watchedAccounts.filter(ac => ac.address !== normalizedAddress); // logEvent to server\n\n    this._sendMessage({\n      categoryCode: 'accountAddress',\n      eventCode: 'unwatch',\n      account: {\n        address: normalizedAddress\n      }\n    });\n  } else if (txid) {\n    // remove transaction from transactions\n    this._watchedTransactions = this._watchedTransactions.filter(tx => tx.hash !== addressOrHash); // logEvent to server\n\n    this._sendMessage({\n      categoryCode: 'activeTransaction',\n      eventCode: 'unwatch',\n      transaction: {\n        [this._system === 'ethereum' ? 'hash' : 'txid']: addressOrHash,\n        id: addressOrHash,\n        status: 'unsubscribed'\n      }\n    });\n  } else {\n    throw new Error(`Error trying to unsubscribe ${addressOrHash}: not a valid address or transaction id/hash`);\n  }\n}\n\nvar version = \"2.1.5\";\n\nfunction sendMessage(msg) {\n  if (this._queuedMessages.length > QUEUE_LIMIT) {\n    throw new Error(`Queue limit of ${QUEUE_LIMIT} messages has been reached.`);\n  }\n\n  this._queuedMessages.push(createEventLog.bind(this)(msg));\n\n  if (!this._processingQueue) {\n    this._processQueue();\n  }\n}\n\nasync function processQueue() {\n  this._processingQueue = true;\n\n  if (!this._connected) {\n    await waitForConnectionOpen.bind(this)();\n  }\n\n  while (this._queuedMessages.length > 0) {\n    // small wait to allow response from server to take affect\n    await wait(1);\n\n    if (this._waitToRetry !== null) {\n      // have been rate limited so wait\n      await this._waitToRetry;\n      this._waitToRetry = null;\n    }\n\n    const msg = this._queuedMessages.shift();\n\n    const delay = this._limitRules.duration / this._limitRules.points * 1000;\n    await wait(delay);\n\n    this._socket.send(msg);\n  }\n\n  this._processingQueue = false;\n  this._limitRules = DEFAULT_RATE_LIMIT_RULES;\n}\n\nfunction handleMessage(msg) {\n  const {\n    status,\n    reason,\n    event,\n    connectionId,\n    retryMs,\n    limitRules,\n    blockedMsg\n  } = JSON.parse(msg.data);\n\n  if (connectionId) {\n    if (typeof window !== 'undefined') {\n      window.localStorage.setItem(this._storageKey, connectionId);\n    }\n\n    this._connectionId = connectionId;\n  } // handle any errors from the server\n\n\n  if (status === 'error') {\n    if (reason.includes('ratelimit')) {\n      this._waitToRetry = wait(retryMs);\n      this._limitRules = limitRules; // add blocked msg to the front of the queue\n\n      blockedMsg && this._queuedMessages.unshift(blockedMsg);\n      return;\n    }\n\n    if (reason.includes('not a valid API key')) {\n      if (this._onerror) {\n        this._onerror({\n          message: reason\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    }\n\n    if (reason.includes('network not supported')) {\n      if (this._onerror) {\n        this._onerror({\n          message: reason\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    }\n\n    if (reason.includes('maximum allowed amount')) {\n      if (this._onerror) {\n        this._onerror({\n          message: reason\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    } // handle bitcoin txid error\n\n\n    if (reason.includes('invalid txid')) {\n      const reason = `${event.transaction.txid} is an invalid txid`;\n\n      if (this._onerror) {\n        this._onerror({\n          message: reason,\n          transaction: event.transaction.txid\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    } // handle ethereum transaction hash error\n\n\n    if (reason.includes('invalid hash')) {\n      const reason = `${event.transaction.hash} is an invalid transaction hash`;\n\n      if (this._onerror) {\n        this._onerror({\n          message: reason,\n          transaction: event.transaction.hash\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    } // handle general address error\n\n\n    if (reason.includes('invalid address')) {\n      const reason = `${event.account.address} is an invalid address`;\n\n      if (this._onerror) {\n        this._onerror({\n          message: reason,\n          account: event.account.address\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    } // handle bitcoin specific address error\n\n\n    if (reason.includes('not a valid Bitcoin')) {\n      if (this._onerror) {\n        this._onerror({\n          message: reason,\n          account: event.account.address\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    } // handle ethereum specific address error\n\n\n    if (reason.includes('not a valid Ethereum')) {\n      if (this._onerror) {\n        this._onerror({\n          message: reason,\n          account: event.account.address\n        });\n\n        return;\n      } else {\n        throw new Error(reason);\n      }\n    } // throw error that comes back from the server without formatting the message\n\n\n    if (this._onerror) {\n      this._onerror({\n        message: reason\n      });\n\n      return;\n    } else {\n      throw new Error(reason);\n    }\n  }\n\n  if (event && event.transaction) {\n    const {\n      transaction,\n      eventCode,\n      contractCall\n    } = event; // flatten in to one object\n\n    const newState = this._system === 'ethereum' ? { ...transaction,\n      eventCode,\n      contractCall\n    } : { ...transaction,\n      eventCode\n    }; // ignore server echo and unsubscribe messages\n\n    if (serverEcho(eventCode) || transaction.status === 'unsubscribed') {\n      return;\n    } // handle change of hash in speedup and cancel events\n\n\n    if (eventCode === 'txSpeedUp' || eventCode === 'txCancel') {\n      this._watchedTransactions = this._watchedTransactions.map(tx => {\n        if (tx.hash === transaction.originalHash) {\n          // reassign hash parameter in transaction queue to new hash or txid\n          tx.hash = transaction.hash || transaction.txid;\n        }\n\n        return tx;\n      });\n    }\n\n    const watchedAddress = transaction.watchedAddress && this._system === 'ethereum' ? transaction.watchedAddress.toLowerCase() : transaction.watchedAddress;\n\n    if (watchedAddress) {\n      const accountObj = this._watchedAccounts.find(ac => ac.address === watchedAddress);\n\n      const emitterResult = accountObj ? last(accountObj.emitters.map(emitter => emitter.emit(newState))) : false;\n\n      this._transactionHandlers.forEach(handler => handler({\n        transaction: newState,\n        emitterResult\n      }));\n    } else {\n      const transactionObj = this._watchedTransactions.find(tx => tx.hash === transaction.hash || transaction.txid);\n\n      const emitterResult = transactionObj && transactionObj.emitter.emit(newState);\n\n      this._transactionHandlers.forEach(handler => handler({\n        transaction: newState,\n        emitterResult\n      }));\n    }\n  }\n}\n\nfunction createEventLog(msg) {\n  return JSON.stringify({\n    timeStamp: new Date(),\n    dappId: this._dappId,\n    version,\n    blockchain: {\n      system: this._system,\n      network: networkName(this._system, this._networkId) || 'local'\n    },\n    ...msg\n  });\n}\n\nfunction waitForConnectionOpen() {\n  return new Promise(resolve => {\n    const interval = setInterval(() => {\n      if (this._connected) {\n        setTimeout(resolve, 100);\n        clearInterval(interval);\n      }\n    });\n  });\n}\n\nfunction validateType(options) {\n  const {\n    name,\n    value,\n    type,\n    optional,\n    customValidation\n  } = options;\n\n  if (!optional && typeof value === 'undefined') {\n    throw new Error(`\"${name}\" is required`);\n  }\n\n  if (typeof value !== 'undefined' && (type === 'array' ? Array.isArray(type) : typeof value !== type)) {\n    throw new Error(`\"${name}\" must be of type: ${type}, received type: ${typeof value} from value: ${value}`);\n  }\n\n  if (typeof value !== 'undefined' && customValidation && !customValidation(value)) {\n    throw new Error(`\"${value}\" is not a valid \"${name}\"`);\n  }\n}\n\nfunction validateOptions(options) {\n  validateType({\n    name: 'sdk options',\n    value: options,\n    type: 'object'\n  });\n  const {\n    dappId,\n    system,\n    name,\n    networkId,\n    transactionHandlers,\n    apiUrl,\n    ws,\n    onopen,\n    ondown,\n    onreopen,\n    onerror,\n    onclose,\n    ...otherParams\n  } = options;\n  invalidParams(otherParams, ['dappId', 'system', 'name', 'networkId', 'transactionHandlers', 'apiUrl', 'ws', 'onopen', 'ondown', 'onreopen', 'onerror', 'onclose'], 'Initialization Options');\n  validateType({\n    name: 'dappId',\n    value: dappId,\n    type: 'string'\n  });\n  validateType({\n    name: 'system',\n    value: system,\n    type: 'string',\n    optional: true,\n    customValidation: validSystem\n  });\n  validateType({\n    name: 'name',\n    value: name,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'networkId',\n    value: networkId,\n    type: 'number'\n  });\n  validateType({\n    name: 'transactionHandler',\n    value: transactionHandlers,\n    type: 'array',\n    optional: true\n  });\n\n  if (transactionHandlers) {\n    transactionHandlers.forEach(handler => validateType({\n      name: 'transactionHandler',\n      value: handler,\n      type: 'function'\n    }));\n  }\n\n  validateType({\n    name: 'apiUrl',\n    value: apiUrl,\n    type: 'string',\n    optional: true\n  });\n  validateType({\n    name: 'ws',\n    value: ws,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'onopen',\n    value: onopen,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'ondown',\n    value: ondown,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'onreopen',\n    value: onreopen,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'onerror',\n    value: onerror,\n    type: 'function',\n    optional: true\n  });\n  validateType({\n    name: 'onclose',\n    value: onclose,\n    type: 'function',\n    optional: true\n  });\n}\n\nfunction validSystem(system) {\n  return !!networks[system];\n}\n\nfunction invalidParams(params, validParams, functionName) {\n  const invalid = Object.keys(params);\n\n  if (invalid.length > 0) {\n    throw new Error(`${invalid[0]} is not a valid parameter for ${functionName}, must be one of the following valid parameters: ${validParams.join(', ')}`);\n  }\n}\n\nconst DEFAULT_NAME = 'unknown';\nconst DEFAULT_SYSTEM = 'ethereum';\n\nclass Blocknative {\n  constructor(options) {\n    validateOptions(options);\n    const {\n      dappId,\n      system = DEFAULT_SYSTEM,\n      name = DEFAULT_NAME,\n      networkId,\n      transactionHandlers = [],\n      apiUrl,\n      ws,\n      onopen,\n      ondown,\n      onreopen,\n      onerror,\n      onclose\n    } = options;\n    const socket = new sturdy_websocket__WEBPACK_IMPORTED_MODULE_0___default.a(apiUrl || 'wss://api.blocknative.com/v0', ws ? {\n      wsConstructor: ws\n    } : {});\n    socket.onopen = onOpen.bind(this, onopen);\n    socket.ondown = onDown.bind(this, ondown);\n    socket.onreopen = onReopen.bind(this, onreopen);\n    socket.onmessage = handleMessage.bind(this);\n\n    socket.onerror = error => onerror && onerror({\n      message: 'There was a WebSocket error',\n      error\n    });\n\n    socket.onclose = () => {\n      this._pingTimeout && clearInterval(this._pingTimeout);\n      onclose && onclose();\n    };\n\n    const storageKey = crypto_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"].SHA1(`${dappId} - ${name}`).toString();\n    const storedConnectionId = typeof window !== 'undefined' && window.localStorage.getItem(storageKey);\n    this._storageKey = storageKey;\n    this._connectionId = storedConnectionId || undefined;\n    this._dappId = dappId;\n    this._system = system;\n    this._networkId = networkId;\n    this._transactionHandlers = transactionHandlers;\n    this._socket = socket;\n    this._connected = false;\n    this._sendMessage = sendMessage.bind(this);\n    this._watchedTransactions = [];\n    this._watchedAccounts = [];\n    this._pingTimeout = undefined;\n    this._destroyed = false;\n    this._onerror = onerror;\n    this._queuedMessages = [];\n    this._limitRules = DEFAULT_RATE_LIMIT_RULES;\n    this._waitToRetry = null;\n    this._processingQueue = false;\n    this._processQueue = processQueue.bind(this);\n\n    if (this._socket.ws.on) {\n      this._heartbeat = () => {\n        this._pingTimeout && clearTimeout(this._pingTimeout);\n        this._pingTimeout = setTimeout(() => {\n          // terminate connection if we haven't heard the server ping after server timeout plus conservative latency delay\n          // Sturdy Websocket will handle the new connection logic\n          this._socket.ws.terminate();\n        }, 30000 + 1000);\n      };\n\n      this._socket.ws.on('ping', () => {\n        this._heartbeat && this._heartbeat();\n      });\n    } // public API\n\n\n    this.transaction = transaction.bind(this);\n    this.account = account.bind(this);\n    this.event = event.bind(this);\n    this.unsubscribe = unsubscribe.bind(this);\n\n    this.destroy = () => {\n      this._socket.close();\n\n      this._destroyed = true; // call onclose manually here as SturdyWebSocket doesn't currently work as expected\n      // https://github.com/dphilipson/sturdy-websocket/issues/5\n\n      this._socket.onclose();\n    };\n  }\n\n}\n\nfunction onOpen(handler) {\n  this._connected = true;\n  const msg = {\n    categoryCode: 'initialize',\n    eventCode: 'checkDappId',\n    connectionId: this._connectionId\n  }; // send this message directly rather than put in queue\n\n  this._socket.send(createEventLog.bind(this)(msg));\n\n  this._heartbeat && this._heartbeat();\n  handler && handler();\n}\n\nfunction onDown(handler, closeEvent) {\n  this._connected = false;\n\n  if (handler) {\n    handler(closeEvent);\n  }\n\n  this._pingTimeout && clearTimeout(this._pingTimeout);\n}\n\nfunction onReopen(handler) {\n  this._connected = true;\n  const msg = {\n    categoryCode: 'initialize',\n    eventCode: 'checkDappId',\n    connectionId: this._connectionId\n  };\n\n  this._socket.send(createEventLog.bind(this)(msg)); // re-register all accounts to be watched by server upon\n  // re-connection as they don't get transferred over automatically\n  // to the new connection like tx hashes do\n\n\n  this._watchedAccounts.forEach(account => {\n    this._sendMessage({\n      eventCode: 'accountAddress',\n      categoryCode: 'watch',\n      account: {\n        address: account.address\n      }\n    });\n  });\n\n  if (handler) {\n    handler();\n  }\n\n  if (this._socket.ws.on) {\n    // need to re-register ping event since new connection\n    this._socket.ws.on('ping', () => {\n      this._heartbeat && this._heartbeat();\n    });\n\n    this._heartbeat();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Blocknative);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bnc-sdk/dist/esm/index.js\n");

/***/ }),

/***/ "./node_modules/bowser/es5.js":
/*!************************************!*\
  !*** ./node_modules/bowser/es5.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t():undefined}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bowser/es5.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/aes.js":
/*!*******************************************!*\
  !*** ./node_modules/crypto-es/lib/aes.js ***!
  \*******************************************/
/*! exports provided: AESAlgo, AES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AESAlgo\", function() { return AESAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AES\", function() { return AES; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nclass AESAlgo extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipher\"] {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nconst AES = _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipher\"]._createHelper(AESAlgo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/aes.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/cipher-core.js":
/*!***************************************************!*\
  !*** ./node_modules/crypto-es/lib/cipher-core.js ***!
  \***************************************************/
/*! exports provided: Cipher, StreamCipher, BlockCipherMode, CBC, Pkcs7, BlockCipher, CipherParams, OpenSSLFormatter, SerializableCipher, OpenSSLKdf, PasswordBasedCipher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cipher\", function() { return Cipher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StreamCipher\", function() { return StreamCipher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BlockCipherMode\", function() { return BlockCipherMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CBC\", function() { return CBC; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pkcs7\", function() { return Pkcs7; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BlockCipher\", function() { return BlockCipher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CipherParams\", function() { return CipherParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OpenSSLFormatter\", function() { return OpenSSLFormatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SerializableCipher\", function() { return SerializableCipher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OpenSSLKdf\", function() { return OpenSSLKdf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PasswordBasedCipher\", function() { return PasswordBasedCipher; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _enc_base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enc-base64.js */ \"./node_modules/crypto-es/lib/enc-base64.js\");\n/* harmony import */ var _evpkdf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./evpkdf.js */ \"./node_modules/crypto-es/lib/evpkdf.js\");\n/* eslint-disable no-use-before-define */\n\n\n\n\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nclass Cipher extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"BufferedBlockAlgorithm\"] {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nclass StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nclass BlockCipherMode extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nclass CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nconst Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nclass BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nclass CipherParams extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nconst OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(_enc_base64_js__WEBPACK_IMPORTED_MODULE_1__[\"Base64\"]);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = _enc_base64_js__WEBPACK_IMPORTED_MODULE_1__[\"Base64\"].parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nclass SerializableCipher extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nconst OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = _evpkdf_js__WEBPACK_IMPORTED_MODULE_2__[\"EvpKDFAlgo\"].create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nclass PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/cipher-core.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/core.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-es/lib/core.js ***!
  \********************************************/
/*! exports provided: Base, WordArray, Hex, Latin1, Utf8, BufferedBlockAlgorithm, Hasher, HMAC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Base\", function() { return Base; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WordArray\", function() { return WordArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hex\", function() { return Hex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Latin1\", function() { return Latin1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Utf8\", function() { return Utf8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BufferedBlockAlgorithm\", function() { return BufferedBlockAlgorithm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hasher\", function() { return Hasher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HMAC\", function() { return HMAC; });\n/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nclass Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nclass WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nconst Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nconst Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nconst Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nclass BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nclass Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nclass HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/core.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/enc-base64.js":
/*!**************************************************!*\
  !*** ./node_modules/crypto-es/lib/enc-base64.js ***!
  \**************************************************/
/*! exports provided: Base64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Base64\", function() { return Base64; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nconst Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvZW5jLWJhc2U2NC5qcz85OTMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUVtQjs7QUFFbkI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFCQUFxQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxrREFBUztBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBLGNBQWMsT0FBTztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtCQUFrQjtBQUM3Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7O0FBRUE7O0FBRUEscUJBQXFCLHNDQUFzQztBQUMzRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdCQUFnQjtBQUNyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvZW5jLWJhc2U2NC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFdvcmRBcnJheSxcbn0gZnJvbSAnLi9jb3JlLmpzJztcblxuY29uc3QgcGFyc2VMb29wID0gKGJhc2U2NFN0ciwgYmFzZTY0U3RyTGVuZ3RoLCByZXZlcnNlTWFwKSA9PiB7XG4gIGNvbnN0IHdvcmRzID0gW107XG4gIGxldCBuQnl0ZXMgPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJhc2U2NFN0ckxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKGkgJSA0KSB7XG4gICAgICBjb25zdCBiaXRzMSA9IHJldmVyc2VNYXBbYmFzZTY0U3RyLmNoYXJDb2RlQXQoaSAtIDEpXSA8PCAoKGkgJSA0KSAqIDIpO1xuICAgICAgY29uc3QgYml0czIgPSByZXZlcnNlTWFwW2Jhc2U2NFN0ci5jaGFyQ29kZUF0KGkpXSA+Pj4gKDYgLSAoaSAlIDQpICogMik7XG4gICAgICBjb25zdCBiaXRzQ29tYmluZWQgPSBiaXRzMSB8IGJpdHMyO1xuICAgICAgd29yZHNbbkJ5dGVzID4+PiAyXSB8PSBiaXRzQ29tYmluZWQgPDwgKDI0IC0gKG5CeXRlcyAlIDQpICogOCk7XG4gICAgICBuQnl0ZXMgKz0gMTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFdvcmRBcnJheS5jcmVhdGUod29yZHMsIG5CeXRlcyk7XG59O1xuXG4vKipcbiAqIEJhc2U2NCBlbmNvZGluZyBzdHJhdGVneS5cbiAqL1xuZXhwb3J0IGNvbnN0IEJhc2U2NCA9IHtcbiAgLyoqXG4gICAqIENvbnZlcnRzIGEgd29yZCBhcnJheSB0byBhIEJhc2U2NCBzdHJpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB7V29yZEFycmF5fSB3b3JkQXJyYXkgVGhlIHdvcmQgYXJyYXkuXG4gICAqXG4gICAqIEByZXR1cm4ge3N0cmluZ30gVGhlIEJhc2U2NCBzdHJpbmcuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogICAgIGNvbnN0IGJhc2U2NFN0cmluZyA9IENyeXB0b0pTLmVuYy5CYXNlNjQuc3RyaW5naWZ5KHdvcmRBcnJheSk7XG4gICAqL1xuICBzdHJpbmdpZnkod29yZEFycmF5KSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3QgeyB3b3Jkcywgc2lnQnl0ZXMgfSA9IHdvcmRBcnJheTtcbiAgICBjb25zdCBtYXAgPSB0aGlzLl9tYXA7XG5cbiAgICAvLyBDbGFtcCBleGNlc3MgYml0c1xuICAgIHdvcmRBcnJheS5jbGFtcCgpO1xuXG4gICAgLy8gQ29udmVydFxuICAgIGNvbnN0IGJhc2U2NENoYXJzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaWdCeXRlczsgaSArPSAzKSB7XG4gICAgICBjb25zdCBieXRlMSA9ICh3b3Jkc1tpID4+PiAyXSA+Pj4gKDI0IC0gKGkgJSA0KSAqIDgpKSAmIDB4ZmY7XG4gICAgICBjb25zdCBieXRlMiA9ICh3b3Jkc1soaSArIDEpID4+PiAyXSA+Pj4gKDI0IC0gKChpICsgMSkgJSA0KSAqIDgpKSAmIDB4ZmY7XG4gICAgICBjb25zdCBieXRlMyA9ICh3b3Jkc1soaSArIDIpID4+PiAyXSA+Pj4gKDI0IC0gKChpICsgMikgJSA0KSAqIDgpKSAmIDB4ZmY7XG5cbiAgICAgIGNvbnN0IHRyaXBsZXQgPSAoYnl0ZTEgPDwgMTYpIHwgKGJ5dGUyIDw8IDgpIHwgYnl0ZTM7XG5cbiAgICAgIGZvciAobGV0IGogPSAwOyAoaiA8IDQpICYmIChpICsgaiAqIDAuNzUgPCBzaWdCeXRlcyk7IGogKz0gMSkge1xuICAgICAgICBiYXNlNjRDaGFycy5wdXNoKG1hcC5jaGFyQXQoKHRyaXBsZXQgPj4+ICg2ICogKDMgLSBqKSkpICYgMHgzZikpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBwYWRkaW5nXG4gICAgY29uc3QgcGFkZGluZ0NoYXIgPSBtYXAuY2hhckF0KDY0KTtcbiAgICBpZiAocGFkZGluZ0NoYXIpIHtcbiAgICAgIHdoaWxlIChiYXNlNjRDaGFycy5sZW5ndGggJSA0KSB7XG4gICAgICAgIGJhc2U2NENoYXJzLnB1c2gocGFkZGluZ0NoYXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBiYXNlNjRDaGFycy5qb2luKCcnKTtcbiAgfSxcblxuICAvKipcbiAgICogQ29udmVydHMgYSBCYXNlNjQgc3RyaW5nIHRvIGEgd29yZCBhcnJheS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGJhc2U2NFN0ciBUaGUgQmFzZTY0IHN0cmluZy5cbiAgICpcbiAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgd29yZCBhcnJheS5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiAgICAgY29uc3Qgd29yZEFycmF5ID0gQ3J5cHRvSlMuZW5jLkJhc2U2NC5wYXJzZShiYXNlNjRTdHJpbmcpO1xuICAgKi9cbiAgcGFyc2UoYmFzZTY0U3RyKSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgbGV0IGJhc2U2NFN0ckxlbmd0aCA9IGJhc2U2NFN0ci5sZW5ndGg7XG4gICAgY29uc3QgbWFwID0gdGhpcy5fbWFwO1xuICAgIGxldCByZXZlcnNlTWFwID0gdGhpcy5fcmV2ZXJzZU1hcDtcblxuICAgIGlmICghcmV2ZXJzZU1hcCkge1xuICAgICAgdGhpcy5fcmV2ZXJzZU1hcCA9IFtdO1xuICAgICAgcmV2ZXJzZU1hcCA9IHRoaXMuX3JldmVyc2VNYXA7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IG1hcC5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICByZXZlcnNlTWFwW21hcC5jaGFyQ29kZUF0KGopXSA9IGo7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSWdub3JlIHBhZGRpbmdcbiAgICBjb25zdCBwYWRkaW5nQ2hhciA9IG1hcC5jaGFyQXQoNjQpO1xuICAgIGlmIChwYWRkaW5nQ2hhcikge1xuICAgICAgY29uc3QgcGFkZGluZ0luZGV4ID0gYmFzZTY0U3RyLmluZGV4T2YocGFkZGluZ0NoYXIpO1xuICAgICAgaWYgKHBhZGRpbmdJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgYmFzZTY0U3RyTGVuZ3RoID0gcGFkZGluZ0luZGV4O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIENvbnZlcnRcbiAgICByZXR1cm4gcGFyc2VMb29wKGJhc2U2NFN0ciwgYmFzZTY0U3RyTGVuZ3RoLCByZXZlcnNlTWFwKTtcbiAgfSxcblxuICBfbWFwOiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nLFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/enc-base64.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/enc-utf16.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-es/lib/enc-utf16.js ***!
  \*************************************************/
/*! exports provided: Utf16BE, Utf16, Utf16LE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Utf16BE\", function() { return Utf16BE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Utf16\", function() { return Utf16; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Utf16LE\", function() { return Utf16LE; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\nconst swapEndian = word => ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\n/**\n * UTF-16 BE encoding strategy.\n */\nconst Utf16BE = {\n  /**\n   * Converts a word array to a UTF-16 BE string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-16 BE string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const utf16Chars = [];\n    for (let i = 0; i < sigBytes; i += 2) {\n      const codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n      utf16Chars.push(String.fromCharCode(codePoint));\n    }\n\n    return utf16Chars.join('');\n  },\n\n  /**\n   * Converts a UTF-16 BE string to a word array.\n   *\n   * @param {string} utf16Str The UTF-16 BE string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n   */\n  parse(utf16Str) {\n    // Shortcut\n    const utf16StrLength = utf16Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < utf16StrLength; i += 1) {\n      words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n    }\n\n    return _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(words, utf16StrLength * 2);\n  },\n};\nconst Utf16 = Utf16BE;\n\n/**\n * UTF-16 LE encoding strategy.\n */\nconst Utf16LE = {\n  /**\n   * Converts a word array to a UTF-16 LE string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-16 LE string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const utf16Chars = [];\n    for (let i = 0; i < sigBytes; i += 2) {\n      const codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n      utf16Chars.push(String.fromCharCode(codePoint));\n    }\n\n    return utf16Chars.join('');\n  },\n\n  /**\n   * Converts a UTF-16 LE string to a word array.\n   *\n   * @param {string} utf16Str The UTF-16 LE string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n   */\n  parse(utf16Str) {\n    // Shortcut\n    const utf16StrLength = utf16Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < utf16StrLength; i += 1) {\n      words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n    }\n\n    return _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(words, utf16StrLength * 2);\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvZW5jLXV0ZjE2LmpzPzU0N2IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVtQjs7QUFFbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkI7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrQkFBa0I7O0FBRTdCO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBOztBQUVBLFdBQVcsa0RBQVM7QUFDcEIsR0FBRztBQUNIO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkI7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrQkFBa0I7O0FBRTdCO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBOztBQUVBLFdBQVcsa0RBQVM7QUFDcEIsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvZW5jLXV0ZjE2LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgV29yZEFycmF5LFxufSBmcm9tICcuL2NvcmUuanMnO1xuXG5jb25zdCBzd2FwRW5kaWFuID0gd29yZCA9PiAoKHdvcmQgPDwgOCkgJiAweGZmMDBmZjAwKSB8ICgod29yZCA+Pj4gOCkgJiAweDAwZmYwMGZmKTtcblxuLyoqXG4gKiBVVEYtMTYgQkUgZW5jb2Rpbmcgc3RyYXRlZ3kuXG4gKi9cbmV4cG9ydCBjb25zdCBVdGYxNkJFID0ge1xuICAvKipcbiAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgVVRGLTE2IEJFIHN0cmluZy5cbiAgICpcbiAgICogQHBhcmFtIHtXb3JkQXJyYXl9IHdvcmRBcnJheSBUaGUgd29yZCBhcnJheS5cbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgVVRGLTE2IEJFIHN0cmluZy5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiAgICAgY29uc3QgdXRmMTZTdHJpbmcgPSBDcnlwdG9KUy5lbmMuVXRmMTYuc3RyaW5naWZ5KHdvcmRBcnJheSk7XG4gICAqL1xuICBzdHJpbmdpZnkod29yZEFycmF5KSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3QgeyB3b3Jkcywgc2lnQnl0ZXMgfSA9IHdvcmRBcnJheTtcblxuICAgIC8vIENvbnZlcnRcbiAgICBjb25zdCB1dGYxNkNoYXJzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaWdCeXRlczsgaSArPSAyKSB7XG4gICAgICBjb25zdCBjb2RlUG9pbnQgPSAod29yZHNbaSA+Pj4gMl0gPj4+ICgxNiAtIChpICUgNCkgKiA4KSkgJiAweGZmZmY7XG4gICAgICB1dGYxNkNoYXJzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlUG9pbnQpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXRmMTZDaGFycy5qb2luKCcnKTtcbiAgfSxcblxuICAvKipcbiAgICogQ29udmVydHMgYSBVVEYtMTYgQkUgc3RyaW5nIHRvIGEgd29yZCBhcnJheS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHV0ZjE2U3RyIFRoZSBVVEYtMTYgQkUgc3RyaW5nLlxuICAgKlxuICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSB3b3JkIGFycmF5LlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqICAgICBjb25zdCB3b3JkQXJyYXkgPSBDcnlwdG9KUy5lbmMuVXRmMTYucGFyc2UodXRmMTZTdHJpbmcpO1xuICAgKi9cbiAgcGFyc2UodXRmMTZTdHIpIHtcbiAgICAvLyBTaG9ydGN1dFxuICAgIGNvbnN0IHV0ZjE2U3RyTGVuZ3RoID0gdXRmMTZTdHIubGVuZ3RoO1xuXG4gICAgLy8gQ29udmVydFxuICAgIGNvbnN0IHdvcmRzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1dGYxNlN0ckxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB3b3Jkc1tpID4+PiAxXSB8PSB1dGYxNlN0ci5jaGFyQ29kZUF0KGkpIDw8ICgxNiAtIChpICUgMikgKiAxNik7XG4gICAgfVxuXG4gICAgcmV0dXJuIFdvcmRBcnJheS5jcmVhdGUod29yZHMsIHV0ZjE2U3RyTGVuZ3RoICogMik7XG4gIH0sXG59O1xuZXhwb3J0IGNvbnN0IFV0ZjE2ID0gVXRmMTZCRTtcblxuLyoqXG4gKiBVVEYtMTYgTEUgZW5jb2Rpbmcgc3RyYXRlZ3kuXG4gKi9cbmV4cG9ydCBjb25zdCBVdGYxNkxFID0ge1xuICAvKipcbiAgICogQ29udmVydHMgYSB3b3JkIGFycmF5IHRvIGEgVVRGLTE2IExFIHN0cmluZy5cbiAgICpcbiAgICogQHBhcmFtIHtXb3JkQXJyYXl9IHdvcmRBcnJheSBUaGUgd29yZCBhcnJheS5cbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgVVRGLTE2IExFIHN0cmluZy5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiAgICAgY29uc3QgdXRmMTZTdHIgPSBDcnlwdG9KUy5lbmMuVXRmMTZMRS5zdHJpbmdpZnkod29yZEFycmF5KTtcbiAgICovXG4gIHN0cmluZ2lmeSh3b3JkQXJyYXkpIHtcbiAgICAvLyBTaG9ydGN1dHNcbiAgICBjb25zdCB7IHdvcmRzLCBzaWdCeXRlcyB9ID0gd29yZEFycmF5O1xuXG4gICAgLy8gQ29udmVydFxuICAgIGNvbnN0IHV0ZjE2Q2hhcnMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpZ0J5dGVzOyBpICs9IDIpIHtcbiAgICAgIGNvbnN0IGNvZGVQb2ludCA9IHN3YXBFbmRpYW4oKHdvcmRzW2kgPj4+IDJdID4+PiAoMTYgLSAoaSAlIDQpICogOCkpICYgMHhmZmZmKTtcbiAgICAgIHV0ZjE2Q2hhcnMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGVQb2ludCkpO1xuICAgIH1cblxuICAgIHJldHVybiB1dGYxNkNoYXJzLmpvaW4oJycpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhIFVURi0xNiBMRSBzdHJpbmcgdG8gYSB3b3JkIGFycmF5LlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXRmMTZTdHIgVGhlIFVURi0xNiBMRSBzdHJpbmcuXG4gICAqXG4gICAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIHdvcmQgYXJyYXkuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogICAgIGNvbnN0IHdvcmRBcnJheSA9IENyeXB0b0pTLmVuYy5VdGYxNkxFLnBhcnNlKHV0ZjE2U3RyKTtcbiAgICovXG4gIHBhcnNlKHV0ZjE2U3RyKSB7XG4gICAgLy8gU2hvcnRjdXRcbiAgICBjb25zdCB1dGYxNlN0ckxlbmd0aCA9IHV0ZjE2U3RyLmxlbmd0aDtcblxuICAgIC8vIENvbnZlcnRcbiAgICBjb25zdCB3b3JkcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXRmMTZTdHJMZW5ndGg7IGkgKz0gMSkge1xuICAgICAgd29yZHNbaSA+Pj4gMV0gfD0gc3dhcEVuZGlhbih1dGYxNlN0ci5jaGFyQ29kZUF0KGkpIDw8ICgxNiAtIChpICUgMikgKiAxNikpO1xuICAgIH1cblxuICAgIHJldHVybiBXb3JkQXJyYXkuY3JlYXRlKHdvcmRzLCB1dGYxNlN0ckxlbmd0aCAqIDIpO1xuICB9LFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/enc-utf16.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/evpkdf.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/evpkdf.js ***!
  \**********************************************/
/*! exports provided: EvpKDFAlgo, EvpKDF */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EvpKDFAlgo\", function() { return EvpKDFAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EvpKDF\", function() { return EvpKDF; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/crypto-es/lib/md5.js\");\n\n\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nclass EvpKDFAlgo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](),\n      {\n        keySize: 128 / 32,\n        hasher: _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"MD5Algo\"],\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nconst EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvZXZwa2RmLmpzP2QxOTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdtQjtBQUNnQjs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5QkFBeUIsNkNBQUk7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGFBQWE7QUFDL0Qsa0RBQWtELCtCQUErQjtBQUNqRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLE9BQU87QUFDekIsa0JBQWtCLE9BQU87QUFDekIsa0JBQWtCLE9BQU87QUFDekI7QUFDQTtBQUNBLFVBQVUsNkNBQUk7QUFDZDtBQUNBO0FBQ0EsZ0JBQWdCLCtDQUFPO0FBQ3ZCO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsTUFBTTs7QUFFakI7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QixrREFBUzs7QUFFaEM7QUFDQTtBQUNBLFdBQVcsc0JBQXNCOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixnQkFBZ0I7QUFDckM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxhQUFhO0FBQy9ELGtEQUFrRCwrQkFBK0I7QUFDakY7QUFDTyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL2V2cGtkZi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEJhc2UsXG4gIFdvcmRBcnJheSxcbn0gZnJvbSAnLi9jb3JlLmpzJztcbmltcG9ydCB7IE1ENUFsZ28gfSBmcm9tICcuL21kNS5qcyc7XG5cbi8qKlxuICogVGhpcyBrZXkgZGVyaXZhdGlvbiBmdW5jdGlvbiBpcyBtZWFudCB0byBjb25mb3JtIHdpdGggRVZQX0J5dGVzVG9LZXkuXG4gKiB3d3cub3BlbnNzbC5vcmcvZG9jcy9jcnlwdG8vRVZQX0J5dGVzVG9LZXkuaHRtbFxuICovXG5leHBvcnQgY2xhc3MgRXZwS0RGQWxnbyBleHRlbmRzIEJhc2Uge1xuICAvKipcbiAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIGtleSBkZXJpdmF0aW9uIGZ1bmN0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gY2ZnIChPcHRpb25hbCkgVGhlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyB0byB1c2UgZm9yIHRoZSBkZXJpdmF0aW9uLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiAgICAgY29uc3Qga2RmID0gQ3J5cHRvSlMuYWxnby5FdnBLREYuY3JlYXRlKCk7XG4gICAqICAgICBjb25zdCBrZGYgPSBDcnlwdG9KUy5hbGdvLkV2cEtERi5jcmVhdGUoeyBrZXlTaXplOiA4IH0pO1xuICAgKiAgICAgY29uc3Qga2RmID0gQ3J5cHRvSlMuYWxnby5FdnBLREYuY3JlYXRlKHsga2V5U2l6ZTogOCwgaXRlcmF0aW9uczogMTAwMCB9KTtcbiAgICovXG4gIGNvbnN0cnVjdG9yKGNmZykge1xuICAgIHN1cGVyKCk7XG5cbiAgICAvKipcbiAgICAgKiBDb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkge251bWJlcn0ga2V5U2l6ZSBUaGUga2V5IHNpemUgaW4gd29yZHMgdG8gZ2VuZXJhdGUuIERlZmF1bHQ6IDQgKDEyOCBiaXRzKVxuICAgICAqIEBwcm9wZXJ0eSB7SGFzaGVyfSBoYXNoZXIgVGhlIGhhc2ggYWxnb3JpdGhtIHRvIHVzZS4gRGVmYXVsdDogTUQ1XG4gICAgICogQHByb3BlcnR5IHtudW1iZXJ9IGl0ZXJhdGlvbnMgVGhlIG51bWJlciBvZiBpdGVyYXRpb25zIHRvIHBlcmZvcm0uIERlZmF1bHQ6IDFcbiAgICAgKi9cbiAgICB0aGlzLmNmZyA9IE9iamVjdC5hc3NpZ24oXG4gICAgICBuZXcgQmFzZSgpLFxuICAgICAge1xuICAgICAgICBrZXlTaXplOiAxMjggLyAzMixcbiAgICAgICAgaGFzaGVyOiBNRDVBbGdvLFxuICAgICAgICBpdGVyYXRpb25zOiAxLFxuICAgICAgfSxcbiAgICAgIGNmZyxcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIERlcml2ZXMgYSBrZXkgZnJvbSBhIHBhc3N3b3JkLlxuICAgKlxuICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IHBhc3N3b3JkIFRoZSBwYXNzd29yZC5cbiAgICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBzYWx0IEEgc2FsdC5cbiAgICpcbiAgICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgZGVyaXZlZCBrZXkuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqICAgICBjb25zdCBrZXkgPSBrZGYuY29tcHV0ZShwYXNzd29yZCwgc2FsdCk7XG4gICAqL1xuICBjb21wdXRlKHBhc3N3b3JkLCBzYWx0KSB7XG4gICAgbGV0IGJsb2NrO1xuXG4gICAgLy8gU2hvcnRjdXRcbiAgICBjb25zdCB7IGNmZyB9ID0gdGhpcztcblxuICAgIC8vIEluaXQgaGFzaGVyXG4gICAgY29uc3QgaGFzaGVyID0gY2ZnLmhhc2hlci5jcmVhdGUoKTtcblxuICAgIC8vIEluaXRpYWwgdmFsdWVzXG4gICAgY29uc3QgZGVyaXZlZEtleSA9IFdvcmRBcnJheS5jcmVhdGUoKTtcblxuICAgIC8vIFNob3J0Y3V0c1xuICAgIGNvbnN0IGRlcml2ZWRLZXlXb3JkcyA9IGRlcml2ZWRLZXkud29yZHM7XG4gICAgY29uc3QgeyBrZXlTaXplLCBpdGVyYXRpb25zIH0gPSBjZmc7XG5cbiAgICAvLyBHZW5lcmF0ZSBrZXlcbiAgICB3aGlsZSAoZGVyaXZlZEtleVdvcmRzLmxlbmd0aCA8IGtleVNpemUpIHtcbiAgICAgIGlmIChibG9jaykge1xuICAgICAgICBoYXNoZXIudXBkYXRlKGJsb2NrKTtcbiAgICAgIH1cbiAgICAgIGJsb2NrID0gaGFzaGVyLnVwZGF0ZShwYXNzd29yZCkuZmluYWxpemUoc2FsdCk7XG4gICAgICBoYXNoZXIucmVzZXQoKTtcblxuICAgICAgLy8gSXRlcmF0aW9uc1xuICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBpdGVyYXRpb25zOyBpICs9IDEpIHtcbiAgICAgICAgYmxvY2sgPSBoYXNoZXIuZmluYWxpemUoYmxvY2spO1xuICAgICAgICBoYXNoZXIucmVzZXQoKTtcbiAgICAgIH1cblxuICAgICAgZGVyaXZlZEtleS5jb25jYXQoYmxvY2spO1xuICAgIH1cbiAgICBkZXJpdmVkS2V5LnNpZ0J5dGVzID0ga2V5U2l6ZSAqIDQ7XG5cbiAgICByZXR1cm4gZGVyaXZlZEtleTtcbiAgfVxufVxuXG4vKipcbiAqIERlcml2ZXMgYSBrZXkgZnJvbSBhIHBhc3N3b3JkLlxuICpcbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gcGFzc3dvcmQgVGhlIHBhc3N3b3JkLlxuICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBzYWx0IEEgc2FsdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhpcyBjb21wdXRhdGlvbi5cbiAqXG4gKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBkZXJpdmVkIGtleS5cbiAqXG4gKiBAc3RhdGljXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgdmFyIGtleSA9IENyeXB0b0pTLkV2cEtERihwYXNzd29yZCwgc2FsdCk7XG4gKiAgICAgdmFyIGtleSA9IENyeXB0b0pTLkV2cEtERihwYXNzd29yZCwgc2FsdCwgeyBrZXlTaXplOiA4IH0pO1xuICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5FdnBLREYocGFzc3dvcmQsIHNhbHQsIHsga2V5U2l6ZTogOCwgaXRlcmF0aW9uczogMTAwMCB9KTtcbiAqL1xuZXhwb3J0IGNvbnN0IEV2cEtERiA9IChwYXNzd29yZCwgc2FsdCwgY2ZnKSA9PiBFdnBLREZBbGdvLmNyZWF0ZShjZmcpLmNvbXB1dGUocGFzc3dvcmQsIHNhbHQpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/evpkdf.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/format-hex.js":
/*!**************************************************!*\
  !*** ./node_modules/crypto-es/lib/format-hex.js ***!
  \**************************************************/
/*! exports provided: HexFormatter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HexFormatter\", function() { return HexFormatter; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\n\nconst HexFormatter = {\n  /**\n   * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The hexadecimally encoded string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    return cipherParams.ciphertext.toString(_core_js__WEBPACK_IMPORTED_MODULE_1__[\"Hex\"]);\n  },\n\n  /**\n   * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n   *\n   * @param {string} input The hexadecimally encoded string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n   */\n  parse(input) {\n    const ciphertext = _core_js__WEBPACK_IMPORTED_MODULE_1__[\"Hex\"].parse(input);\n    return _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"CipherParams\"].create({ ciphertext });\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvZm9ybWF0LWhleC5qcz84OGJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRTBCO0FBR1A7O0FBRVo7QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLGFBQWE7QUFDMUI7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyw0Q0FBRztBQUMvQyxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLGNBQWMsYUFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDRDQUFHO0FBQzFCLFdBQVcsNERBQVksU0FBUyxhQUFhO0FBQzdDLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL2Zvcm1hdC1oZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaXBoZXJQYXJhbXMsXG59IGZyb20gJy4vY2lwaGVyLWNvcmUuanMnO1xuaW1wb3J0IHtcbiAgSGV4LFxufSBmcm9tICcuL2NvcmUuanMnO1xuXG5leHBvcnQgY29uc3QgSGV4Rm9ybWF0dGVyID0ge1xuICAvKipcbiAgICogQ29udmVydHMgdGhlIGNpcGhlcnRleHQgb2YgYSBjaXBoZXIgcGFyYW1zIG9iamVjdCB0byBhIGhleGFkZWNpbWFsbHkgZW5jb2RlZCBzdHJpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB7Q2lwaGVyUGFyYW1zfSBjaXBoZXJQYXJhbXMgVGhlIGNpcGhlciBwYXJhbXMgb2JqZWN0LlxuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IFRoZSBoZXhhZGVjaW1hbGx5IGVuY29kZWQgc3RyaW5nLlxuICAgKlxuICAgKiBAc3RhdGljXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqICAgICB2YXIgaGV4U3RyaW5nID0gQ3J5cHRvSlMuZm9ybWF0LkhleC5zdHJpbmdpZnkoY2lwaGVyUGFyYW1zKTtcbiAgICovXG4gIHN0cmluZ2lmeShjaXBoZXJQYXJhbXMpIHtcbiAgICByZXR1cm4gY2lwaGVyUGFyYW1zLmNpcGhlcnRleHQudG9TdHJpbmcoSGV4KTtcbiAgfSxcblxuICAvKipcbiAgICogQ29udmVydHMgYSBoZXhhZGVjaW1hbGx5IGVuY29kZWQgY2lwaGVydGV4dCBzdHJpbmcgdG8gYSBjaXBoZXIgcGFyYW1zIG9iamVjdC5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlucHV0IFRoZSBoZXhhZGVjaW1hbGx5IGVuY29kZWQgc3RyaW5nLlxuICAgKlxuICAgKiBAcmV0dXJuIHtDaXBoZXJQYXJhbXN9IFRoZSBjaXBoZXIgcGFyYW1zIG9iamVjdC5cbiAgICpcbiAgICogQHN0YXRpY1xuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiAgICAgdmFyIGNpcGhlclBhcmFtcyA9IENyeXB0b0pTLmZvcm1hdC5IZXgucGFyc2UoaGV4U3RyaW5nKTtcbiAgICovXG4gIHBhcnNlKGlucHV0KSB7XG4gICAgY29uc3QgY2lwaGVydGV4dCA9IEhleC5wYXJzZShpbnB1dCk7XG4gICAgcmV0dXJuIENpcGhlclBhcmFtcy5jcmVhdGUoeyBjaXBoZXJ0ZXh0IH0pO1xuICB9LFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/format-hex.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/hmac.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-es/lib/hmac.js ***!
  \********************************************/
/*! exports provided: HMAC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HMAC\", function() { return _core_js__WEBPACK_IMPORTED_MODULE_0__[\"HMAC\"]; });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvaG1hYy5qcz9kMzg4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRW1CIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvaG1hYy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7XG4gIEhNQUMsXG59IGZyb20gJy4vY29yZS5qcyc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/hmac.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-es/lib/index.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _x64_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./x64-core.js */ \"./node_modules/crypto-es/lib/x64-core.js\");\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n/* harmony import */ var _enc_utf16_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enc-utf16.js */ \"./node_modules/crypto-es/lib/enc-utf16.js\");\n/* harmony import */ var _enc_base64_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enc-base64.js */ \"./node_modules/crypto-es/lib/enc-base64.js\");\n/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hmac.js */ \"./node_modules/crypto-es/lib/hmac.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/crypto-es/lib/md5.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/crypto-es/lib/sha1.js\");\n/* harmony import */ var _sha224_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sha224.js */ \"./node_modules/crypto-es/lib/sha224.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sha256.js */ \"./node_modules/crypto-es/lib/sha256.js\");\n/* harmony import */ var _sha384_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sha384.js */ \"./node_modules/crypto-es/lib/sha384.js\");\n/* harmony import */ var _sha512_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./sha512.js */ \"./node_modules/crypto-es/lib/sha512.js\");\n/* harmony import */ var _sha3_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./sha3.js */ \"./node_modules/crypto-es/lib/sha3.js\");\n/* harmony import */ var _ripemd160_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ripemd160.js */ \"./node_modules/crypto-es/lib/ripemd160.js\");\n/* harmony import */ var _pbkdf2_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pbkdf2.js */ \"./node_modules/crypto-es/lib/pbkdf2.js\");\n/* harmony import */ var _evpkdf_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./evpkdf.js */ \"./node_modules/crypto-es/lib/evpkdf.js\");\n/* harmony import */ var _aes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./aes.js */ \"./node_modules/crypto-es/lib/aes.js\");\n/* harmony import */ var _tripledes_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tripledes.js */ \"./node_modules/crypto-es/lib/tripledes.js\");\n/* harmony import */ var _rabbit_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./rabbit.js */ \"./node_modules/crypto-es/lib/rabbit.js\");\n/* harmony import */ var _rabbit_legacy_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./rabbit-legacy.js */ \"./node_modules/crypto-es/lib/rabbit-legacy.js\");\n/* harmony import */ var _rc4_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./rc4.js */ \"./node_modules/crypto-es/lib/rc4.js\");\n/* harmony import */ var _mode_cfb_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./mode-cfb.js */ \"./node_modules/crypto-es/lib/mode-cfb.js\");\n/* harmony import */ var _mode_ctr_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./mode-ctr.js */ \"./node_modules/crypto-es/lib/mode-ctr.js\");\n/* harmony import */ var _mode_ctr_gladman_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./mode-ctr-gladman.js */ \"./node_modules/crypto-es/lib/mode-ctr-gladman.js\");\n/* harmony import */ var _mode_ecb_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./mode-ecb.js */ \"./node_modules/crypto-es/lib/mode-ecb.js\");\n/* harmony import */ var _mode_ofb_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./mode-ofb.js */ \"./node_modules/crypto-es/lib/mode-ofb.js\");\n/* harmony import */ var _pad_ansix923_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./pad-ansix923.js */ \"./node_modules/crypto-es/lib/pad-ansix923.js\");\n/* harmony import */ var _pad_iso10126_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./pad-iso10126.js */ \"./node_modules/crypto-es/lib/pad-iso10126.js\");\n/* harmony import */ var _pad_iso97971_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./pad-iso97971.js */ \"./node_modules/crypto-es/lib/pad-iso97971.js\");\n/* harmony import */ var _pad_nopadding_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./pad-nopadding.js */ \"./node_modules/crypto-es/lib/pad-nopadding.js\");\n/* harmony import */ var _pad_zeropadding_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pad-zeropadding.js */ \"./node_modules/crypto-es/lib/pad-zeropadding.js\");\n/* harmony import */ var _format_hex_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./format-hex.js */ \"./node_modules/crypto-es/lib/format-hex.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  lib: {\n    Base: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"],\n    WordArray: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"],\n    BufferedBlockAlgorithm: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"BufferedBlockAlgorithm\"],\n    Hasher: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"],\n    Cipher: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"Cipher\"],\n    StreamCipher: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"StreamCipher\"],\n    BlockCipherMode: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"BlockCipherMode\"],\n    BlockCipher: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"BlockCipher\"],\n    CipherParams: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"CipherParams\"],\n    SerializableCipher: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"SerializableCipher\"],\n    PasswordBasedCipher: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"PasswordBasedCipher\"],\n  },\n\n  x64: {\n    Word: _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"],\n    WordArray: _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64WordArray\"],\n  },\n\n  enc: {\n    Hex: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hex\"],\n    Latin1: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Latin1\"],\n    Utf8: _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Utf8\"],\n    Utf16: _enc_utf16_js__WEBPACK_IMPORTED_MODULE_3__[\"Utf16\"],\n    Utf16BE: _enc_utf16_js__WEBPACK_IMPORTED_MODULE_3__[\"Utf16BE\"],\n    Utf16LE: _enc_utf16_js__WEBPACK_IMPORTED_MODULE_3__[\"Utf16LE\"],\n    Base64: _enc_base64_js__WEBPACK_IMPORTED_MODULE_4__[\"Base64\"],\n  },\n\n  algo: {\n    HMAC: _hmac_js__WEBPACK_IMPORTED_MODULE_5__[\"HMAC\"],\n    MD5: _md5_js__WEBPACK_IMPORTED_MODULE_6__[\"MD5Algo\"],\n    SHA1: _sha1_js__WEBPACK_IMPORTED_MODULE_7__[\"SHA1Algo\"],\n    SHA224: _sha224_js__WEBPACK_IMPORTED_MODULE_8__[\"SHA224Algo\"],\n    SHA256: _sha256_js__WEBPACK_IMPORTED_MODULE_9__[\"SHA256Algo\"],\n    SHA384: _sha384_js__WEBPACK_IMPORTED_MODULE_10__[\"SHA384Algo\"],\n    SHA512: _sha512_js__WEBPACK_IMPORTED_MODULE_11__[\"SHA512Algo\"],\n    SHA3: _sha3_js__WEBPACK_IMPORTED_MODULE_12__[\"SHA3Algo\"],\n    RIPEMD160: _ripemd160_js__WEBPACK_IMPORTED_MODULE_13__[\"RIPEMD160Algo\"],\n\n    PBKDF2: _pbkdf2_js__WEBPACK_IMPORTED_MODULE_14__[\"PBKDF2Algo\"],\n    EvpKDF: _evpkdf_js__WEBPACK_IMPORTED_MODULE_15__[\"EvpKDFAlgo\"],\n\n    AES: _aes_js__WEBPACK_IMPORTED_MODULE_16__[\"AESAlgo\"],\n    DES: _tripledes_js__WEBPACK_IMPORTED_MODULE_17__[\"DESAlgo\"],\n    TripleDES: _tripledes_js__WEBPACK_IMPORTED_MODULE_17__[\"TripleDESAlgo\"],\n    Rabbit: _rabbit_js__WEBPACK_IMPORTED_MODULE_18__[\"RabbitAlgo\"],\n    RabbitLegacy: _rabbit_legacy_js__WEBPACK_IMPORTED_MODULE_19__[\"RabbitLegacyAlgo\"],\n    RC4: _rc4_js__WEBPACK_IMPORTED_MODULE_20__[\"RC4Algo\"],\n    RC4Drop: _rc4_js__WEBPACK_IMPORTED_MODULE_20__[\"RC4DropAlgo\"],\n  },\n\n  mode: {\n    CBC: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"CBC\"],\n    CFB: _mode_cfb_js__WEBPACK_IMPORTED_MODULE_21__[\"CFB\"],\n    CTR: _mode_ctr_js__WEBPACK_IMPORTED_MODULE_22__[\"CTR\"],\n    CTRGladman: _mode_ctr_gladman_js__WEBPACK_IMPORTED_MODULE_23__[\"CTRGladman\"],\n    ECB: _mode_ecb_js__WEBPACK_IMPORTED_MODULE_24__[\"ECB\"],\n    OFB: _mode_ofb_js__WEBPACK_IMPORTED_MODULE_25__[\"OFB\"],\n  },\n\n  pad: {\n    Pkcs7: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"Pkcs7\"],\n    AnsiX923: _pad_ansix923_js__WEBPACK_IMPORTED_MODULE_26__[\"AnsiX923\"],\n    Iso10126: _pad_iso10126_js__WEBPACK_IMPORTED_MODULE_27__[\"Iso10126\"],\n    Iso97971: _pad_iso97971_js__WEBPACK_IMPORTED_MODULE_28__[\"Iso97971\"],\n    NoPadding: _pad_nopadding_js__WEBPACK_IMPORTED_MODULE_29__[\"NoPadding\"],\n    ZeroPadding: _pad_zeropadding_js__WEBPACK_IMPORTED_MODULE_30__[\"ZeroPadding\"],\n  },\n\n  format: {\n    OpenSSL: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"OpenSSLFormatter\"],\n    Hex: _format_hex_js__WEBPACK_IMPORTED_MODULE_31__[\"HexFormatter\"],\n  },\n\n  kdf: {\n    OpenSSL: _cipher_core_js__WEBPACK_IMPORTED_MODULE_2__[\"OpenSSLKdf\"],\n  },\n\n  MD5: _md5_js__WEBPACK_IMPORTED_MODULE_6__[\"MD5\"],\n  HmacMD5: _md5_js__WEBPACK_IMPORTED_MODULE_6__[\"HmacMD5\"],\n  SHA1: _sha1_js__WEBPACK_IMPORTED_MODULE_7__[\"SHA1\"],\n  HmacSHA1: _sha1_js__WEBPACK_IMPORTED_MODULE_7__[\"HmacSHA1\"],\n  SHA224: _sha224_js__WEBPACK_IMPORTED_MODULE_8__[\"SHA224\"],\n  HmacSHA224: _sha224_js__WEBPACK_IMPORTED_MODULE_8__[\"HmacSHA224\"],\n  SHA256: _sha256_js__WEBPACK_IMPORTED_MODULE_9__[\"SHA256\"],\n  HmacSHA256: _sha256_js__WEBPACK_IMPORTED_MODULE_9__[\"HmacSHA256\"],\n  SHA384: _sha384_js__WEBPACK_IMPORTED_MODULE_10__[\"SHA384\"],\n  HmacSHA384: _sha384_js__WEBPACK_IMPORTED_MODULE_10__[\"HmacSHA384\"],\n  SHA512: _sha512_js__WEBPACK_IMPORTED_MODULE_11__[\"SHA512\"],\n  HmacSHA512: _sha512_js__WEBPACK_IMPORTED_MODULE_11__[\"HmacSHA512\"],\n  SHA3: _sha3_js__WEBPACK_IMPORTED_MODULE_12__[\"SHA3\"],\n  HmacSHA3: _sha3_js__WEBPACK_IMPORTED_MODULE_12__[\"HmacSHA3\"],\n  RIPEMD160: _ripemd160_js__WEBPACK_IMPORTED_MODULE_13__[\"RIPEMD160\"],\n  HmacRIPEMD160: _ripemd160_js__WEBPACK_IMPORTED_MODULE_13__[\"HmacRIPEMD160\"],\n\n  PBKDF2: _pbkdf2_js__WEBPACK_IMPORTED_MODULE_14__[\"PBKDF2\"],\n  EvpKDF: _evpkdf_js__WEBPACK_IMPORTED_MODULE_15__[\"EvpKDF\"],\n\n  AES: _aes_js__WEBPACK_IMPORTED_MODULE_16__[\"AES\"],\n  DES: _tripledes_js__WEBPACK_IMPORTED_MODULE_17__[\"DES\"],\n  TripleDES: _tripledes_js__WEBPACK_IMPORTED_MODULE_17__[\"TripleDES\"],\n  Rabbit: _rabbit_js__WEBPACK_IMPORTED_MODULE_18__[\"Rabbit\"],\n  RabbitLegacy: _rabbit_legacy_js__WEBPACK_IMPORTED_MODULE_19__[\"RabbitLegacy\"],\n  RC4: _rc4_js__WEBPACK_IMPORTED_MODULE_20__[\"RC4\"],\n  RC4Drop: _rc4_js__WEBPACK_IMPORTED_MODULE_20__[\"RC4Drop\"],\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvaW5kZXguanM/Y2I0OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFRbUI7QUFJSTtBQWFHOztBQUUrQjtBQUNoQjtBQUNSO0FBQ2dCO0FBQ0k7QUFDUTtBQUNBO0FBQ0E7QUFDQTtBQUNSO0FBQ29CO0FBQ3hCO0FBQ0E7QUFDVDtBQU1oQjtBQUN5QjtBQUNtQjtBQU1sRDtBQUNrQjtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ1M7QUFDQTtBQUNBO0FBQ0U7QUFDSTtBQUNKOztBQUVoQztBQUNmO0FBQ0EsSUFBSSxtREFBSTtBQUNSLElBQUksNkRBQVM7QUFDYixJQUFJLHVGQUFzQjtBQUMxQixJQUFJLHVEQUFNO0FBQ1YsSUFBSSw4REFBTTtBQUNWLElBQUksMEVBQVk7QUFDaEIsSUFBSSxnRkFBZTtBQUNuQixJQUFJLHdFQUFXO0FBQ2YsSUFBSSwwRUFBWTtBQUNoQixJQUFJLHNGQUFrQjtBQUN0QixJQUFJLHdGQUFtQjtBQUN2QixHQUFHOztBQUVIO0FBQ0EsVUFBVSxvREFBTztBQUNqQixlQUFlLHlEQUFZO0FBQzNCLEdBQUc7O0FBRUg7QUFDQSxJQUFJLGlEQUFHO0FBQ1AsSUFBSSx1REFBTTtBQUNWLElBQUksbURBQUk7QUFDUixJQUFJLDBEQUFLO0FBQ1QsSUFBSSw4REFBTztBQUNYLElBQUksOERBQU87QUFDWCxJQUFJLDZEQUFNO0FBQ1YsR0FBRzs7QUFFSDtBQUNBLElBQUksbURBQUk7QUFDUixTQUFTLCtDQUFPO0FBQ2hCLFVBQVUsaURBQVE7QUFDbEIsWUFBWSxxREFBVTtBQUN0QixZQUFZLHFEQUFVO0FBQ3RCLFlBQVksc0RBQVU7QUFDdEIsWUFBWSxzREFBVTtBQUN0QixVQUFVLGtEQUFRO0FBQ2xCLGVBQWUsNERBQWE7O0FBRTVCLFlBQVksc0RBQVU7QUFDdEIsWUFBWSxzREFBVTs7QUFFdEIsU0FBUyxnREFBTztBQUNoQixTQUFTLHNEQUFPO0FBQ2hCLGVBQWUsNERBQWE7QUFDNUIsWUFBWSxzREFBVTtBQUN0QixrQkFBa0IsbUVBQWdCO0FBQ2xDLFNBQVMsZ0RBQU87QUFDaEIsYUFBYSxvREFBVztBQUN4QixHQUFHOztBQUVIO0FBQ0EsSUFBSSx3REFBRztBQUNQLElBQUksc0RBQUc7QUFDUCxJQUFJLHNEQUFHO0FBQ1AsSUFBSSw0RUFBVTtBQUNkLElBQUksc0RBQUc7QUFDUCxJQUFJLHNEQUFHO0FBQ1AsR0FBRzs7QUFFSDtBQUNBLElBQUksNERBQUs7QUFDVCxJQUFJLG9FQUFRO0FBQ1osSUFBSSxvRUFBUTtBQUNaLElBQUksb0VBQVE7QUFDWixJQUFJLHVFQUFTO0FBQ2IsSUFBSSw2RUFBVztBQUNmLEdBQUc7O0FBRUg7QUFDQSxhQUFhLGdFQUFnQjtBQUM3QixTQUFTLDREQUFZO0FBQ3JCLEdBQUc7O0FBRUg7QUFDQSxhQUFhLDBEQUFVO0FBQ3ZCLEdBQUc7O0FBRUgsRUFBRSxnREFBRztBQUNMLEVBQUUsd0RBQU87QUFDVCxFQUFFLG1EQUFJO0FBQ04sRUFBRSwyREFBUTtBQUNWLEVBQUUseURBQU07QUFDUixFQUFFLGlFQUFVO0FBQ1osRUFBRSx5REFBTTtBQUNSLEVBQUUsaUVBQVU7QUFDWixFQUFFLDBEQUFNO0FBQ1IsRUFBRSxrRUFBVTtBQUNaLEVBQUUsMERBQU07QUFDUixFQUFFLGtFQUFVO0FBQ1osRUFBRSxvREFBSTtBQUNOLEVBQUUsNERBQVE7QUFDVixFQUFFLG1FQUFTO0FBQ1gsRUFBRSwyRUFBYTs7QUFFZixFQUFFLDBEQUFNO0FBQ1IsRUFBRSwwREFBTTs7QUFFUixFQUFFLGlEQUFHO0FBQ0wsRUFBRSx1REFBRztBQUNMLEVBQUUsbUVBQVM7QUFDWCxFQUFFLDBEQUFNO0FBQ1IsRUFBRSw2RUFBWTtBQUNkLEVBQUUsaURBQUc7QUFDTCxFQUFFLHlEQUFPO0FBQ1QsQ0FBQyxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCYXNlLFxuICBXb3JkQXJyYXksXG4gIEhleCxcbiAgTGF0aW4xLFxuICBVdGY4LFxuICBCdWZmZXJlZEJsb2NrQWxnb3JpdGhtLFxuICBIYXNoZXIsXG59IGZyb20gJy4vY29yZS5qcyc7XG5pbXBvcnQge1xuICBYNjRXb3JkLFxuICBYNjRXb3JkQXJyYXksXG59IGZyb20gJy4veDY0LWNvcmUuanMnO1xuaW1wb3J0IHtcbiAgQ2lwaGVyLFxuICBTdHJlYW1DaXBoZXIsXG4gIEJsb2NrQ2lwaGVyTW9kZSxcbiAgQ0JDLFxuICBQa2NzNyxcbiAgQmxvY2tDaXBoZXIsXG4gIENpcGhlclBhcmFtcyxcbiAgT3BlblNTTEZvcm1hdHRlcixcbiAgU2VyaWFsaXphYmxlQ2lwaGVyLFxuICBPcGVuU1NMS2RmLFxuICBQYXNzd29yZEJhc2VkQ2lwaGVyLFxufSBmcm9tICcuL2NpcGhlci1jb3JlLmpzJztcblxuaW1wb3J0IHsgVXRmMTYsIFV0ZjE2QkUsIFV0ZjE2TEUgfSBmcm9tICcuL2VuYy11dGYxNi5qcyc7XG5pbXBvcnQgeyBCYXNlNjQgfSBmcm9tICcuL2VuYy1iYXNlNjQuanMnO1xuaW1wb3J0IHsgSE1BQyB9IGZyb20gJy4vaG1hYy5qcyc7XG5pbXBvcnQgeyBNRDVBbGdvLCBNRDUsIEhtYWNNRDUgfSBmcm9tICcuL21kNS5qcyc7XG5pbXBvcnQgeyBTSEExQWxnbywgU0hBMSwgSG1hY1NIQTEgfSBmcm9tICcuL3NoYTEuanMnO1xuaW1wb3J0IHsgU0hBMjI0QWxnbywgU0hBMjI0LCBIbWFjU0hBMjI0IH0gZnJvbSAnLi9zaGEyMjQuanMnO1xuaW1wb3J0IHsgU0hBMjU2QWxnbywgU0hBMjU2LCBIbWFjU0hBMjU2IH0gZnJvbSAnLi9zaGEyNTYuanMnO1xuaW1wb3J0IHsgU0hBMzg0QWxnbywgU0hBMzg0LCBIbWFjU0hBMzg0IH0gZnJvbSAnLi9zaGEzODQuanMnO1xuaW1wb3J0IHsgU0hBNTEyQWxnbywgU0hBNTEyLCBIbWFjU0hBNTEyIH0gZnJvbSAnLi9zaGE1MTIuanMnO1xuaW1wb3J0IHsgU0hBM0FsZ28sIFNIQTMsIEhtYWNTSEEzIH0gZnJvbSAnLi9zaGEzLmpzJztcbmltcG9ydCB7IFJJUEVNRDE2MEFsZ28sIFJJUEVNRDE2MCwgSG1hY1JJUEVNRDE2MCB9IGZyb20gJy4vcmlwZW1kMTYwLmpzJztcbmltcG9ydCB7IFBCS0RGMkFsZ28sIFBCS0RGMiB9IGZyb20gJy4vcGJrZGYyLmpzJztcbmltcG9ydCB7IEV2cEtERkFsZ28sIEV2cEtERiB9IGZyb20gJy4vZXZwa2RmLmpzJztcbmltcG9ydCB7IEFFU0FsZ28sIEFFUyB9IGZyb20gJy4vYWVzLmpzJztcbmltcG9ydCB7XG4gIERFU0FsZ28sXG4gIERFUyxcbiAgVHJpcGxlREVTQWxnbyxcbiAgVHJpcGxlREVTLFxufSBmcm9tICcuL3RyaXBsZWRlcy5qcyc7XG5pbXBvcnQgeyBSYWJiaXRBbGdvLCBSYWJiaXQgfSBmcm9tICcuL3JhYmJpdC5qcyc7XG5pbXBvcnQgeyBSYWJiaXRMZWdhY3lBbGdvLCBSYWJiaXRMZWdhY3kgfSBmcm9tICcuL3JhYmJpdC1sZWdhY3kuanMnO1xuaW1wb3J0IHtcbiAgUkM0QWxnbyxcbiAgUkM0LFxuICBSQzREcm9wQWxnbyxcbiAgUkM0RHJvcCxcbn0gZnJvbSAnLi9yYzQuanMnO1xuaW1wb3J0IHsgQ0ZCIH0gZnJvbSAnLi9tb2RlLWNmYi5qcyc7XG5pbXBvcnQgeyBDVFIgfSBmcm9tICcuL21vZGUtY3RyLmpzJztcbmltcG9ydCB7IENUUkdsYWRtYW4gfSBmcm9tICcuL21vZGUtY3RyLWdsYWRtYW4uanMnO1xuaW1wb3J0IHsgRUNCIH0gZnJvbSAnLi9tb2RlLWVjYi5qcyc7XG5pbXBvcnQgeyBPRkIgfSBmcm9tICcuL21vZGUtb2ZiLmpzJztcbmltcG9ydCB7IEFuc2lYOTIzIH0gZnJvbSAnLi9wYWQtYW5zaXg5MjMuanMnO1xuaW1wb3J0IHsgSXNvMTAxMjYgfSBmcm9tICcuL3BhZC1pc28xMDEyNi5qcyc7XG5pbXBvcnQgeyBJc285Nzk3MSB9IGZyb20gJy4vcGFkLWlzbzk3OTcxLmpzJztcbmltcG9ydCB7IE5vUGFkZGluZyB9IGZyb20gJy4vcGFkLW5vcGFkZGluZy5qcyc7XG5pbXBvcnQgeyBaZXJvUGFkZGluZyB9IGZyb20gJy4vcGFkLXplcm9wYWRkaW5nLmpzJztcbmltcG9ydCB7IEhleEZvcm1hdHRlciB9IGZyb20gJy4vZm9ybWF0LWhleC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbGliOiB7XG4gICAgQmFzZSxcbiAgICBXb3JkQXJyYXksXG4gICAgQnVmZmVyZWRCbG9ja0FsZ29yaXRobSxcbiAgICBIYXNoZXIsXG4gICAgQ2lwaGVyLFxuICAgIFN0cmVhbUNpcGhlcixcbiAgICBCbG9ja0NpcGhlck1vZGUsXG4gICAgQmxvY2tDaXBoZXIsXG4gICAgQ2lwaGVyUGFyYW1zLFxuICAgIFNlcmlhbGl6YWJsZUNpcGhlcixcbiAgICBQYXNzd29yZEJhc2VkQ2lwaGVyLFxuICB9LFxuXG4gIHg2NDoge1xuICAgIFdvcmQ6IFg2NFdvcmQsXG4gICAgV29yZEFycmF5OiBYNjRXb3JkQXJyYXksXG4gIH0sXG5cbiAgZW5jOiB7XG4gICAgSGV4LFxuICAgIExhdGluMSxcbiAgICBVdGY4LFxuICAgIFV0ZjE2LFxuICAgIFV0ZjE2QkUsXG4gICAgVXRmMTZMRSxcbiAgICBCYXNlNjQsXG4gIH0sXG5cbiAgYWxnbzoge1xuICAgIEhNQUMsXG4gICAgTUQ1OiBNRDVBbGdvLFxuICAgIFNIQTE6IFNIQTFBbGdvLFxuICAgIFNIQTIyNDogU0hBMjI0QWxnbyxcbiAgICBTSEEyNTY6IFNIQTI1NkFsZ28sXG4gICAgU0hBMzg0OiBTSEEzODRBbGdvLFxuICAgIFNIQTUxMjogU0hBNTEyQWxnbyxcbiAgICBTSEEzOiBTSEEzQWxnbyxcbiAgICBSSVBFTUQxNjA6IFJJUEVNRDE2MEFsZ28sXG5cbiAgICBQQktERjI6IFBCS0RGMkFsZ28sXG4gICAgRXZwS0RGOiBFdnBLREZBbGdvLFxuXG4gICAgQUVTOiBBRVNBbGdvLFxuICAgIERFUzogREVTQWxnbyxcbiAgICBUcmlwbGVERVM6IFRyaXBsZURFU0FsZ28sXG4gICAgUmFiYml0OiBSYWJiaXRBbGdvLFxuICAgIFJhYmJpdExlZ2FjeTogUmFiYml0TGVnYWN5QWxnbyxcbiAgICBSQzQ6IFJDNEFsZ28sXG4gICAgUkM0RHJvcDogUkM0RHJvcEFsZ28sXG4gIH0sXG5cbiAgbW9kZToge1xuICAgIENCQyxcbiAgICBDRkIsXG4gICAgQ1RSLFxuICAgIENUUkdsYWRtYW4sXG4gICAgRUNCLFxuICAgIE9GQixcbiAgfSxcblxuICBwYWQ6IHtcbiAgICBQa2NzNyxcbiAgICBBbnNpWDkyMyxcbiAgICBJc28xMDEyNixcbiAgICBJc285Nzk3MSxcbiAgICBOb1BhZGRpbmcsXG4gICAgWmVyb1BhZGRpbmcsXG4gIH0sXG5cbiAgZm9ybWF0OiB7XG4gICAgT3BlblNTTDogT3BlblNTTEZvcm1hdHRlcixcbiAgICBIZXg6IEhleEZvcm1hdHRlcixcbiAgfSxcblxuICBrZGY6IHtcbiAgICBPcGVuU1NMOiBPcGVuU1NMS2RmLFxuICB9LFxuXG4gIE1ENSxcbiAgSG1hY01ENSxcbiAgU0hBMSxcbiAgSG1hY1NIQTEsXG4gIFNIQTIyNCxcbiAgSG1hY1NIQTIyNCxcbiAgU0hBMjU2LFxuICBIbWFjU0hBMjU2LFxuICBTSEEzODQsXG4gIEhtYWNTSEEzODQsXG4gIFNIQTUxMixcbiAgSG1hY1NIQTUxMixcbiAgU0hBMyxcbiAgSG1hY1NIQTMsXG4gIFJJUEVNRDE2MCxcbiAgSG1hY1JJUEVNRDE2MCxcblxuICBQQktERjIsXG4gIEV2cEtERixcblxuICBBRVMsXG4gIERFUyxcbiAgVHJpcGxlREVTLFxuICBSYWJiaXQsXG4gIFJhYmJpdExlZ2FjeSxcbiAgUkM0LFxuICBSQzREcm9wLFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/index.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/md5.js":
/*!*******************************************!*\
  !*** ./node_modules/crypto-es/lib/md5.js ***!
  \*******************************************/
/*! exports provided: MD5Algo, MD5, HmacMD5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD5Algo\", function() { return MD5Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD5\", function() { return MD5; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacMD5\", function() { return HmacMD5; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nclass MD5Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"] {\n  _doReset() {\n    this._hash = new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"]([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nconst MD5 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nconst HmacMD5 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHmacHelper(MD5Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/md5.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/mode-cfb.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-es/lib/mode-cfb.js ***!
  \************************************************/
/*! exports provided: CFB */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CFB\", function() { return CFB; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\nfunction generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n  const _words = words;\n  let keystream;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Generate keystream\n  if (iv) {\n    keystream = iv.slice(0);\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    keystream = this._prevBlock;\n  }\n  cipher.encryptBlock(keystream, 0);\n\n  // Encrypt\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= keystream[i];\n  }\n}\n\n/**\n * Cipher Feedback block mode.\n */\nclass CFB extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipherMode\"] {\n}\nCFB.Encryptor = class extends CFB {\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\nCFB.Decryptor = class extends CFB {\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1jZmIuanM/MzU1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFFMEI7O0FBRTFCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDTyxrQkFBa0IsK0RBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTs7QUFFdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTs7QUFFdkI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL21vZGUtY2ZiLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQmxvY2tDaXBoZXJNb2RlLFxufSBmcm9tICcuL2NpcGhlci1jb3JlLmpzJztcblxuZnVuY3Rpb24gZ2VuZXJhdGVLZXlzdHJlYW1BbmRFbmNyeXB0KHdvcmRzLCBvZmZzZXQsIGJsb2NrU2l6ZSwgY2lwaGVyKSB7XG4gIGNvbnN0IF93b3JkcyA9IHdvcmRzO1xuICBsZXQga2V5c3RyZWFtO1xuXG4gIC8vIFNob3J0Y3V0XG4gIGNvbnN0IGl2ID0gdGhpcy5faXY7XG5cbiAgLy8gR2VuZXJhdGUga2V5c3RyZWFtXG4gIGlmIChpdikge1xuICAgIGtleXN0cmVhbSA9IGl2LnNsaWNlKDApO1xuXG4gICAgLy8gUmVtb3ZlIElWIGZvciBzdWJzZXF1ZW50IGJsb2Nrc1xuICAgIHRoaXMuX2l2ID0gdW5kZWZpbmVkO1xuICB9IGVsc2Uge1xuICAgIGtleXN0cmVhbSA9IHRoaXMuX3ByZXZCbG9jaztcbiAgfVxuICBjaXBoZXIuZW5jcnlwdEJsb2NrKGtleXN0cmVhbSwgMCk7XG5cbiAgLy8gRW5jcnlwdFxuICBmb3IgKGxldCBpID0gMDsgaSA8IGJsb2NrU2l6ZTsgaSArPSAxKSB7XG4gICAgX3dvcmRzW29mZnNldCArIGldIF49IGtleXN0cmVhbVtpXTtcbiAgfVxufVxuXG4vKipcbiAqIENpcGhlciBGZWVkYmFjayBibG9jayBtb2RlLlxuICovXG5leHBvcnQgY2xhc3MgQ0ZCIGV4dGVuZHMgQmxvY2tDaXBoZXJNb2RlIHtcbn1cbkNGQi5FbmNyeXB0b3IgPSBjbGFzcyBleHRlbmRzIENGQiB7XG4gIHByb2Nlc3NCbG9jayh3b3Jkcywgb2Zmc2V0KSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3QgY2lwaGVyID0gdGhpcy5fY2lwaGVyO1xuICAgIGNvbnN0IHsgYmxvY2tTaXplIH0gPSBjaXBoZXI7XG5cbiAgICBnZW5lcmF0ZUtleXN0cmVhbUFuZEVuY3J5cHQuY2FsbCh0aGlzLCB3b3Jkcywgb2Zmc2V0LCBibG9ja1NpemUsIGNpcGhlcik7XG5cbiAgICAvLyBSZW1lbWJlciB0aGlzIGJsb2NrIHRvIHVzZSB3aXRoIG5leHQgYmxvY2tcbiAgICB0aGlzLl9wcmV2QmxvY2sgPSB3b3Jkcy5zbGljZShvZmZzZXQsIG9mZnNldCArIGJsb2NrU2l6ZSk7XG4gIH1cbn07XG5DRkIuRGVjcnlwdG9yID0gY2xhc3MgZXh0ZW5kcyBDRkIge1xuICBwcm9jZXNzQmxvY2sod29yZHMsIG9mZnNldCkge1xuICAgIC8vIFNob3J0Y3V0c1xuICAgIGNvbnN0IGNpcGhlciA9IHRoaXMuX2NpcGhlcjtcbiAgICBjb25zdCB7IGJsb2NrU2l6ZSB9ID0gY2lwaGVyO1xuXG4gICAgLy8gUmVtZW1iZXIgdGhpcyBibG9jayB0byB1c2Ugd2l0aCBuZXh0IGJsb2NrXG4gICAgY29uc3QgdGhpc0Jsb2NrID0gd29yZHMuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBibG9ja1NpemUpO1xuXG4gICAgZ2VuZXJhdGVLZXlzdHJlYW1BbmRFbmNyeXB0LmNhbGwodGhpcywgd29yZHMsIG9mZnNldCwgYmxvY2tTaXplLCBjaXBoZXIpO1xuXG4gICAgLy8gVGhpcyBibG9jayBiZWNvbWVzIHRoZSBwcmV2aW91cyBibG9ja1xuICAgIHRoaXMuX3ByZXZCbG9jayA9IHRoaXNCbG9jaztcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/mode-cfb.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/mode-ctr-gladman.js":
/*!********************************************************!*\
  !*** ./node_modules/crypto-es/lib/mode-ctr-gladman.js ***!
  \********************************************************/
/*! exports provided: CTRGladman */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CTRGladman\", function() { return CTRGladman; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\nconst incWord = (word) => {\n  let _word = word;\n\n  if (((word >> 24) & 0xff) === 0xff) { // overflow\n    let b1 = (word >> 16) & 0xff;\n    let b2 = (word >> 8) & 0xff;\n    let b3 = word & 0xff;\n\n    if (b1 === 0xff) { // overflow b1\n      b1 = 0;\n      if (b2 === 0xff) {\n        b2 = 0;\n        if (b3 === 0xff) {\n          b3 = 0;\n        } else {\n          b3 += 1;\n        }\n      } else {\n        b2 += 1;\n      }\n    } else {\n      b1 += 1;\n    }\n\n    _word = 0;\n    _word += (b1 << 16);\n    _word += (b2 << 8);\n    _word += b3;\n  } else {\n    _word += (0x01 << 24);\n  }\n  return _word;\n};\n\nconst incCounter = (counter) => {\n  const _counter = counter;\n  _counter[0] = incWord(_counter[0]);\n\n  if (_counter[0] === 0) {\n    // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n    _counter[1] = incWord(_counter[1]);\n  }\n  return _counter;\n};\n\n/** @preserve\n * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n * derived from CryptoJS.mode.CTR\n * Jan Hruby jhruby.web@gmail.com\n */\nclass CTRGladman extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipherMode\"] {\n}\nCTRGladman.Encryptor = class extends CTRGladman {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n\n    incCounter(counter);\n\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTRGladman.Decryptor = CTRGladman.Encryptor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1jdHItZ2xhZG1hbi5qcz9lNTM4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUUwQjs7QUFFMUI7QUFDQTs7QUFFQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QiwrREFBZTtBQUMvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsZUFBZTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1jdHItZ2xhZG1hbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEJsb2NrQ2lwaGVyTW9kZSxcbn0gZnJvbSAnLi9jaXBoZXItY29yZS5qcyc7XG5cbmNvbnN0IGluY1dvcmQgPSAod29yZCkgPT4ge1xuICBsZXQgX3dvcmQgPSB3b3JkO1xuXG4gIGlmICgoKHdvcmQgPj4gMjQpICYgMHhmZikgPT09IDB4ZmYpIHsgLy8gb3ZlcmZsb3dcbiAgICBsZXQgYjEgPSAod29yZCA+PiAxNikgJiAweGZmO1xuICAgIGxldCBiMiA9ICh3b3JkID4+IDgpICYgMHhmZjtcbiAgICBsZXQgYjMgPSB3b3JkICYgMHhmZjtcblxuICAgIGlmIChiMSA9PT0gMHhmZikgeyAvLyBvdmVyZmxvdyBiMVxuICAgICAgYjEgPSAwO1xuICAgICAgaWYgKGIyID09PSAweGZmKSB7XG4gICAgICAgIGIyID0gMDtcbiAgICAgICAgaWYgKGIzID09PSAweGZmKSB7XG4gICAgICAgICAgYjMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGIzICs9IDE7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGIyICs9IDE7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGIxICs9IDE7XG4gICAgfVxuXG4gICAgX3dvcmQgPSAwO1xuICAgIF93b3JkICs9IChiMSA8PCAxNik7XG4gICAgX3dvcmQgKz0gKGIyIDw8IDgpO1xuICAgIF93b3JkICs9IGIzO1xuICB9IGVsc2Uge1xuICAgIF93b3JkICs9ICgweDAxIDw8IDI0KTtcbiAgfVxuICByZXR1cm4gX3dvcmQ7XG59O1xuXG5jb25zdCBpbmNDb3VudGVyID0gKGNvdW50ZXIpID0+IHtcbiAgY29uc3QgX2NvdW50ZXIgPSBjb3VudGVyO1xuICBfY291bnRlclswXSA9IGluY1dvcmQoX2NvdW50ZXJbMF0pO1xuXG4gIGlmIChfY291bnRlclswXSA9PT0gMCkge1xuICAgIC8vIGVuY3JfZGF0YSBpbiBmaWxlZW5jLmMgZnJvbSAgRHIgQnJpYW4gR2xhZG1hbidzIGNvdW50cyBvbmx5IHdpdGggRFdPUkQgaiA8IDhcbiAgICBfY291bnRlclsxXSA9IGluY1dvcmQoX2NvdW50ZXJbMV0pO1xuICB9XG4gIHJldHVybiBfY291bnRlcjtcbn07XG5cbi8qKiBAcHJlc2VydmVcbiAqIENvdW50ZXIgYmxvY2sgbW9kZSBjb21wYXRpYmxlIHdpdGggIERyIEJyaWFuIEdsYWRtYW4gZmlsZWVuYy5jXG4gKiBkZXJpdmVkIGZyb20gQ3J5cHRvSlMubW9kZS5DVFJcbiAqIEphbiBIcnVieSBqaHJ1Ynkud2ViQGdtYWlsLmNvbVxuICovXG5leHBvcnQgY2xhc3MgQ1RSR2xhZG1hbiBleHRlbmRzIEJsb2NrQ2lwaGVyTW9kZSB7XG59XG5DVFJHbGFkbWFuLkVuY3J5cHRvciA9IGNsYXNzIGV4dGVuZHMgQ1RSR2xhZG1hbiB7XG4gIHByb2Nlc3NCbG9jayh3b3Jkcywgb2Zmc2V0KSB7XG4gICAgY29uc3QgX3dvcmRzID0gd29yZHM7XG5cbiAgICAvLyBTaG9ydGN1dHNcbiAgICBjb25zdCBjaXBoZXIgPSB0aGlzLl9jaXBoZXI7XG4gICAgY29uc3QgeyBibG9ja1NpemUgfSA9IGNpcGhlcjtcbiAgICBjb25zdCBpdiA9IHRoaXMuX2l2O1xuICAgIGxldCBjb3VudGVyID0gdGhpcy5fY291bnRlcjtcblxuICAgIC8vIEdlbmVyYXRlIGtleXN0cmVhbVxuICAgIGlmIChpdikge1xuICAgICAgdGhpcy5fY291bnRlciA9IGl2LnNsaWNlKDApO1xuICAgICAgY291bnRlciA9IHRoaXMuX2NvdW50ZXI7XG5cbiAgICAgIC8vIFJlbW92ZSBJViBmb3Igc3Vic2VxdWVudCBibG9ja3NcbiAgICAgIHRoaXMuX2l2ID0gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGluY0NvdW50ZXIoY291bnRlcik7XG5cbiAgICBjb25zdCBrZXlzdHJlYW0gPSBjb3VudGVyLnNsaWNlKDApO1xuICAgIGNpcGhlci5lbmNyeXB0QmxvY2soa2V5c3RyZWFtLCAwKTtcblxuICAgIC8vIEVuY3J5cHRcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJsb2NrU2l6ZTsgaSArPSAxKSB7XG4gICAgICBfd29yZHNbb2Zmc2V0ICsgaV0gXj0ga2V5c3RyZWFtW2ldO1xuICAgIH1cbiAgfVxufTtcbkNUUkdsYWRtYW4uRGVjcnlwdG9yID0gQ1RSR2xhZG1hbi5FbmNyeXB0b3I7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/mode-ctr-gladman.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/mode-ctr.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-es/lib/mode-ctr.js ***!
  \************************************************/
/*! exports provided: CTR */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CTR\", function() { return CTR; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n/**\n * Counter block mode.\n */\n\n\nclass CTR extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipherMode\"] {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1jdHIuanM/Yjg1OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFHMEI7O0FBRW5CLGtCQUFrQiwrREFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLGVBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL21vZGUtY3RyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3VudGVyIGJsb2NrIG1vZGUuXG4gKi9cbmltcG9ydCB7XG4gIEJsb2NrQ2lwaGVyTW9kZSxcbn0gZnJvbSAnLi9jaXBoZXItY29yZS5qcyc7XG5cbmV4cG9ydCBjbGFzcyBDVFIgZXh0ZW5kcyBCbG9ja0NpcGhlck1vZGUge1xufVxuQ1RSLkVuY3J5cHRvciA9IGNsYXNzIGV4dGVuZHMgQ1RSIHtcbiAgcHJvY2Vzc0Jsb2NrKHdvcmRzLCBvZmZzZXQpIHtcbiAgICBjb25zdCBfd29yZHMgPSB3b3JkcztcblxuICAgIC8vIFNob3J0Y3V0c1xuICAgIGNvbnN0IGNpcGhlciA9IHRoaXMuX2NpcGhlcjtcbiAgICBjb25zdCB7IGJsb2NrU2l6ZSB9ID0gY2lwaGVyO1xuICAgIGNvbnN0IGl2ID0gdGhpcy5faXY7XG4gICAgbGV0IGNvdW50ZXIgPSB0aGlzLl9jb3VudGVyO1xuXG4gICAgLy8gR2VuZXJhdGUga2V5c3RyZWFtXG4gICAgaWYgKGl2KSB7XG4gICAgICB0aGlzLl9jb3VudGVyID0gaXYuc2xpY2UoMCk7XG4gICAgICBjb3VudGVyID0gdGhpcy5fY291bnRlcjtcblxuICAgICAgLy8gUmVtb3ZlIElWIGZvciBzdWJzZXF1ZW50IGJsb2Nrc1xuICAgICAgdGhpcy5faXYgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGtleXN0cmVhbSA9IGNvdW50ZXIuc2xpY2UoMCk7XG4gICAgY2lwaGVyLmVuY3J5cHRCbG9jayhrZXlzdHJlYW0sIDApO1xuXG4gICAgLy8gSW5jcmVtZW50IGNvdW50ZXJcbiAgICBjb3VudGVyW2Jsb2NrU2l6ZSAtIDFdID0gKGNvdW50ZXJbYmxvY2tTaXplIC0gMV0gKyAxKSB8IDA7XG5cbiAgICAvLyBFbmNyeXB0XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBibG9ja1NpemU7IGkgKz0gMSkge1xuICAgICAgX3dvcmRzW29mZnNldCArIGldIF49IGtleXN0cmVhbVtpXTtcbiAgICB9XG4gIH1cbn07XG5DVFIuRGVjcnlwdG9yID0gQ1RSLkVuY3J5cHRvcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/mode-ctr.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/mode-ecb.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-es/lib/mode-ecb.js ***!
  \************************************************/
/*! exports provided: ECB */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ECB\", function() { return ECB; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n/**\n * Electronic Codebook block mode.\n */\n\n\nclass ECB extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipherMode\"] {\n}\nECB.Encryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.encryptBlock(words, offset);\n  }\n};\nECB.Decryptor = class extends ECB {\n  processBlock(words, offset) {\n    this._cipher.decryptBlock(words, offset);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1lY2IuanM/MjZjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFHMEI7O0FBRW5CLGtCQUFrQiwrREFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1lY2IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVsZWN0cm9uaWMgQ29kZWJvb2sgYmxvY2sgbW9kZS5cbiAqL1xuaW1wb3J0IHtcbiAgQmxvY2tDaXBoZXJNb2RlLFxufSBmcm9tICcuL2NpcGhlci1jb3JlLmpzJztcblxuZXhwb3J0IGNsYXNzIEVDQiBleHRlbmRzIEJsb2NrQ2lwaGVyTW9kZSB7XG59XG5FQ0IuRW5jcnlwdG9yID0gY2xhc3MgZXh0ZW5kcyBFQ0Ige1xuICBwcm9jZXNzQmxvY2sod29yZHMsIG9mZnNldCkge1xuICAgIHRoaXMuX2NpcGhlci5lbmNyeXB0QmxvY2sod29yZHMsIG9mZnNldCk7XG4gIH1cbn07XG5FQ0IuRGVjcnlwdG9yID0gY2xhc3MgZXh0ZW5kcyBFQ0Ige1xuICBwcm9jZXNzQmxvY2sod29yZHMsIG9mZnNldCkge1xuICAgIHRoaXMuX2NpcGhlci5kZWNyeXB0QmxvY2sod29yZHMsIG9mZnNldCk7XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/mode-ecb.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/mode-ofb.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-es/lib/mode-ofb.js ***!
  \************************************************/
/*! exports provided: OFB */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OFB\", function() { return OFB; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n/**\n * Output Feedback block mode.\n */\n\n\nclass OFB extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"BlockCipherMode\"] {\n}\nOFB.Encryptor = class extends OFB {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let keystream = this._keystream;\n\n    // Generate keystream\n    if (iv) {\n      this._keystream = iv.slice(0);\n      keystream = this._keystream;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    cipher.encryptBlock(keystream, 0);\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nOFB.Decryptor = OFB.Encryptor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1vZmIuanM/YzI1YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFHMEI7O0FBRW5CLGtCQUFrQiwrREFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsZUFBZTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvbW9kZS1vZmIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE91dHB1dCBGZWVkYmFjayBibG9jayBtb2RlLlxuICovXG5pbXBvcnQge1xuICBCbG9ja0NpcGhlck1vZGUsXG59IGZyb20gJy4vY2lwaGVyLWNvcmUuanMnO1xuXG5leHBvcnQgY2xhc3MgT0ZCIGV4dGVuZHMgQmxvY2tDaXBoZXJNb2RlIHtcbn1cbk9GQi5FbmNyeXB0b3IgPSBjbGFzcyBleHRlbmRzIE9GQiB7XG4gIHByb2Nlc3NCbG9jayh3b3Jkcywgb2Zmc2V0KSB7XG4gICAgY29uc3QgX3dvcmRzID0gd29yZHM7XG5cbiAgICAvLyBTaG9ydGN1dHNcbiAgICBjb25zdCBjaXBoZXIgPSB0aGlzLl9jaXBoZXI7XG4gICAgY29uc3QgeyBibG9ja1NpemUgfSA9IGNpcGhlcjtcbiAgICBjb25zdCBpdiA9IHRoaXMuX2l2O1xuICAgIGxldCBrZXlzdHJlYW0gPSB0aGlzLl9rZXlzdHJlYW07XG5cbiAgICAvLyBHZW5lcmF0ZSBrZXlzdHJlYW1cbiAgICBpZiAoaXYpIHtcbiAgICAgIHRoaXMuX2tleXN0cmVhbSA9IGl2LnNsaWNlKDApO1xuICAgICAga2V5c3RyZWFtID0gdGhpcy5fa2V5c3RyZWFtO1xuXG4gICAgICAvLyBSZW1vdmUgSVYgZm9yIHN1YnNlcXVlbnQgYmxvY2tzXG4gICAgICB0aGlzLl9pdiA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY2lwaGVyLmVuY3J5cHRCbG9jayhrZXlzdHJlYW0sIDApO1xuXG4gICAgLy8gRW5jcnlwdFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmxvY2tTaXplOyBpICs9IDEpIHtcbiAgICAgIF93b3Jkc1tvZmZzZXQgKyBpXSBePSBrZXlzdHJlYW1baV07XG4gICAgfVxuICB9XG59O1xuT0ZCLkRlY3J5cHRvciA9IE9GQi5FbmNyeXB0b3I7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/mode-ofb.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/pad-ansix923.js":
/*!****************************************************!*\
  !*** ./node_modules/crypto-es/lib/pad-ansix923.js ***!
  \****************************************************/
/*! exports provided: AnsiX923 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnsiX923\", function() { return AnsiX923; });\n/**\n * ANSI X.923 padding strategy.\n */\nconst AnsiX923 = {\n  pad(data, blockSize) {\n    const _data = data;\n\n    // Shortcuts\n    const dataSigBytes = _data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (dataSigBytes % blockSizeBytes);\n\n    // Compute last byte position\n    const lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n    // Pad\n    _data.clamp();\n    _data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n    _data.sigBytes += nPaddingBytes;\n  },\n\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGFkLWFuc2l4OTIzLmpzP2NiZjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL3BhZC1hbnNpeDkyMy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQU5TSSBYLjkyMyBwYWRkaW5nIHN0cmF0ZWd5LlxuICovXG5leHBvcnQgY29uc3QgQW5zaVg5MjMgPSB7XG4gIHBhZChkYXRhLCBibG9ja1NpemUpIHtcbiAgICBjb25zdCBfZGF0YSA9IGRhdGE7XG5cbiAgICAvLyBTaG9ydGN1dHNcbiAgICBjb25zdCBkYXRhU2lnQnl0ZXMgPSBfZGF0YS5zaWdCeXRlcztcbiAgICBjb25zdCBibG9ja1NpemVCeXRlcyA9IGJsb2NrU2l6ZSAqIDQ7XG5cbiAgICAvLyBDb3VudCBwYWRkaW5nIGJ5dGVzXG4gICAgY29uc3QgblBhZGRpbmdCeXRlcyA9IGJsb2NrU2l6ZUJ5dGVzIC0gKGRhdGFTaWdCeXRlcyAlIGJsb2NrU2l6ZUJ5dGVzKTtcblxuICAgIC8vIENvbXB1dGUgbGFzdCBieXRlIHBvc2l0aW9uXG4gICAgY29uc3QgbGFzdEJ5dGVQb3MgPSBkYXRhU2lnQnl0ZXMgKyBuUGFkZGluZ0J5dGVzIC0gMTtcblxuICAgIC8vIFBhZFxuICAgIF9kYXRhLmNsYW1wKCk7XG4gICAgX2RhdGEud29yZHNbbGFzdEJ5dGVQb3MgPj4+IDJdIHw9IG5QYWRkaW5nQnl0ZXMgPDwgKDI0IC0gKGxhc3RCeXRlUG9zICUgNCkgKiA4KTtcbiAgICBfZGF0YS5zaWdCeXRlcyArPSBuUGFkZGluZ0J5dGVzO1xuICB9LFxuXG4gIHVucGFkKGRhdGEpIHtcbiAgICBjb25zdCBfZGF0YSA9IGRhdGE7XG5cbiAgICAvLyBHZXQgbnVtYmVyIG9mIHBhZGRpbmcgYnl0ZXMgZnJvbSBsYXN0IGJ5dGVcbiAgICBjb25zdCBuUGFkZGluZ0J5dGVzID0gX2RhdGEud29yZHNbKF9kYXRhLnNpZ0J5dGVzIC0gMSkgPj4+IDJdICYgMHhmZjtcblxuICAgIC8vIFJlbW92ZSBwYWRkaW5nXG4gICAgX2RhdGEuc2lnQnl0ZXMgLT0gblBhZGRpbmdCeXRlcztcbiAgfSxcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/pad-ansix923.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/pad-iso10126.js":
/*!****************************************************!*\
  !*** ./node_modules/crypto-es/lib/pad-iso10126.js ***!
  \****************************************************/
/*! exports provided: Iso10126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iso10126\", function() { return Iso10126; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\n/**\n * ISO 10126 padding strategy.\n */\nconst Iso10126 = {\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Pad\n    data\n      .concat(_core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].random(nPaddingBytes - 1))\n      .concat(_core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([nPaddingBytes << 24], 1));\n  },\n\n  unpad(data) {\n    const _data = data;\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGFkLWlzbzEwMTI2LmpzP2ZjMGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBRW1COztBQUVuQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLGtEQUFTO0FBQ3ZCLGNBQWMsa0RBQVM7QUFDdkIsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGFkLWlzbzEwMTI2LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgV29yZEFycmF5LFxufSBmcm9tICcuL2NvcmUuanMnO1xuXG4vKipcbiAqIElTTyAxMDEyNiBwYWRkaW5nIHN0cmF0ZWd5LlxuICovXG5leHBvcnQgY29uc3QgSXNvMTAxMjYgPSB7XG4gIHBhZChkYXRhLCBibG9ja1NpemUpIHtcbiAgICAvLyBTaG9ydGN1dFxuICAgIGNvbnN0IGJsb2NrU2l6ZUJ5dGVzID0gYmxvY2tTaXplICogNDtcblxuICAgIC8vIENvdW50IHBhZGRpbmcgYnl0ZXNcbiAgICBjb25zdCBuUGFkZGluZ0J5dGVzID0gYmxvY2tTaXplQnl0ZXMgLSAoZGF0YS5zaWdCeXRlcyAlIGJsb2NrU2l6ZUJ5dGVzKTtcblxuICAgIC8vIFBhZFxuICAgIGRhdGFcbiAgICAgIC5jb25jYXQoV29yZEFycmF5LnJhbmRvbShuUGFkZGluZ0J5dGVzIC0gMSkpXG4gICAgICAuY29uY2F0KFdvcmRBcnJheS5jcmVhdGUoW25QYWRkaW5nQnl0ZXMgPDwgMjRdLCAxKSk7XG4gIH0sXG5cbiAgdW5wYWQoZGF0YSkge1xuICAgIGNvbnN0IF9kYXRhID0gZGF0YTtcbiAgICAvLyBHZXQgbnVtYmVyIG9mIHBhZGRpbmcgYnl0ZXMgZnJvbSBsYXN0IGJ5dGVcbiAgICBjb25zdCBuUGFkZGluZ0J5dGVzID0gX2RhdGEud29yZHNbKF9kYXRhLnNpZ0J5dGVzIC0gMSkgPj4+IDJdICYgMHhmZjtcblxuICAgIC8vIFJlbW92ZSBwYWRkaW5nXG4gICAgX2RhdGEuc2lnQnl0ZXMgLT0gblBhZGRpbmdCeXRlcztcbiAgfSxcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/pad-iso10126.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/pad-iso97971.js":
/*!****************************************************!*\
  !*** ./node_modules/crypto-es/lib/pad-iso97971.js ***!
  \****************************************************/
/*! exports provided: Iso97971 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iso97971\", function() { return Iso97971; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _pad_zeropadding_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad-zeropadding.js */ \"./node_modules/crypto-es/lib/pad-zeropadding.js\");\n\n\n\n/**\n * ISO/IEC 9797-1 Padding Method 2.\n */\nconst Iso97971 = {\n  pad(data, blockSize) {\n    // Add 0x80 byte\n    data.concat(_core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([0x80000000], 1));\n\n    // Zero pad the rest\n    _pad_zeropadding_js__WEBPACK_IMPORTED_MODULE_1__[\"ZeroPadding\"].pad(data, blockSize);\n  },\n\n  unpad(data) {\n    const _data = data;\n\n    // Remove zero padding\n    _pad_zeropadding_js__WEBPACK_IMPORTED_MODULE_1__[\"ZeroPadding\"].unpad(_data);\n\n    // Remove one more byte -- the 0x80 byte\n    _data.sigBytes -= 1;\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGFkLWlzbzk3OTcxLmpzPzdmMjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFFbUI7QUFHVzs7QUFFOUI7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZ0JBQWdCLGtEQUFTOztBQUV6QjtBQUNBLElBQUksK0RBQVc7QUFDZixHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLCtEQUFXOztBQUVmO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3J5cHRvLWVzL2xpYi9wYWQtaXNvOTc5NzEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBXb3JkQXJyYXksXG59IGZyb20gJy4vY29yZS5qcyc7XG5pbXBvcnQge1xuICBaZXJvUGFkZGluZyxcbn0gZnJvbSAnLi9wYWQtemVyb3BhZGRpbmcuanMnO1xuXG4vKipcbiAqIElTTy9JRUMgOTc5Ny0xIFBhZGRpbmcgTWV0aG9kIDIuXG4gKi9cbmV4cG9ydCBjb25zdCBJc285Nzk3MSA9IHtcbiAgcGFkKGRhdGEsIGJsb2NrU2l6ZSkge1xuICAgIC8vIEFkZCAweDgwIGJ5dGVcbiAgICBkYXRhLmNvbmNhdChXb3JkQXJyYXkuY3JlYXRlKFsweDgwMDAwMDAwXSwgMSkpO1xuXG4gICAgLy8gWmVybyBwYWQgdGhlIHJlc3RcbiAgICBaZXJvUGFkZGluZy5wYWQoZGF0YSwgYmxvY2tTaXplKTtcbiAgfSxcblxuICB1bnBhZChkYXRhKSB7XG4gICAgY29uc3QgX2RhdGEgPSBkYXRhO1xuXG4gICAgLy8gUmVtb3ZlIHplcm8gcGFkZGluZ1xuICAgIFplcm9QYWRkaW5nLnVucGFkKF9kYXRhKTtcblxuICAgIC8vIFJlbW92ZSBvbmUgbW9yZSBieXRlIC0tIHRoZSAweDgwIGJ5dGVcbiAgICBfZGF0YS5zaWdCeXRlcyAtPSAxO1xuICB9LFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/pad-iso97971.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/pad-nopadding.js":
/*!*****************************************************!*\
  !*** ./node_modules/crypto-es/lib/pad-nopadding.js ***!
  \*****************************************************/
/*! exports provided: NoPadding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoPadding\", function() { return NoPadding; });\n/**\n * A noop padding strategy.\n */\nconst NoPadding = {\n  pad() {\n  },\n\n  unpad() {\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGFkLW5vcGFkZGluZy5qcz8xMjY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL3BhZC1ub3BhZGRpbmcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgbm9vcCBwYWRkaW5nIHN0cmF0ZWd5LlxuICovXG5leHBvcnQgY29uc3QgTm9QYWRkaW5nID0ge1xuICBwYWQoKSB7XG4gIH0sXG5cbiAgdW5wYWQoKSB7XG4gIH0sXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/pad-nopadding.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/pad-zeropadding.js":
/*!*******************************************************!*\
  !*** ./node_modules/crypto-es/lib/pad-zeropadding.js ***!
  \*******************************************************/
/*! exports provided: ZeroPadding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ZeroPadding\", function() { return ZeroPadding; });\n/**\n * Zero padding strategy.\n */\nconst ZeroPadding = {\n  pad(data, blockSize) {\n    const _data = data;\n\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Pad\n    _data.clamp();\n    _data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n  },\n\n  unpad(data) {\n    const _data = data;\n\n    // Shortcut\n    const dataWords = _data.words;\n\n    // Unpad\n    for (let i = _data.sigBytes - 1; i >= 0; i -= 1) {\n      if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n        _data.sigBytes = i + 1;\n        break;\n      }\n    }\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGFkLXplcm9wYWRkaW5nLmpzPzM2MTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0NBQW9DLFFBQVE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9jcnlwdG8tZXMvbGliL3BhZC16ZXJvcGFkZGluZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogWmVybyBwYWRkaW5nIHN0cmF0ZWd5LlxuICovXG5leHBvcnQgY29uc3QgWmVyb1BhZGRpbmcgPSB7XG4gIHBhZChkYXRhLCBibG9ja1NpemUpIHtcbiAgICBjb25zdCBfZGF0YSA9IGRhdGE7XG5cbiAgICAvLyBTaG9ydGN1dFxuICAgIGNvbnN0IGJsb2NrU2l6ZUJ5dGVzID0gYmxvY2tTaXplICogNDtcblxuICAgIC8vIFBhZFxuICAgIF9kYXRhLmNsYW1wKCk7XG4gICAgX2RhdGEuc2lnQnl0ZXMgKz0gYmxvY2tTaXplQnl0ZXMgLSAoKGRhdGEuc2lnQnl0ZXMgJSBibG9ja1NpemVCeXRlcykgfHwgYmxvY2tTaXplQnl0ZXMpO1xuICB9LFxuXG4gIHVucGFkKGRhdGEpIHtcbiAgICBjb25zdCBfZGF0YSA9IGRhdGE7XG5cbiAgICAvLyBTaG9ydGN1dFxuICAgIGNvbnN0IGRhdGFXb3JkcyA9IF9kYXRhLndvcmRzO1xuXG4gICAgLy8gVW5wYWRcbiAgICBmb3IgKGxldCBpID0gX2RhdGEuc2lnQnl0ZXMgLSAxOyBpID49IDA7IGkgLT0gMSkge1xuICAgICAgaWYgKCgoZGF0YVdvcmRzW2kgPj4+IDJdID4+PiAoMjQgLSAoaSAlIDQpICogOCkpICYgMHhmZikpIHtcbiAgICAgICAgX2RhdGEuc2lnQnl0ZXMgPSBpICsgMTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9LFxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/pad-zeropadding.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/pbkdf2.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/pbkdf2.js ***!
  \**********************************************/
/*! exports provided: PBKDF2Algo, PBKDF2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PBKDF2Algo\", function() { return PBKDF2Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PBKDF2\", function() { return PBKDF2; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/crypto-es/lib/sha1.js\");\n/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hmac.js */ \"./node_modules/crypto-es/lib/hmac.js\");\n\n\n\n\n/**\n * Password-Based Key Derivation Function 2 algorithm.\n */\nclass PBKDF2Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.PBKDF2.create();\n   *     const kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hasher to use. Default: SHA1\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"](),\n      {\n        keySize: 128 / 32,\n        hasher: _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA1Algo\"],\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Computes the Password-Based Key Derivation Function 2.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    // Shortcut\n    const { cfg } = this;\n\n    // Init HMAC\n    const hmac = _hmac_js__WEBPACK_IMPORTED_MODULE_2__[\"HMAC\"].create(cfg.hasher, password);\n\n    // Initial values\n    const derivedKey = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create();\n    const blockIndex = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([0x00000001]);\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const blockIndexWords = blockIndex.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      const block = hmac.update(salt).finalize(blockIndex);\n      hmac.reset();\n\n      // Shortcuts\n      const blockWords = block.words;\n      const blockWordsLength = blockWords.length;\n\n      // Iterations\n      let intermediate = block;\n      for (let i = 1; i < iterations; i += 1) {\n        intermediate = hmac.finalize(intermediate);\n        hmac.reset();\n\n        // Shortcut\n        const intermediateWords = intermediate.words;\n\n        // XOR intermediate with block\n        for (let j = 0; j < blockWordsLength; j += 1) {\n          blockWords[j] ^= intermediateWords[j];\n        }\n      }\n\n      derivedKey.concat(block);\n      blockIndexWords[0] += 1;\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Computes the Password-Based Key Derivation Function 2.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.PBKDF2(password, salt);\n *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n */\nconst PBKDF2 = (password, salt, cfg) => PBKDF2Algo.create(cfg).compute(password, salt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGJrZGYyLmpzPzQ0MTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR21CO0FBQ2tCO0FBQ0o7O0FBRWpDO0FBQ0E7QUFDQTtBQUNPLHlCQUF5Qiw2Q0FBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsYUFBYTtBQUMvRCxrREFBa0QsK0JBQStCO0FBQ2pGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QixrQkFBa0IsT0FBTztBQUN6QixrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0EsVUFBVSw2Q0FBSTtBQUNkO0FBQ0E7QUFDQSxnQkFBZ0IsaURBQVE7QUFDeEI7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNOztBQUVqQjtBQUNBLGlCQUFpQiw2Q0FBSTs7QUFFckI7QUFDQSx1QkFBdUIsa0RBQVM7QUFDaEMsdUJBQXVCLGtEQUFTOztBQUVoQztBQUNBO0FBQ0E7QUFDQSxXQUFXLHNCQUFzQjs7QUFFakM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsZ0JBQWdCO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGlCQUFpQjtBQUM1QixXQUFXLE9BQU87QUFDbEI7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGFBQWE7QUFDL0Qsa0RBQWtELCtCQUErQjtBQUNqRjtBQUNPIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcGJrZGYyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQmFzZSxcbiAgV29yZEFycmF5LFxufSBmcm9tICcuL2NvcmUuanMnO1xuaW1wb3J0IHsgU0hBMUFsZ28gfSBmcm9tICcuL3NoYTEuanMnO1xuaW1wb3J0IHsgSE1BQyB9IGZyb20gJy4vaG1hYy5qcyc7XG5cbi8qKlxuICogUGFzc3dvcmQtQmFzZWQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24gMiBhbGdvcml0aG0uXG4gKi9cbmV4cG9ydCBjbGFzcyBQQktERjJBbGdvIGV4dGVuZHMgQmFzZSB7XG4gIC8qKlxuICAgKiBJbml0aWFsaXplcyBhIG5ld2x5IGNyZWF0ZWQga2V5IGRlcml2YXRpb24gZnVuY3Rpb24uXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjZmcgKE9wdGlvbmFsKSBUaGUgY29uZmlndXJhdGlvbiBvcHRpb25zIHRvIHVzZSBmb3IgdGhlIGRlcml2YXRpb24uXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqICAgICBjb25zdCBrZGYgPSBDcnlwdG9KUy5hbGdvLlBCS0RGMi5jcmVhdGUoKTtcbiAgICogICAgIGNvbnN0IGtkZiA9IENyeXB0b0pTLmFsZ28uUEJLREYyLmNyZWF0ZSh7IGtleVNpemU6IDggfSk7XG4gICAqICAgICBjb25zdCBrZGYgPSBDcnlwdG9KUy5hbGdvLlBCS0RGMi5jcmVhdGUoeyBrZXlTaXplOiA4LCBpdGVyYXRpb25zOiAxMDAwIH0pO1xuICAgKi9cbiAgY29uc3RydWN0b3IoY2ZnKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIC8qKlxuICAgICAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBrZXlTaXplIFRoZSBrZXkgc2l6ZSBpbiB3b3JkcyB0byBnZW5lcmF0ZS4gRGVmYXVsdDogNCAoMTI4IGJpdHMpXG4gICAgICogQHByb3BlcnR5IHtIYXNoZXJ9IGhhc2hlciBUaGUgaGFzaGVyIHRvIHVzZS4gRGVmYXVsdDogU0hBMVxuICAgICAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBpdGVyYXRpb25zIFRoZSBudW1iZXIgb2YgaXRlcmF0aW9ucyB0byBwZXJmb3JtLiBEZWZhdWx0OiAxXG4gICAgICovXG4gICAgdGhpcy5jZmcgPSBPYmplY3QuYXNzaWduKFxuICAgICAgbmV3IEJhc2UoKSxcbiAgICAgIHtcbiAgICAgICAga2V5U2l6ZTogMTI4IC8gMzIsXG4gICAgICAgIGhhc2hlcjogU0hBMUFsZ28sXG4gICAgICAgIGl0ZXJhdGlvbnM6IDEsXG4gICAgICB9LFxuICAgICAgY2ZnLFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQ29tcHV0ZXMgdGhlIFBhc3N3b3JkLUJhc2VkIEtleSBEZXJpdmF0aW9uIEZ1bmN0aW9uIDIuXG4gICAqXG4gICAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gcGFzc3dvcmQgVGhlIHBhc3N3b3JkLlxuICAgKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IHNhbHQgQSBzYWx0LlxuICAgKlxuICAgKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBkZXJpdmVkIGtleS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogICAgIGNvbnN0IGtleSA9IGtkZi5jb21wdXRlKHBhc3N3b3JkLCBzYWx0KTtcbiAgICovXG4gIGNvbXB1dGUocGFzc3dvcmQsIHNhbHQpIHtcbiAgICAvLyBTaG9ydGN1dFxuICAgIGNvbnN0IHsgY2ZnIH0gPSB0aGlzO1xuXG4gICAgLy8gSW5pdCBITUFDXG4gICAgY29uc3QgaG1hYyA9IEhNQUMuY3JlYXRlKGNmZy5oYXNoZXIsIHBhc3N3b3JkKTtcblxuICAgIC8vIEluaXRpYWwgdmFsdWVzXG4gICAgY29uc3QgZGVyaXZlZEtleSA9IFdvcmRBcnJheS5jcmVhdGUoKTtcbiAgICBjb25zdCBibG9ja0luZGV4ID0gV29yZEFycmF5LmNyZWF0ZShbMHgwMDAwMDAwMV0pO1xuXG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3QgZGVyaXZlZEtleVdvcmRzID0gZGVyaXZlZEtleS53b3JkcztcbiAgICBjb25zdCBibG9ja0luZGV4V29yZHMgPSBibG9ja0luZGV4LndvcmRzO1xuICAgIGNvbnN0IHsga2V5U2l6ZSwgaXRlcmF0aW9ucyB9ID0gY2ZnO1xuXG4gICAgLy8gR2VuZXJhdGUga2V5XG4gICAgd2hpbGUgKGRlcml2ZWRLZXlXb3Jkcy5sZW5ndGggPCBrZXlTaXplKSB7XG4gICAgICBjb25zdCBibG9jayA9IGhtYWMudXBkYXRlKHNhbHQpLmZpbmFsaXplKGJsb2NrSW5kZXgpO1xuICAgICAgaG1hYy5yZXNldCgpO1xuXG4gICAgICAvLyBTaG9ydGN1dHNcbiAgICAgIGNvbnN0IGJsb2NrV29yZHMgPSBibG9jay53b3JkcztcbiAgICAgIGNvbnN0IGJsb2NrV29yZHNMZW5ndGggPSBibG9ja1dvcmRzLmxlbmd0aDtcblxuICAgICAgLy8gSXRlcmF0aW9uc1xuICAgICAgbGV0IGludGVybWVkaWF0ZSA9IGJsb2NrO1xuICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBpdGVyYXRpb25zOyBpICs9IDEpIHtcbiAgICAgICAgaW50ZXJtZWRpYXRlID0gaG1hYy5maW5hbGl6ZShpbnRlcm1lZGlhdGUpO1xuICAgICAgICBobWFjLnJlc2V0KCk7XG5cbiAgICAgICAgLy8gU2hvcnRjdXRcbiAgICAgICAgY29uc3QgaW50ZXJtZWRpYXRlV29yZHMgPSBpbnRlcm1lZGlhdGUud29yZHM7XG5cbiAgICAgICAgLy8gWE9SIGludGVybWVkaWF0ZSB3aXRoIGJsb2NrXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgYmxvY2tXb3Jkc0xlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgICAgYmxvY2tXb3Jkc1tqXSBePSBpbnRlcm1lZGlhdGVXb3Jkc1tqXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBkZXJpdmVkS2V5LmNvbmNhdChibG9jayk7XG4gICAgICBibG9ja0luZGV4V29yZHNbMF0gKz0gMTtcbiAgICB9XG4gICAgZGVyaXZlZEtleS5zaWdCeXRlcyA9IGtleVNpemUgKiA0O1xuXG4gICAgcmV0dXJuIGRlcml2ZWRLZXk7XG4gIH1cbn1cblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgUGFzc3dvcmQtQmFzZWQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24gMi5cbiAqXG4gKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IHBhc3N3b3JkIFRoZSBwYXNzd29yZC5cbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gc2FsdCBBIHNhbHQuXG4gKiBAcGFyYW0ge09iamVjdH0gY2ZnIChPcHRpb25hbCkgVGhlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyB0byB1c2UgZm9yIHRoaXMgY29tcHV0YXRpb24uXG4gKlxuICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgZGVyaXZlZCBrZXkuXG4gKlxuICogQHN0YXRpY1xuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5QQktERjIocGFzc3dvcmQsIHNhbHQpO1xuICogICAgIHZhciBrZXkgPSBDcnlwdG9KUy5QQktERjIocGFzc3dvcmQsIHNhbHQsIHsga2V5U2l6ZTogOCB9KTtcbiAqICAgICB2YXIga2V5ID0gQ3J5cHRvSlMuUEJLREYyKHBhc3N3b3JkLCBzYWx0LCB7IGtleVNpemU6IDgsIGl0ZXJhdGlvbnM6IDEwMDAgfSk7XG4gKi9cbmV4cG9ydCBjb25zdCBQQktERjIgPSAocGFzc3dvcmQsIHNhbHQsIGNmZykgPT4gUEJLREYyQWxnby5jcmVhdGUoY2ZnKS5jb21wdXRlKHBhc3N3b3JkLCBzYWx0KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/pbkdf2.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/rabbit-legacy.js":
/*!*****************************************************!*\
  !*** ./node_modules/crypto-es/lib/rabbit-legacy.js ***!
  \*****************************************************/
/*! exports provided: RabbitLegacyAlgo, RabbitLegacy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RabbitLegacyAlgo\", function() { return RabbitLegacyAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RabbitLegacy\", function() { return RabbitLegacy; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\n// Reusable objects\nconst S = [];\nconst C_ = [];\nconst G = [];\n\nfunction nextState() {\n  // Shortcuts\n  const X = this._X;\n  const C = this._C;\n\n  // Save old counter values\n  for (let i = 0; i < 8; i += 1) {\n    C_[i] = C[i];\n  }\n\n  // Calculate new counter values\n  C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n  C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n  C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n  C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n  C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n  C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n  C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n  C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n  this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n  // Calculate the g-values\n  for (let i = 0; i < 8; i += 1) {\n    const gx = X[i] + C[i];\n\n    // Construct high and low argument for squaring\n    const ga = gx & 0xffff;\n    const gb = gx >>> 16;\n\n    // Calculate high and low result of squaring\n    const gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n    const gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n    // High XOR low\n    G[i] = gh ^ gl;\n  }\n\n  // Calculate new state values\n  X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n  X[1] = (G[1] + ((G[0] << 8) | (G[0] >>> 24)) + G[7]) | 0;\n  X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n  X[3] = (G[3] + ((G[2] << 8) | (G[2] >>> 24)) + G[1]) | 0;\n  X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n  X[5] = (G[5] + ((G[4] << 8) | (G[4] >>> 24)) + G[3]) | 0;\n  X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n  X[7] = (G[7] + ((G[6] << 8) | (G[6] >>> 24)) + G[5]) | 0;\n}\n\n/**\n * Rabbit stream cipher algorithm.\n *\n * This is a legacy version that neglected to convert the key to little-endian.\n * This error doesn't affect the cipher's security,\n * but it does affect its compatibility with other implementations.\n */\nclass RabbitLegacyAlgo extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"] {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 128 / 32;\n    this.ivSize = 64 / 32;\n  }\n\n  _doReset() {\n    // Shortcuts\n    const K = this._key.words;\n    const { iv } = this.cfg;\n\n    // Generate initial state values\n    this._X = [\n      K[0], (K[3] << 16) | (K[2] >>> 16),\n      K[1], (K[0] << 16) | (K[3] >>> 16),\n      K[2], (K[1] << 16) | (K[0] >>> 16),\n      K[3], (K[2] << 16) | (K[1] >>> 16),\n    ];\n    const X = this._X;\n\n    // Generate initial counter values\n    this._C = [\n      (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n      (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n      (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n      (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff),\n    ];\n    const C = this._C;\n\n    // Carry bit\n    this._b = 0;\n\n    // Iterate the system four times\n    for (let i = 0; i < 4; i += 1) {\n      nextState.call(this);\n    }\n\n    // Modify the counters\n    for (let i = 0; i < 8; i += 1) {\n      C[i] ^= X[(i + 4) & 7];\n    }\n\n    // IV setup\n    if (iv) {\n      // Shortcuts\n      const IV = iv.words;\n      const IV_0 = IV[0];\n      const IV_1 = IV[1];\n\n      // Generate four subvectors\n      const i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff)\n        | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n      const i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff)\n        | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n      const i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n      const i3 = (i2 << 16) | (i0 & 0x0000ffff);\n\n      // Modify counter values\n      C[0] ^= i0;\n      C[1] ^= i1;\n      C[2] ^= i2;\n      C[3] ^= i3;\n      C[4] ^= i0;\n      C[5] ^= i1;\n      C[6] ^= i2;\n      C[7] ^= i3;\n\n      // Iterate the system four times\n      for (let i = 0; i < 4; i += 1) {\n        nextState.call(this);\n      }\n    }\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Shortcut\n    const X = this._X;\n\n    // Iterate the system\n    nextState.call(this);\n\n    // Generate four keystream words\n    S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n    S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n    S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n    S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n    for (let i = 0; i < 4; i += 1) {\n      // Swap endian\n      S[i] = (((S[i] << 8) | (S[i] >>> 24)) & 0x00ff00ff)\n        | (((S[i] << 24) | (S[i] >>> 8)) & 0xff00ff00);\n\n      // Encrypt\n      _M[offset + i] ^= S[i];\n    }\n  }\n}\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n */\nconst RabbitLegacy = _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"]._createHelper(RabbitLegacyAlgo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/rabbit-legacy.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/rabbit.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/rabbit.js ***!
  \**********************************************/
/*! exports provided: RabbitAlgo, Rabbit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RabbitAlgo\", function() { return RabbitAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rabbit\", function() { return Rabbit; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\n// Reusable objects\nconst S = [];\nconst C_ = [];\nconst G = [];\n\nfunction nextState() {\n  // Shortcuts\n  const X = this._X;\n  const C = this._C;\n\n  // Save old counter values\n  for (let i = 0; i < 8; i += 1) {\n    C_[i] = C[i];\n  }\n\n  // Calculate new counter values\n  C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n  C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n  C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n  C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n  C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n  C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n  C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n  C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n  this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n  // Calculate the g-values\n  for (let i = 0; i < 8; i += 1) {\n    const gx = X[i] + C[i];\n\n    // Construct high and low argument for squaring\n    const ga = gx & 0xffff;\n    const gb = gx >>> 16;\n\n    // Calculate high and low result of squaring\n    const gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n    const gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n    // High XOR low\n    G[i] = gh ^ gl;\n  }\n\n  // Calculate new state values\n  X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n  X[1] = (G[1] + ((G[0] << 8) | (G[0] >>> 24)) + G[7]) | 0;\n  X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n  X[3] = (G[3] + ((G[2] << 8) | (G[2] >>> 24)) + G[1]) | 0;\n  X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n  X[5] = (G[5] + ((G[4] << 8) | (G[4] >>> 24)) + G[3]) | 0;\n  X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n  X[7] = (G[7] + ((G[6] << 8) | (G[6] >>> 24)) + G[5]) | 0;\n}\n\n/**\n * Rabbit stream cipher algorithm\n */\nclass RabbitAlgo extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"] {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 128 / 32;\n    this.ivSize = 64 / 32;\n  }\n\n  _doReset() {\n    // Shortcuts\n    const K = this._key.words;\n    const { iv } = this.cfg;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      K[i] = (((K[i] << 8) | (K[i] >>> 24)) & 0x00ff00ff)\n        | (((K[i] << 24) | (K[i] >>> 8)) & 0xff00ff00);\n    }\n\n    // Generate initial state values\n    this._X = [\n      K[0], (K[3] << 16) | (K[2] >>> 16),\n      K[1], (K[0] << 16) | (K[3] >>> 16),\n      K[2], (K[1] << 16) | (K[0] >>> 16),\n      K[3], (K[2] << 16) | (K[1] >>> 16),\n    ];\n    const X = this._X;\n\n    // Generate initial counter values\n    this._C = [\n      (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n      (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n      (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n      (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff),\n    ];\n    const C = this._C;\n\n    // Carry bit\n    this._b = 0;\n\n    // Iterate the system four times\n    for (let i = 0; i < 4; i += 1) {\n      nextState.call(this);\n    }\n\n    // Modify the counters\n    for (let i = 0; i < 8; i += 1) {\n      C[i] ^= X[(i + 4) & 7];\n    }\n\n    // IV setup\n    if (iv) {\n      // Shortcuts\n      const IV = iv.words;\n      const IV_0 = IV[0];\n      const IV_1 = IV[1];\n\n      // Generate four subvectors\n      const i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff)\n        | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n      const i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff)\n        | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n      const i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n      const i3 = (i2 << 16) | (i0 & 0x0000ffff);\n\n      // Modify counter values\n      C[0] ^= i0;\n      C[1] ^= i1;\n      C[2] ^= i2;\n      C[3] ^= i3;\n      C[4] ^= i0;\n      C[5] ^= i1;\n      C[6] ^= i2;\n      C[7] ^= i3;\n\n      // Iterate the system four times\n      for (let i = 0; i < 4; i += 1) {\n        nextState.call(this);\n      }\n    }\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Shortcut\n    const X = this._X;\n\n    // Iterate the system\n    nextState.call(this);\n\n    // Generate four keystream words\n    S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n    S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n    S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n    S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n    for (let i = 0; i < 4; i += 1) {\n      // Swap endian\n      S[i] = (((S[i] << 8) | (S[i] >>> 24)) & 0x00ff00ff)\n        | (((S[i] << 24) | (S[i] >>> 8)) & 0xff00ff00);\n\n      // Encrypt\n      _M[offset + i] ^= S[i];\n    }\n  }\n}\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n */\nconst Rabbit = _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"]._createHelper(RabbitAlgo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/rabbit.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/rc4.js":
/*!*******************************************!*\
  !*** ./node_modules/crypto-es/lib/rc4.js ***!
  \*******************************************/
/*! exports provided: RC4Algo, RC4, RC4DropAlgo, RC4Drop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RC4Algo\", function() { return RC4Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RC4\", function() { return RC4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RC4DropAlgo\", function() { return RC4DropAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RC4Drop\", function() { return RC4Drop; });\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\nfunction generateKeystreamWord() {\n  // Shortcuts\n  const S = this._S;\n  let i = this._i;\n  let j = this._j;\n\n  // Generate keystream word\n  let keystreamWord = 0;\n  for (let n = 0; n < 4; n += 1) {\n    i = (i + 1) % 256;\n    j = (j + S[i]) % 256;\n\n    // Swap\n    const t = S[i];\n    S[i] = S[j];\n    S[j] = t;\n\n    keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n  }\n\n  // Update counters\n  this._i = i;\n  this._j = j;\n\n  return keystreamWord;\n}\n\n/**\n * RC4 stream cipher algorithm.\n */\nclass RC4Algo extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"] {\n  _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n    const keySigBytes = key.sigBytes;\n\n    // Init sbox\n    this._S = [];\n    const S = this._S;\n    for (let i = 0; i < 256; i += 1) {\n      S[i] = i;\n    }\n\n    // Key setup\n    for (let i = 0, j = 0; i < 256; i += 1) {\n      const keyByteIndex = i % keySigBytes;\n      const keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n      j = (j + S[i] + keyByte) % 256;\n\n      // Swap\n      const t = S[i];\n      S[i] = S[j];\n      S[j] = t;\n    }\n\n    // Counters\n    this._j = 0;\n    this._i = this._j;\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    _M[offset] ^= generateKeystreamWord.call(this);\n  }\n}\nRC4Algo.keySize = 256 / 32;\nRC4Algo.ivSize = 0;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n */\nconst RC4 = _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"]._createHelper(RC4Algo);\n\n/**\n * Modified RC4 stream cipher algorithm.\n */\nclass RC4DropAlgo extends RC4Algo {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} drop The number of keystream words to drop. Default 192\n     */\n    Object.assign(this.cfg, { drop: 192 });\n  }\n\n  _doReset() {\n    super._doReset.call(this);\n\n    // Drop\n    for (let i = this.cfg.drop; i > 0; i -= 1) {\n      generateKeystreamWord.call(this);\n    }\n  }\n}\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n */\nconst RC4Drop = _cipher_core_js__WEBPACK_IMPORTED_MODULE_0__[\"StreamCipher\"]._createHelper(RC4DropAlgo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcmM0LmpzPzYyODIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsT0FBTztBQUN4QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ08sc0JBQXNCLDREQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFNBQVM7QUFDNUI7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQixTQUFTO0FBQ25DO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLFlBQVksNERBQVk7O0FBRS9CO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBLDZCQUE2QixZQUFZO0FBQ3pDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBK0IsT0FBTztBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0JBQWdCLDREQUFZIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvcmM0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgU3RyZWFtQ2lwaGVyLFxufSBmcm9tICcuL2NpcGhlci1jb3JlLmpzJztcblxuZnVuY3Rpb24gZ2VuZXJhdGVLZXlzdHJlYW1Xb3JkKCkge1xuICAvLyBTaG9ydGN1dHNcbiAgY29uc3QgUyA9IHRoaXMuX1M7XG4gIGxldCBpID0gdGhpcy5faTtcbiAgbGV0IGogPSB0aGlzLl9qO1xuXG4gIC8vIEdlbmVyYXRlIGtleXN0cmVhbSB3b3JkXG4gIGxldCBrZXlzdHJlYW1Xb3JkID0gMDtcbiAgZm9yIChsZXQgbiA9IDA7IG4gPCA0OyBuICs9IDEpIHtcbiAgICBpID0gKGkgKyAxKSAlIDI1NjtcbiAgICBqID0gKGogKyBTW2ldKSAlIDI1NjtcblxuICAgIC8vIFN3YXBcbiAgICBjb25zdCB0ID0gU1tpXTtcbiAgICBTW2ldID0gU1tqXTtcbiAgICBTW2pdID0gdDtcblxuICAgIGtleXN0cmVhbVdvcmQgfD0gU1soU1tpXSArIFNbal0pICUgMjU2XSA8PCAoMjQgLSBuICogOCk7XG4gIH1cblxuICAvLyBVcGRhdGUgY291bnRlcnNcbiAgdGhpcy5faSA9IGk7XG4gIHRoaXMuX2ogPSBqO1xuXG4gIHJldHVybiBrZXlzdHJlYW1Xb3JkO1xufVxuXG4vKipcbiAqIFJDNCBzdHJlYW0gY2lwaGVyIGFsZ29yaXRobS5cbiAqL1xuZXhwb3J0IGNsYXNzIFJDNEFsZ28gZXh0ZW5kcyBTdHJlYW1DaXBoZXIge1xuICBfZG9SZXNldCgpIHtcbiAgICAvLyBTaG9ydGN1dHNcbiAgICBjb25zdCBrZXkgPSB0aGlzLl9rZXk7XG4gICAgY29uc3Qga2V5V29yZHMgPSBrZXkud29yZHM7XG4gICAgY29uc3Qga2V5U2lnQnl0ZXMgPSBrZXkuc2lnQnl0ZXM7XG5cbiAgICAvLyBJbml0IHNib3hcbiAgICB0aGlzLl9TID0gW107XG4gICAgY29uc3QgUyA9IHRoaXMuX1M7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkgKz0gMSkge1xuICAgICAgU1tpXSA9IGk7XG4gICAgfVxuXG4gICAgLy8gS2V5IHNldHVwXG4gICAgZm9yIChsZXQgaSA9IDAsIGogPSAwOyBpIDwgMjU2OyBpICs9IDEpIHtcbiAgICAgIGNvbnN0IGtleUJ5dGVJbmRleCA9IGkgJSBrZXlTaWdCeXRlcztcbiAgICAgIGNvbnN0IGtleUJ5dGUgPSAoa2V5V29yZHNba2V5Qnl0ZUluZGV4ID4+PiAyXSA+Pj4gKDI0IC0gKGtleUJ5dGVJbmRleCAlIDQpICogOCkpICYgMHhmZjtcblxuICAgICAgaiA9IChqICsgU1tpXSArIGtleUJ5dGUpICUgMjU2O1xuXG4gICAgICAvLyBTd2FwXG4gICAgICBjb25zdCB0ID0gU1tpXTtcbiAgICAgIFNbaV0gPSBTW2pdO1xuICAgICAgU1tqXSA9IHQ7XG4gICAgfVxuXG4gICAgLy8gQ291bnRlcnNcbiAgICB0aGlzLl9qID0gMDtcbiAgICB0aGlzLl9pID0gdGhpcy5fajtcbiAgfVxuXG4gIF9kb1Byb2Nlc3NCbG9jayhNLCBvZmZzZXQpIHtcbiAgICBjb25zdCBfTSA9IE07XG5cbiAgICBfTVtvZmZzZXRdIF49IGdlbmVyYXRlS2V5c3RyZWFtV29yZC5jYWxsKHRoaXMpO1xuICB9XG59XG5SQzRBbGdvLmtleVNpemUgPSAyNTYgLyAzMjtcblJDNEFsZ28uaXZTaXplID0gMDtcblxuLyoqXG4gKiBTaG9ydGN1dCBmdW5jdGlvbnMgdG8gdGhlIGNpcGhlcidzIG9iamVjdCBpbnRlcmZhY2UuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgdmFyIGNpcGhlcnRleHQgPSBDcnlwdG9KUy5SQzQuZW5jcnlwdChtZXNzYWdlLCBrZXksIGNmZyk7XG4gKiAgICAgdmFyIHBsYWludGV4dCAgPSBDcnlwdG9KUy5SQzQuZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXksIGNmZyk7XG4gKi9cbmV4cG9ydCBjb25zdCBSQzQgPSBTdHJlYW1DaXBoZXIuX2NyZWF0ZUhlbHBlcihSQzRBbGdvKTtcblxuLyoqXG4gKiBNb2RpZmllZCBSQzQgc3RyZWFtIGNpcGhlciBhbGdvcml0aG0uXG4gKi9cbmV4cG9ydCBjbGFzcyBSQzREcm9wQWxnbyBleHRlbmRzIFJDNEFsZ28ge1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG5cbiAgICAvKipcbiAgICAgKiBDb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkge251bWJlcn0gZHJvcCBUaGUgbnVtYmVyIG9mIGtleXN0cmVhbSB3b3JkcyB0byBkcm9wLiBEZWZhdWx0IDE5MlxuICAgICAqL1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5jZmcsIHsgZHJvcDogMTkyIH0pO1xuICB9XG5cbiAgX2RvUmVzZXQoKSB7XG4gICAgc3VwZXIuX2RvUmVzZXQuY2FsbCh0aGlzKTtcblxuICAgIC8vIERyb3BcbiAgICBmb3IgKGxldCBpID0gdGhpcy5jZmcuZHJvcDsgaSA+IDA7IGkgLT0gMSkge1xuICAgICAgZ2VuZXJhdGVLZXlzdHJlYW1Xb3JkLmNhbGwodGhpcyk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogU2hvcnRjdXQgZnVuY3Rpb25zIHRvIHRoZSBjaXBoZXIncyBvYmplY3QgaW50ZXJmYWNlLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBjaXBoZXJ0ZXh0ID0gQ3J5cHRvSlMuUkM0RHJvcC5lbmNyeXB0KG1lc3NhZ2UsIGtleSwgY2ZnKTtcbiAqICAgICB2YXIgcGxhaW50ZXh0ICA9IENyeXB0b0pTLlJDNERyb3AuZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXksIGNmZyk7XG4gKi9cbmV4cG9ydCBjb25zdCBSQzREcm9wID0gU3RyZWFtQ2lwaGVyLl9jcmVhdGVIZWxwZXIoUkM0RHJvcEFsZ28pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/rc4.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/ripemd160.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-es/lib/ripemd160.js ***!
  \*************************************************/
/*! exports provided: RIPEMD160Algo, RIPEMD160, HmacRIPEMD160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIPEMD160Algo\", function() { return RIPEMD160Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIPEMD160\", function() { return RIPEMD160; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacRIPEMD160\", function() { return HmacRIPEMD160; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/** @preserve\n(c) 2012 by Cédric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted\nprovided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of\n    conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list\n    of conditions and the following disclaimer in the documentation and/or other materials\n    provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\nOR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\nWAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n\n// Constants table\nconst _zl = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\nconst _zr = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\nconst _sl = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\nconst _sr = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n\nconst _hl = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\nconst _hr = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\nconst f1 = (x, y, z) => (x) ^ (y) ^ (z);\n\nconst f2 = (x, y, z) => ((x) & (y)) | ((~x) & (z));\n\nconst f3 = (x, y, z) => ((x) | (~(y))) ^ (z);\n\nconst f4 = (x, y, z) => ((x) & (z)) | ((y) & (~(z)));\n\nconst f5 = (x, y, z) => (x) ^ ((y) | (~(z)));\n\nconst rotl = (x, n) => (x << n) | (x >>> (32 - n));\n\n/**\n * RIPEMD160 hash algorithm.\n */\nclass RIPEMD160Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"] {\n  _doReset() {\n    this._hash = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = _M[offset_i];\n\n      // Swap\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n    // Shortcut\n    const H = this._hash.words;\n    const hl = _hl.words;\n    const hr = _hr.words;\n    const zl = _zl.words;\n    const zr = _zr.words;\n    const sl = _sl.words;\n    const sr = _sr.words;\n\n    // Working variables\n    let al = H[0];\n    let bl = H[1];\n    let cl = H[2];\n    let dl = H[3];\n    let el = H[4];\n    let ar = H[0];\n    let br = H[1];\n    let cr = H[2];\n    let dr = H[3];\n    let er = H[4];\n\n    // Computation\n    let t;\n    for (let i = 0; i < 80; i += 1) {\n      t = (al + _M[offset + zl[i]]) | 0;\n      if (i < 16) {\n        t += f1(bl, cl, dl) + hl[0];\n      } else if (i < 32) {\n        t += f2(bl, cl, dl) + hl[1];\n      } else if (i < 48) {\n        t += f3(bl, cl, dl) + hl[2];\n      } else if (i < 64) {\n        t += f4(bl, cl, dl) + hl[3];\n      } else { // if (i<80) {\n        t += f5(bl, cl, dl) + hl[4];\n      }\n      t |= 0;\n      t = rotl(t, sl[i]);\n      t = (t + el) | 0;\n      al = el;\n      el = dl;\n      dl = rotl(cl, 10);\n      cl = bl;\n      bl = t;\n\n      t = (ar + _M[offset + zr[i]]) | 0;\n      if (i < 16) {\n        t += f5(br, cr, dr) + hr[0];\n      } else if (i < 32) {\n        t += f4(br, cr, dr) + hr[1];\n      } else if (i < 48) {\n        t += f3(br, cr, dr) + hr[2];\n      } else if (i < 64) {\n        t += f2(br, cr, dr) + hr[3];\n      } else { // if (i<80) {\n        t += f1(br, cr, dr) + hr[4];\n      }\n      t |= 0;\n      t = rotl(t, sr[i]);\n      t = (t + er) | 0;\n      ar = er;\n      er = dr;\n      dr = rotl(cr, 10);\n      cr = br;\n      br = t;\n    }\n    // Intermediate hash value\n    t = (H[1] + cl + dr) | 0;\n    H[1] = (H[2] + dl + er) | 0;\n    H[2] = (H[3] + el + ar) | 0;\n    H[3] = (H[4] + al + br) | 0;\n    H[4] = (H[0] + bl + cr) | 0;\n    H[0] = t;\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)\n    );\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 5; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      // Swap\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.RIPEMD160('message');\n *     var hash = CryptoJS.RIPEMD160(wordArray);\n */\nconst RIPEMD160 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHelper(RIPEMD160Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n */\nconst HmacRIPEMD160 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHmacHelper(RIPEMD160Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/ripemd160.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/sha1.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-es/lib/sha1.js ***!
  \********************************************/
/*! exports provided: SHA1Algo, SHA1, HmacSHA1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA1Algo\", function() { return SHA1Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA1\", function() { return SHA1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacSHA1\", function() { return HmacSHA1; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\n// Reusable object\nconst W = [];\n\n/**\n * SHA-1 hash algorithm.\n */\nclass SHA1Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"] {\n  _doReset() {\n    this._hash = new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"]([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n      0xc3d2e1f0,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    // Shortcut\n    const H = this._hash.words;\n\n    // Working variables\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    // Computation\n    for (let i = 0; i < 80; i += 1) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n        W[i] = (n << 1) | (n >>> 31);\n      }\n\n      let t = ((a << 5) | (a >>> 27)) + e + W[i];\n      if (i < 20) {\n        t += ((b & c) | (~b & d)) + 0x5a827999;\n      } else if (i < 40) {\n        t += (b ^ c ^ d) + 0x6ed9eba1;\n      } else if (i < 60) {\n        t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n      } else /* if (i < 80) */ {\n        t += (b ^ c ^ d) - 0x359d3e2a;\n      }\n\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n    H[4] = (H[4] + e) | 0;\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Return final computed hash\n    return this._hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA1('message');\n *     var hash = CryptoJS.SHA1(wordArray);\n */\nconst SHA1 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHelper(SHA1Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA1(message, key);\n */\nconst HmacSHA1 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHmacHelper(SHA1Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvc2hhMS5qcz9iZDYyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHbUI7O0FBRW5CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ08sdUJBQXVCLCtDQUFNO0FBQ3BDO0FBQ0EscUJBQXFCLGtEQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsUUFBUTtBQUMzQjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGFBQWEsK0NBQU07O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsaUJBQWlCO0FBQzVCO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08saUJBQWlCLCtDQUFNIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvc2hhMS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFdvcmRBcnJheSxcbiAgSGFzaGVyLFxufSBmcm9tICcuL2NvcmUuanMnO1xuXG4vLyBSZXVzYWJsZSBvYmplY3RcbmNvbnN0IFcgPSBbXTtcblxuLyoqXG4gKiBTSEEtMSBoYXNoIGFsZ29yaXRobS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNIQTFBbGdvIGV4dGVuZHMgSGFzaGVyIHtcbiAgX2RvUmVzZXQoKSB7XG4gICAgdGhpcy5faGFzaCA9IG5ldyBXb3JkQXJyYXkoW1xuICAgICAgMHg2NzQ1MjMwMSxcbiAgICAgIDB4ZWZjZGFiODksXG4gICAgICAweDk4YmFkY2ZlLFxuICAgICAgMHgxMDMyNTQ3NixcbiAgICAgIDB4YzNkMmUxZjAsXG4gICAgXSk7XG4gIH1cblxuICBfZG9Qcm9jZXNzQmxvY2soTSwgb2Zmc2V0KSB7XG4gICAgLy8gU2hvcnRjdXRcbiAgICBjb25zdCBIID0gdGhpcy5faGFzaC53b3JkcztcblxuICAgIC8vIFdvcmtpbmcgdmFyaWFibGVzXG4gICAgbGV0IGEgPSBIWzBdO1xuICAgIGxldCBiID0gSFsxXTtcbiAgICBsZXQgYyA9IEhbMl07XG4gICAgbGV0IGQgPSBIWzNdO1xuICAgIGxldCBlID0gSFs0XTtcblxuICAgIC8vIENvbXB1dGF0aW9uXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4MDsgaSArPSAxKSB7XG4gICAgICBpZiAoaSA8IDE2KSB7XG4gICAgICAgIFdbaV0gPSBNW29mZnNldCArIGldIHwgMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IG4gPSBXW2kgLSAzXSBeIFdbaSAtIDhdIF4gV1tpIC0gMTRdIF4gV1tpIC0gMTZdO1xuICAgICAgICBXW2ldID0gKG4gPDwgMSkgfCAobiA+Pj4gMzEpO1xuICAgICAgfVxuXG4gICAgICBsZXQgdCA9ICgoYSA8PCA1KSB8IChhID4+PiAyNykpICsgZSArIFdbaV07XG4gICAgICBpZiAoaSA8IDIwKSB7XG4gICAgICAgIHQgKz0gKChiICYgYykgfCAofmIgJiBkKSkgKyAweDVhODI3OTk5O1xuICAgICAgfSBlbHNlIGlmIChpIDwgNDApIHtcbiAgICAgICAgdCArPSAoYiBeIGMgXiBkKSArIDB4NmVkOWViYTE7XG4gICAgICB9IGVsc2UgaWYgKGkgPCA2MCkge1xuICAgICAgICB0ICs9ICgoYiAmIGMpIHwgKGIgJiBkKSB8IChjICYgZCkpIC0gMHg3MGU0NDMyNDtcbiAgICAgIH0gZWxzZSAvKiBpZiAoaSA8IDgwKSAqLyB7XG4gICAgICAgIHQgKz0gKGIgXiBjIF4gZCkgLSAweDM1OWQzZTJhO1xuICAgICAgfVxuXG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IChiIDw8IDMwKSB8IChiID4+PiAyKTtcbiAgICAgIGIgPSBhO1xuICAgICAgYSA9IHQ7XG4gICAgfVxuXG4gICAgLy8gSW50ZXJtZWRpYXRlIGhhc2ggdmFsdWVcbiAgICBIWzBdID0gKEhbMF0gKyBhKSB8IDA7XG4gICAgSFsxXSA9IChIWzFdICsgYikgfCAwO1xuICAgIEhbMl0gPSAoSFsyXSArIGMpIHwgMDtcbiAgICBIWzNdID0gKEhbM10gKyBkKSB8IDA7XG4gICAgSFs0XSA9IChIWzRdICsgZSkgfCAwO1xuICB9XG5cbiAgX2RvRmluYWxpemUoKSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuX2RhdGE7XG4gICAgY29uc3QgZGF0YVdvcmRzID0gZGF0YS53b3JkcztcblxuICAgIGNvbnN0IG5CaXRzVG90YWwgPSB0aGlzLl9uRGF0YUJ5dGVzICogODtcbiAgICBjb25zdCBuQml0c0xlZnQgPSBkYXRhLnNpZ0J5dGVzICogODtcblxuICAgIC8vIEFkZCBwYWRkaW5nXG4gICAgZGF0YVdvcmRzW25CaXRzTGVmdCA+Pj4gNV0gfD0gMHg4MCA8PCAoMjQgLSAobkJpdHNMZWZ0ICUgMzIpKTtcbiAgICBkYXRhV29yZHNbKCgobkJpdHNMZWZ0ICsgNjQpID4+PiA5KSA8PCA0KSArIDE0XSA9IE1hdGguZmxvb3IobkJpdHNUb3RhbCAvIDB4MTAwMDAwMDAwKTtcbiAgICBkYXRhV29yZHNbKCgobkJpdHNMZWZ0ICsgNjQpID4+PiA5KSA8PCA0KSArIDE1XSA9IG5CaXRzVG90YWw7XG4gICAgZGF0YS5zaWdCeXRlcyA9IGRhdGFXb3Jkcy5sZW5ndGggKiA0O1xuXG4gICAgLy8gSGFzaCBmaW5hbCBibG9ja3NcbiAgICB0aGlzLl9wcm9jZXNzKCk7XG5cbiAgICAvLyBSZXR1cm4gZmluYWwgY29tcHV0ZWQgaGFzaFxuICAgIHJldHVybiB0aGlzLl9oYXNoO1xuICB9XG5cbiAgY2xvbmUoKSB7XG4gICAgY29uc3QgY2xvbmUgPSBzdXBlci5jbG9uZS5jYWxsKHRoaXMpO1xuICAgIGNsb25lLl9oYXNoID0gdGhpcy5faGFzaC5jbG9uZSgpO1xuXG4gICAgcmV0dXJuIGNsb25lO1xuICB9XG59XG5cbi8qKlxuICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIGhhc2hlcidzIG9iamVjdCBpbnRlcmZhY2UuXG4gKlxuICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGhhc2guXG4gKlxuICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC5cbiAqXG4gKiBAc3RhdGljXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEExKCdtZXNzYWdlJyk7XG4gKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEExKHdvcmRBcnJheSk7XG4gKi9cbmV4cG9ydCBjb25zdCBTSEExID0gSGFzaGVyLl9jcmVhdGVIZWxwZXIoU0hBMUFsZ28pO1xuXG4vKipcbiAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBITUFDJ3Mgb2JqZWN0IGludGVyZmFjZS5cbiAqXG4gKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC5cbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30ga2V5IFRoZSBzZWNyZXQga2V5LlxuICpcbiAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuXG4gKlxuICogQHN0YXRpY1xuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTEobWVzc2FnZSwga2V5KTtcbiAqL1xuZXhwb3J0IGNvbnN0IEhtYWNTSEExID0gSGFzaGVyLl9jcmVhdGVIbWFjSGVscGVyKFNIQTFBbGdvKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/sha1.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/sha224.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/sha224.js ***!
  \**********************************************/
/*! exports provided: SHA224Algo, SHA224, HmacSHA224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA224Algo\", function() { return SHA224Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA224\", function() { return SHA224; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacSHA224\", function() { return HmacSHA224; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha256.js */ \"./node_modules/crypto-es/lib/sha256.js\");\n\n\n\n/**\n * SHA-224 hash algorithm.\n */\nclass SHA224Algo extends _sha256_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA256Algo\"] {\n  _doReset() {\n    this._hash = new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"]([\n      0xc1059ed8,\n      0x367cd507,\n      0x3070dd17,\n      0xf70e5939,\n      0xffc00b31,\n      0x68581511,\n      0x64f98fa7,\n      0xbefa4fa4,\n    ]);\n  }\n\n  _doFinalize() {\n    const hash = super._doFinalize.call(this);\n\n    hash.sigBytes -= 4;\n\n    return hash;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA224('message');\n *     var hash = CryptoJS.SHA224(wordArray);\n */\nconst SHA224 = _sha256_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA256Algo\"]._createHelper(SHA224Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA224(message, key);\n */\nconst HmacSHA224 = _sha256_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA256Algo\"]._createHmacHelper(SHA224Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvc2hhMjI0LmpzPzE0OGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNDO0FBQ0c7O0FBRXpDO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QixxREFBVTtBQUMxQztBQUNBLHFCQUFxQixrREFBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZUFBZSxxREFBVTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtQkFBbUIscURBQVUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3J5cHRvLWVzL2xpYi9zaGEyMjQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXb3JkQXJyYXkgfSBmcm9tICcuL2NvcmUuanMnO1xuaW1wb3J0IHsgU0hBMjU2QWxnbyB9IGZyb20gJy4vc2hhMjU2LmpzJztcblxuLyoqXG4gKiBTSEEtMjI0IGhhc2ggYWxnb3JpdGhtLlxuICovXG5leHBvcnQgY2xhc3MgU0hBMjI0QWxnbyBleHRlbmRzIFNIQTI1NkFsZ28ge1xuICBfZG9SZXNldCgpIHtcbiAgICB0aGlzLl9oYXNoID0gbmV3IFdvcmRBcnJheShbXG4gICAgICAweGMxMDU5ZWQ4LFxuICAgICAgMHgzNjdjZDUwNyxcbiAgICAgIDB4MzA3MGRkMTcsXG4gICAgICAweGY3MGU1OTM5LFxuICAgICAgMHhmZmMwMGIzMSxcbiAgICAgIDB4Njg1ODE1MTEsXG4gICAgICAweDY0Zjk4ZmE3LFxuICAgICAgMHhiZWZhNGZhNCxcbiAgICBdKTtcbiAgfVxuXG4gIF9kb0ZpbmFsaXplKCkge1xuICAgIGNvbnN0IGhhc2ggPSBzdXBlci5fZG9GaW5hbGl6ZS5jYWxsKHRoaXMpO1xuXG4gICAgaGFzaC5zaWdCeXRlcyAtPSA0O1xuXG4gICAgcmV0dXJuIGhhc2g7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydGN1dCBmdW5jdGlvbiB0byB0aGUgaGFzaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS5cbiAqXG4gKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC5cbiAqXG4gKiBAcmV0dXJuIHtXb3JkQXJyYXl9IFRoZSBoYXNoLlxuICpcbiAqIEBzdGF0aWNcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqICAgICB2YXIgaGFzaCA9IENyeXB0b0pTLlNIQTIyNCgnbWVzc2FnZScpO1xuICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBMjI0KHdvcmRBcnJheSk7XG4gKi9cbmV4cG9ydCBjb25zdCBTSEEyMjQgPSBTSEEyNTZBbGdvLl9jcmVhdGVIZWxwZXIoU0hBMjI0QWxnbyk7XG5cbi8qKlxuICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIEhNQUMncyBvYmplY3QgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLlxuICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBrZXkgVGhlIHNlY3JldCBrZXkuXG4gKlxuICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgSE1BQy5cbiAqXG4gKiBAc3RhdGljXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgdmFyIGhtYWMgPSBDcnlwdG9KUy5IbWFjU0hBMjI0KG1lc3NhZ2UsIGtleSk7XG4gKi9cbmV4cG9ydCBjb25zdCBIbWFjU0hBMjI0ID0gU0hBMjU2QWxnby5fY3JlYXRlSG1hY0hlbHBlcihTSEEyMjRBbGdvKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/sha224.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/sha256.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/sha256.js ***!
  \**********************************************/
/*! exports provided: SHA256Algo, SHA256, HmacSHA256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA256Algo\", function() { return SHA256Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA256\", function() { return SHA256; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacSHA256\", function() { return HmacSHA256; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\n// Initialization and round constants tables\nconst H = [];\nconst K = [];\n\n// Compute constants\nconst isPrime = (n) => {\n  const sqrtN = Math.sqrt(n);\n  for (let factor = 2; factor <= sqrtN; factor += 1) {\n    if (!(n % factor)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst getFractionalBits = n => ((n - (n | 0)) * 0x100000000) | 0;\n\nlet n = 2;\nlet nPrime = 0;\nwhile (nPrime < 64) {\n  if (isPrime(n)) {\n    if (nPrime < 8) {\n      H[nPrime] = getFractionalBits(n ** (1 / 2));\n    }\n    K[nPrime] = getFractionalBits(n ** (1 / 3));\n\n    nPrime += 1;\n  }\n\n  n += 1;\n}\n\n// Reusable object\nconst W = [];\n\n/**\n * SHA-256 hash algorithm.\n */\nclass SHA256Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"] {\n  _doReset() {\n    this._hash = new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"](H.slice(0));\n  }\n\n  _doProcessBlock(M, offset) {\n    // Shortcut\n    const _H = this._hash.words;\n\n    // Working variables\n    let a = _H[0];\n    let b = _H[1];\n    let c = _H[2];\n    let d = _H[3];\n    let e = _H[4];\n    let f = _H[5];\n    let g = _H[6];\n    let h = _H[7];\n\n    // Computation\n    for (let i = 0; i < 64; i += 1) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const gamma0x = W[i - 15];\n        const gamma0 = ((gamma0x << 25) | (gamma0x >>> 7))\n          ^ ((gamma0x << 14) | (gamma0x >>> 18))\n          ^ (gamma0x >>> 3);\n\n        const gamma1x = W[i - 2];\n        const gamma1 = ((gamma1x << 15) | (gamma1x >>> 17))\n          ^ ((gamma1x << 13) | (gamma1x >>> 19))\n          ^ (gamma1x >>> 10);\n\n        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n      }\n\n      const ch = (e & f) ^ (~e & g);\n      const maj = (a & b) ^ (a & c) ^ (b & c);\n\n      const sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n      const sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25));\n\n      const t1 = h + sigma1 + ch + K[i] + W[i];\n      const t2 = sigma0 + maj;\n\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    // Intermediate hash value\n    _H[0] = (_H[0] + a) | 0;\n    _H[1] = (_H[1] + b) | 0;\n    _H[2] = (_H[2] + c) | 0;\n    _H[3] = (_H[3] + d) | 0;\n    _H[4] = (_H[4] + e) | 0;\n    _H[5] = (_H[5] + f) | 0;\n    _H[6] = (_H[6] + g) | 0;\n    _H[7] = (_H[7] + h) | 0;\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Return final computed hash\n    return this._hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA256('message');\n *     var hash = CryptoJS.SHA256(wordArray);\n */\nconst SHA256 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHelper(SHA256Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA256(message, key);\n */\nconst HmacSHA256 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHmacHelper(SHA256Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvc2hhMjU2LmpzPzRkZTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdtQjs7QUFFbkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QiwrQ0FBTTtBQUN0QztBQUNBLHFCQUFxQixrREFBUztBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZUFBZSwrQ0FBTTs7QUFFNUI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxtQkFBbUIsK0NBQU0iLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3J5cHRvLWVzL2xpYi9zaGEyNTYuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBXb3JkQXJyYXksXG4gIEhhc2hlcixcbn0gZnJvbSAnLi9jb3JlLmpzJztcblxuLy8gSW5pdGlhbGl6YXRpb24gYW5kIHJvdW5kIGNvbnN0YW50cyB0YWJsZXNcbmNvbnN0IEggPSBbXTtcbmNvbnN0IEsgPSBbXTtcblxuLy8gQ29tcHV0ZSBjb25zdGFudHNcbmNvbnN0IGlzUHJpbWUgPSAobikgPT4ge1xuICBjb25zdCBzcXJ0TiA9IE1hdGguc3FydChuKTtcbiAgZm9yIChsZXQgZmFjdG9yID0gMjsgZmFjdG9yIDw9IHNxcnROOyBmYWN0b3IgKz0gMSkge1xuICAgIGlmICghKG4gJSBmYWN0b3IpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5jb25zdCBnZXRGcmFjdGlvbmFsQml0cyA9IG4gPT4gKChuIC0gKG4gfCAwKSkgKiAweDEwMDAwMDAwMCkgfCAwO1xuXG5sZXQgbiA9IDI7XG5sZXQgblByaW1lID0gMDtcbndoaWxlIChuUHJpbWUgPCA2NCkge1xuICBpZiAoaXNQcmltZShuKSkge1xuICAgIGlmIChuUHJpbWUgPCA4KSB7XG4gICAgICBIW25QcmltZV0gPSBnZXRGcmFjdGlvbmFsQml0cyhuICoqICgxIC8gMikpO1xuICAgIH1cbiAgICBLW25QcmltZV0gPSBnZXRGcmFjdGlvbmFsQml0cyhuICoqICgxIC8gMykpO1xuXG4gICAgblByaW1lICs9IDE7XG4gIH1cblxuICBuICs9IDE7XG59XG5cbi8vIFJldXNhYmxlIG9iamVjdFxuY29uc3QgVyA9IFtdO1xuXG4vKipcbiAqIFNIQS0yNTYgaGFzaCBhbGdvcml0aG0uXG4gKi9cbmV4cG9ydCBjbGFzcyBTSEEyNTZBbGdvIGV4dGVuZHMgSGFzaGVyIHtcbiAgX2RvUmVzZXQoKSB7XG4gICAgdGhpcy5faGFzaCA9IG5ldyBXb3JkQXJyYXkoSC5zbGljZSgwKSk7XG4gIH1cblxuICBfZG9Qcm9jZXNzQmxvY2soTSwgb2Zmc2V0KSB7XG4gICAgLy8gU2hvcnRjdXRcbiAgICBjb25zdCBfSCA9IHRoaXMuX2hhc2gud29yZHM7XG5cbiAgICAvLyBXb3JraW5nIHZhcmlhYmxlc1xuICAgIGxldCBhID0gX0hbMF07XG4gICAgbGV0IGIgPSBfSFsxXTtcbiAgICBsZXQgYyA9IF9IWzJdO1xuICAgIGxldCBkID0gX0hbM107XG4gICAgbGV0IGUgPSBfSFs0XTtcbiAgICBsZXQgZiA9IF9IWzVdO1xuICAgIGxldCBnID0gX0hbNl07XG4gICAgbGV0IGggPSBfSFs3XTtcblxuICAgIC8vIENvbXB1dGF0aW9uXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2NDsgaSArPSAxKSB7XG4gICAgICBpZiAoaSA8IDE2KSB7XG4gICAgICAgIFdbaV0gPSBNW29mZnNldCArIGldIHwgMDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGdhbW1hMHggPSBXW2kgLSAxNV07XG4gICAgICAgIGNvbnN0IGdhbW1hMCA9ICgoZ2FtbWEweCA8PCAyNSkgfCAoZ2FtbWEweCA+Pj4gNykpXG4gICAgICAgICAgXiAoKGdhbW1hMHggPDwgMTQpIHwgKGdhbW1hMHggPj4+IDE4KSlcbiAgICAgICAgICBeIChnYW1tYTB4ID4+PiAzKTtcblxuICAgICAgICBjb25zdCBnYW1tYTF4ID0gV1tpIC0gMl07XG4gICAgICAgIGNvbnN0IGdhbW1hMSA9ICgoZ2FtbWExeCA8PCAxNSkgfCAoZ2FtbWExeCA+Pj4gMTcpKVxuICAgICAgICAgIF4gKChnYW1tYTF4IDw8IDEzKSB8IChnYW1tYTF4ID4+PiAxOSkpXG4gICAgICAgICAgXiAoZ2FtbWExeCA+Pj4gMTApO1xuXG4gICAgICAgIFdbaV0gPSBnYW1tYTAgKyBXW2kgLSA3XSArIGdhbW1hMSArIFdbaSAtIDE2XTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgY2ggPSAoZSAmIGYpIF4gKH5lICYgZyk7XG4gICAgICBjb25zdCBtYWogPSAoYSAmIGIpIF4gKGEgJiBjKSBeIChiICYgYyk7XG5cbiAgICAgIGNvbnN0IHNpZ21hMCA9ICgoYSA8PCAzMCkgfCAoYSA+Pj4gMikpIF4gKChhIDw8IDE5KSB8IChhID4+PiAxMykpIF4gKChhIDw8IDEwKSB8IChhID4+PiAyMikpO1xuICAgICAgY29uc3Qgc2lnbWExID0gKChlIDw8IDI2KSB8IChlID4+PiA2KSkgXiAoKGUgPDwgMjEpIHwgKGUgPj4+IDExKSkgXiAoKGUgPDwgNykgfCAoZSA+Pj4gMjUpKTtcblxuICAgICAgY29uc3QgdDEgPSBoICsgc2lnbWExICsgY2ggKyBLW2ldICsgV1tpXTtcbiAgICAgIGNvbnN0IHQyID0gc2lnbWEwICsgbWFqO1xuXG4gICAgICBoID0gZztcbiAgICAgIGcgPSBmO1xuICAgICAgZiA9IGU7XG4gICAgICBlID0gKGQgKyB0MSkgfCAwO1xuICAgICAgZCA9IGM7XG4gICAgICBjID0gYjtcbiAgICAgIGIgPSBhO1xuICAgICAgYSA9ICh0MSArIHQyKSB8IDA7XG4gICAgfVxuXG4gICAgLy8gSW50ZXJtZWRpYXRlIGhhc2ggdmFsdWVcbiAgICBfSFswXSA9IChfSFswXSArIGEpIHwgMDtcbiAgICBfSFsxXSA9IChfSFsxXSArIGIpIHwgMDtcbiAgICBfSFsyXSA9IChfSFsyXSArIGMpIHwgMDtcbiAgICBfSFszXSA9IChfSFszXSArIGQpIHwgMDtcbiAgICBfSFs0XSA9IChfSFs0XSArIGUpIHwgMDtcbiAgICBfSFs1XSA9IChfSFs1XSArIGYpIHwgMDtcbiAgICBfSFs2XSA9IChfSFs2XSArIGcpIHwgMDtcbiAgICBfSFs3XSA9IChfSFs3XSArIGgpIHwgMDtcbiAgfVxuXG4gIF9kb0ZpbmFsaXplKCkge1xuICAgIC8vIFNob3J0Y3V0c1xuICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9kYXRhO1xuICAgIGNvbnN0IGRhdGFXb3JkcyA9IGRhdGEud29yZHM7XG5cbiAgICBjb25zdCBuQml0c1RvdGFsID0gdGhpcy5fbkRhdGFCeXRlcyAqIDg7XG4gICAgY29uc3QgbkJpdHNMZWZ0ID0gZGF0YS5zaWdCeXRlcyAqIDg7XG5cbiAgICAvLyBBZGQgcGFkZGluZ1xuICAgIGRhdGFXb3Jkc1tuQml0c0xlZnQgPj4+IDVdIHw9IDB4ODAgPDwgKDI0IC0gKG5CaXRzTGVmdCAlIDMyKSk7XG4gICAgZGF0YVdvcmRzWygoKG5CaXRzTGVmdCArIDY0KSA+Pj4gOSkgPDwgNCkgKyAxNF0gPSBNYXRoLmZsb29yKG5CaXRzVG90YWwgLyAweDEwMDAwMDAwMCk7XG4gICAgZGF0YVdvcmRzWygoKG5CaXRzTGVmdCArIDY0KSA+Pj4gOSkgPDwgNCkgKyAxNV0gPSBuQml0c1RvdGFsO1xuICAgIGRhdGEuc2lnQnl0ZXMgPSBkYXRhV29yZHMubGVuZ3RoICogNDtcblxuICAgIC8vIEhhc2ggZmluYWwgYmxvY2tzXG4gICAgdGhpcy5fcHJvY2VzcygpO1xuXG4gICAgLy8gUmV0dXJuIGZpbmFsIGNvbXB1dGVkIGhhc2hcbiAgICByZXR1cm4gdGhpcy5faGFzaDtcbiAgfVxuXG4gIGNsb25lKCkge1xuICAgIGNvbnN0IGNsb25lID0gc3VwZXIuY2xvbmUuY2FsbCh0aGlzKTtcbiAgICBjbG9uZS5faGFzaCA9IHRoaXMuX2hhc2guY2xvbmUoKTtcblxuICAgIHJldHVybiBjbG9uZTtcbiAgfVxufVxuXG4vKipcbiAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBoYXNoZXIncyBvYmplY3QgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBoYXNoLlxuICpcbiAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIGhhc2guXG4gKlxuICogQHN0YXRpY1xuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBoYXNoID0gQ3J5cHRvSlMuU0hBMjU2KCdtZXNzYWdlJyk7XG4gKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEEyNTYod29yZEFycmF5KTtcbiAqL1xuZXhwb3J0IGNvbnN0IFNIQTI1NiA9IEhhc2hlci5fY3JlYXRlSGVscGVyKFNIQTI1NkFsZ28pO1xuXG4vKipcbiAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBITUFDJ3Mgb2JqZWN0IGludGVyZmFjZS5cbiAqXG4gKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC5cbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30ga2V5IFRoZSBzZWNyZXQga2V5LlxuICpcbiAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuXG4gKlxuICogQHN0YXRpY1xuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTI1NihtZXNzYWdlLCBrZXkpO1xuICovXG5leHBvcnQgY29uc3QgSG1hY1NIQTI1NiA9IEhhc2hlci5fY3JlYXRlSG1hY0hlbHBlcihTSEEyNTZBbGdvKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/sha256.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/sha3.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-es/lib/sha3.js ***!
  \********************************************/
/*! exports provided: SHA3Algo, SHA3, HmacSHA3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA3Algo\", function() { return SHA3Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA3\", function() { return SHA3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacSHA3\", function() { return HmacSHA3; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _x64_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./x64-core.js */ \"./node_modules/crypto-es/lib/x64-core.js\");\n\n\n\n// Constants tables\nconst RHO_OFFSETS = [];\nconst PI_INDEXES = [];\nconst ROUND_CONSTANTS = [];\n\n// Compute Constants\n// Compute rho offset constants\nlet _x = 1;\nlet _y = 0;\nfor (let t = 0; t < 24; t += 1) {\n  RHO_OFFSETS[_x + 5 * _y] = ((t + 1) * (t + 2) / 2) % 64;\n\n  const newX = _y % 5;\n  const newY = (2 * _x + 3 * _y) % 5;\n  _x = newX;\n  _y = newY;\n}\n\n// Compute pi index constants\nfor (let x = 0; x < 5; x += 1) {\n  for (let y = 0; y < 5; y += 1) {\n    PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n  }\n}\n\n// Compute round constants\nlet LFSR = 0x01;\nfor (let i = 0; i < 24; i += 1) {\n  let roundConstantMsw = 0;\n  let roundConstantLsw = 0;\n\n  for (let j = 0; j < 7; j += 1) {\n    if (LFSR & 0x01) {\n      const bitPosition = (1 << j) - 1;\n      if (bitPosition < 32) {\n        roundConstantLsw ^= 1 << bitPosition;\n      } else /* if (bitPosition >= 32) */ {\n        roundConstantMsw ^= 1 << (bitPosition - 32);\n      }\n    }\n\n    // Compute next LFSR\n    if (LFSR & 0x80) {\n      // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n      LFSR = (LFSR << 1) ^ 0x71;\n    } else {\n      LFSR <<= 1;\n    }\n  }\n\n  ROUND_CONSTANTS[i] = _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"].create(roundConstantMsw, roundConstantLsw);\n}\n\n// Reusable objects for temporary values\nconst T = [];\nfor (let i = 0; i < 25; i += 1) {\n  T[i] = _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"].create();\n}\n\n/**\n * SHA-3 hash algorithm.\n */\nclass SHA3Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"] {\n  constructor(cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {number} outputLength\n     *   The desired number of bits in the output hash.\n     *   Only values permitted are: 224, 256, 384, 512.\n     *   Default: 512\n     */\n    super(Object.assign(\n      { outputLength: 512 },\n      cfg,\n    ));\n  }\n\n  _doReset() {\n    this._state = [];\n    const state = this._state;\n    for (let i = 0; i < 25; i += 1) {\n      state[i] = new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"]();\n    }\n\n    this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n  }\n\n  _doProcessBlock(M, offset) {\n    // Shortcuts\n    const state = this._state;\n    const nBlockSizeLanes = this.blockSize / 2;\n\n    // Absorb\n    for (let i = 0; i < nBlockSizeLanes; i += 1) {\n      // Shortcuts\n      let M2i = M[offset + 2 * i];\n      let M2i1 = M[offset + 2 * i + 1];\n\n      // Swap endian\n      M2i = (((M2i << 8) | (M2i >>> 24)) & 0x00ff00ff)\n        | (((M2i << 24) | (M2i >>> 8)) & 0xff00ff00);\n      M2i1 = (((M2i1 << 8) | (M2i1 >>> 24)) & 0x00ff00ff)\n        | (((M2i1 << 24) | (M2i1 >>> 8)) & 0xff00ff00);\n\n      // Absorb message into state\n      const lane = state[i];\n      lane.high ^= M2i1;\n      lane.low ^= M2i;\n    }\n\n    // Rounds\n    for (let round = 0; round < 24; round += 1) {\n      // Theta\n      for (let x = 0; x < 5; x += 1) {\n        // Mix column lanes\n        let tMsw = 0;\n        let tLsw = 0;\n        for (let y = 0; y < 5; y += 1) {\n          const lane = state[x + 5 * y];\n          tMsw ^= lane.high;\n          tLsw ^= lane.low;\n        }\n\n        // Temporary values\n        const Tx = T[x];\n        Tx.high = tMsw;\n        Tx.low = tLsw;\n      }\n      for (let x = 0; x < 5; x += 1) {\n        // Shortcuts\n        const Tx4 = T[(x + 4) % 5];\n        const Tx1 = T[(x + 1) % 5];\n        const Tx1Msw = Tx1.high;\n        const Tx1Lsw = Tx1.low;\n\n        // Mix surrounding columns\n        const tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n        const tLsw = Tx4.low ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n        for (let y = 0; y < 5; y += 1) {\n          const lane = state[x + 5 * y];\n          lane.high ^= tMsw;\n          lane.low ^= tLsw;\n        }\n      }\n\n      // Rho Pi\n      for (let laneIndex = 1; laneIndex < 25; laneIndex += 1) {\n        let tMsw;\n        let tLsw;\n\n        // Shortcuts\n        const lane = state[laneIndex];\n        const laneMsw = lane.high;\n        const laneLsw = lane.low;\n        const rhoOffset = RHO_OFFSETS[laneIndex];\n\n        // Rotate lanes\n        if (rhoOffset < 32) {\n          tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n          tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n        } else /* if (rhoOffset >= 32) */ {\n          tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n          tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n        }\n\n        // Transpose lanes\n        const TPiLane = T[PI_INDEXES[laneIndex]];\n        TPiLane.high = tMsw;\n        TPiLane.low = tLsw;\n      }\n\n      // Rho pi at x = y = 0\n      const T0 = T[0];\n      const state0 = state[0];\n      T0.high = state0.high;\n      T0.low = state0.low;\n\n      // Chi\n      for (let x = 0; x < 5; x += 1) {\n        for (let y = 0; y < 5; y += 1) {\n          // Shortcuts\n          const laneIndex = x + 5 * y;\n          const lane = state[laneIndex];\n          const TLane = T[laneIndex];\n          const Tx1Lane = T[((x + 1) % 5) + 5 * y];\n          const Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n          // Mix rows\n          lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n          lane.low = TLane.low ^ (~Tx1Lane.low & Tx2Lane.low);\n        }\n      }\n\n      // Iota\n      const lane = state[0];\n      const roundConstant = ROUND_CONSTANTS[round];\n      lane.high ^= roundConstant.high;\n      lane.low ^= roundConstant.low;\n    }\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n    const nBitsLeft = data.sigBytes * 8;\n    const blockSizeBits = this.blockSize * 32;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - (nBitsLeft % 32));\n    dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const state = this._state;\n    const outputLengthBytes = this.cfg.outputLength / 8;\n    const outputLengthLanes = outputLengthBytes / 8;\n\n    // Squeeze\n    const hashWords = [];\n    for (let i = 0; i < outputLengthLanes; i += 1) {\n      // Shortcuts\n      const lane = state[i];\n      let laneMsw = lane.high;\n      let laneLsw = lane.low;\n\n      // Swap endian\n      laneMsw = (((laneMsw << 8) | (laneMsw >>> 24)) & 0x00ff00ff)\n        | (((laneMsw << 24) | (laneMsw >>> 8)) & 0xff00ff00);\n      laneLsw = (((laneLsw << 8) | (laneLsw >>> 24)) & 0x00ff00ff)\n        | (((laneLsw << 24) | (laneLsw >>> 8)) & 0xff00ff00);\n\n      // Squeeze state to retrieve hash\n      hashWords.push(laneLsw);\n      hashWords.push(laneMsw);\n    }\n\n    // Return final computed hash\n    return new _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"](hashWords, outputLengthBytes);\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n\n    clone._state = this._state.slice(0);\n    const state = clone._state;\n    for (let i = 0; i < 25; i += 1) {\n      state[i] = state[i].clone();\n    }\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA3('message');\n *     var hash = CryptoJS.SHA3(wordArray);\n */\nconst SHA3 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHelper(SHA3Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA3(message, key);\n */\nconst HmacSHA3 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHmacHelper(SHA3Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/sha3.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/sha384.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/sha384.js ***!
  \**********************************************/
/*! exports provided: SHA384Algo, SHA384, HmacSHA384 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA384Algo\", function() { return SHA384Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA384\", function() { return SHA384; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacSHA384\", function() { return HmacSHA384; });\n/* harmony import */ var _x64_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./x64-core.js */ \"./node_modules/crypto-es/lib/x64-core.js\");\n/* harmony import */ var _sha512_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha512.js */ \"./node_modules/crypto-es/lib/sha512.js\");\n\n\n\n/**\n * SHA-384 hash algorithm.\n */\nclass SHA384Algo extends _sha512_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA512Algo\"] {\n  _doReset() {\n    this._hash = new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64WordArray\"]([\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0xcbbb9d5d, 0xc1059ed8),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0x629a292a, 0x367cd507),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0x9159015a, 0x3070dd17),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0x152fecd8, 0xf70e5939),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0x67332667, 0xffc00b31),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0x8eb44a87, 0x68581511),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0xdb0c2e0d, 0x64f98fa7),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_0__[\"X64Word\"](0x47b5481d, 0xbefa4fa4),\n    ]);\n  }\n\n  _doFinalize() {\n    const hash = super._doFinalize.call(this);\n\n    hash.sigBytes -= 16;\n\n    return hash;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA384('message');\n *     var hash = CryptoJS.SHA384(wordArray);\n */\nconst SHA384 = _sha512_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA512Algo\"]._createHelper(SHA384Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA384(message, key);\n */\nconst HmacSHA384 = _sha512_js__WEBPACK_IMPORTED_MODULE_1__[\"SHA512Algo\"]._createHmacHelper(SHA384Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvc2hhMzg0LmpzPzY1NWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR3VCO0FBQ2tCOztBQUV6QztBQUNBO0FBQ0E7QUFDTyx5QkFBeUIscURBQVU7QUFDMUM7QUFDQSxxQkFBcUIseURBQVk7QUFDakMsVUFBVSxvREFBTztBQUNqQixVQUFVLG9EQUFPO0FBQ2pCLFVBQVUsb0RBQU87QUFDakIsVUFBVSxvREFBTztBQUNqQixVQUFVLG9EQUFPO0FBQ2pCLFVBQVUsb0RBQU87QUFDakIsVUFBVSxvREFBTztBQUNqQixVQUFVLG9EQUFPO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQSxZQUFZLFVBQVU7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGVBQWUscURBQVU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsaUJBQWlCO0FBQzVCO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUJBQW1CLHFEQUFVIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvc2hhMzg0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgWDY0V29yZCxcbiAgWDY0V29yZEFycmF5LFxufSBmcm9tICcuL3g2NC1jb3JlLmpzJztcbmltcG9ydCB7IFNIQTUxMkFsZ28gfSBmcm9tICcuL3NoYTUxMi5qcyc7XG5cbi8qKlxuICogU0hBLTM4NCBoYXNoIGFsZ29yaXRobS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNIQTM4NEFsZ28gZXh0ZW5kcyBTSEE1MTJBbGdvIHtcbiAgX2RvUmVzZXQoKSB7XG4gICAgdGhpcy5faGFzaCA9IG5ldyBYNjRXb3JkQXJyYXkoW1xuICAgICAgbmV3IFg2NFdvcmQoMHhjYmJiOWQ1ZCwgMHhjMTA1OWVkOCksXG4gICAgICBuZXcgWDY0V29yZCgweDYyOWEyOTJhLCAweDM2N2NkNTA3KSxcbiAgICAgIG5ldyBYNjRXb3JkKDB4OTE1OTAxNWEsIDB4MzA3MGRkMTcpLFxuICAgICAgbmV3IFg2NFdvcmQoMHgxNTJmZWNkOCwgMHhmNzBlNTkzOSksXG4gICAgICBuZXcgWDY0V29yZCgweDY3MzMyNjY3LCAweGZmYzAwYjMxKSxcbiAgICAgIG5ldyBYNjRXb3JkKDB4OGViNDRhODcsIDB4Njg1ODE1MTEpLFxuICAgICAgbmV3IFg2NFdvcmQoMHhkYjBjMmUwZCwgMHg2NGY5OGZhNyksXG4gICAgICBuZXcgWDY0V29yZCgweDQ3YjU0ODFkLCAweGJlZmE0ZmE0KSxcbiAgICBdKTtcbiAgfVxuXG4gIF9kb0ZpbmFsaXplKCkge1xuICAgIGNvbnN0IGhhc2ggPSBzdXBlci5fZG9GaW5hbGl6ZS5jYWxsKHRoaXMpO1xuXG4gICAgaGFzaC5zaWdCeXRlcyAtPSAxNjtcblxuICAgIHJldHVybiBoYXNoO1xuICB9XG59XG5cbi8qKlxuICogU2hvcnRjdXQgZnVuY3Rpb24gdG8gdGhlIGhhc2hlcidzIG9iamVjdCBpbnRlcmZhY2UuXG4gKlxuICogQHBhcmFtIHtXb3JkQXJyYXl8c3RyaW5nfSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGhhc2guXG4gKlxuICogQHJldHVybiB7V29yZEFycmF5fSBUaGUgaGFzaC5cbiAqXG4gKiBAc3RhdGljXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAgICAgdmFyIGhhc2ggPSBDcnlwdG9KUy5TSEEzODQoJ21lc3NhZ2UnKTtcbiAqICAgICB2YXIgaGFzaCA9IENyeXB0b0pTLlNIQTM4NCh3b3JkQXJyYXkpO1xuICovXG5leHBvcnQgY29uc3QgU0hBMzg0ID0gU0hBNTEyQWxnby5fY3JlYXRlSGVscGVyKFNIQTM4NEFsZ28pO1xuXG4vKipcbiAqIFNob3J0Y3V0IGZ1bmN0aW9uIHRvIHRoZSBITUFDJ3Mgb2JqZWN0IGludGVyZmFjZS5cbiAqXG4gKiBAcGFyYW0ge1dvcmRBcnJheXxzdHJpbmd9IG1lc3NhZ2UgVGhlIG1lc3NhZ2UgdG8gaGFzaC5cbiAqIEBwYXJhbSB7V29yZEFycmF5fHN0cmluZ30ga2V5IFRoZSBzZWNyZXQga2V5LlxuICpcbiAqIEByZXR1cm4ge1dvcmRBcnJheX0gVGhlIEhNQUMuXG4gKlxuICogQHN0YXRpY1xuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBobWFjID0gQ3J5cHRvSlMuSG1hY1NIQTM4NChtZXNzYWdlLCBrZXkpO1xuICovXG5leHBvcnQgY29uc3QgSG1hY1NIQTM4NCA9IFNIQTUxMkFsZ28uX2NyZWF0ZUhtYWNIZWxwZXIoU0hBMzg0QWxnbyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/sha384.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/sha512.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-es/lib/sha512.js ***!
  \**********************************************/
/*! exports provided: SHA512Algo, SHA512, HmacSHA512 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA512Algo\", function() { return SHA512Algo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHA512\", function() { return SHA512; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HmacSHA512\", function() { return HmacSHA512; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _x64_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./x64-core.js */ \"./node_modules/crypto-es/lib/x64-core.js\");\n\n\n\n// Constants\nconst K = [\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x428a2f98, 0xd728ae22),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x71374491, 0x23ef65cd),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xb5c0fbcf, 0xec4d3b2f),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xe9b5dba5, 0x8189dbbc),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x3956c25b, 0xf348b538),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x59f111f1, 0xb605d019),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x923f82a4, 0xaf194f9b),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xab1c5ed5, 0xda6d8118),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xd807aa98, 0xa3030242),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x12835b01, 0x45706fbe),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x243185be, 0x4ee4b28c),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x550c7dc3, 0xd5ffb4e2),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x72be5d74, 0xf27b896f),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x80deb1fe, 0x3b1696b1),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x9bdc06a7, 0x25c71235),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xc19bf174, 0xcf692694),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xe49b69c1, 0x9ef14ad2),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xefbe4786, 0x384f25e3),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x0fc19dc6, 0x8b8cd5b5),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x240ca1cc, 0x77ac9c65),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x2de92c6f, 0x592b0275),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x4a7484aa, 0x6ea6e483),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x5cb0a9dc, 0xbd41fbd4),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x76f988da, 0x831153b5),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x983e5152, 0xee66dfab),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xa831c66d, 0x2db43210),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xb00327c8, 0x98fb213f),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xbf597fc7, 0xbeef0ee4),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xc6e00bf3, 0x3da88fc2),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xd5a79147, 0x930aa725),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x06ca6351, 0xe003826f),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x14292967, 0x0a0e6e70),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x27b70a85, 0x46d22ffc),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x2e1b2138, 0x5c26c926),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x4d2c6dfc, 0x5ac42aed),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x53380d13, 0x9d95b3df),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x650a7354, 0x8baf63de),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x766a0abb, 0x3c77b2a8),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x81c2c92e, 0x47edaee6),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x92722c85, 0x1482353b),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xa2bfe8a1, 0x4cf10364),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xa81a664b, 0xbc423001),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xc24b8b70, 0xd0f89791),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xc76c51a3, 0x0654be30),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xd192e819, 0xd6ef5218),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xd6990624, 0x5565a910),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xf40e3585, 0x5771202a),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x106aa070, 0x32bbd1b8),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x19a4c116, 0xb8d2d0c8),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x1e376c08, 0x5141ab53),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x2748774c, 0xdf8eeb99),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x34b0bcb5, 0xe19b48a8),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x391c0cb3, 0xc5c95a63),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x4ed8aa4a, 0xe3418acb),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x5b9cca4f, 0x7763e373),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x682e6ff3, 0xd6b2b8a3),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x748f82ee, 0x5defb2fc),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x78a5636f, 0x43172f60),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x84c87814, 0xa1f0ab72),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x8cc70208, 0x1a6439ec),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x90befffa, 0x23631e28),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xa4506ceb, 0xde82bde9),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xbef9a3f7, 0xb2c67915),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xc67178f2, 0xe372532b),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xca273ece, 0xea26619c),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xd186b8c7, 0x21c0c207),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xeada7dd6, 0xcde0eb1e),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xf57d4f7f, 0xee6ed178),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x06f067aa, 0x72176fba),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x0a637dc5, 0xa2c898a6),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x113f9804, 0xbef90dae),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x1b710b35, 0x131c471b),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x28db77f5, 0x23047d84),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x32caab7b, 0x40c72493),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x3c9ebe0a, 0x15c9bebc),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x431d67c4, 0x9c100d4c),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x4cc5d4be, 0xcb3e42b6),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x597f299c, 0xfc657e2a),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x5fcb6fab, 0x3ad6faec),\n  new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x6c44198c, 0x4a475817),\n];\n\n// Reusable objects\nconst W = [];\nfor (let i = 0; i < 80; i += 1) {\n  W[i] = new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"]();\n}\n\n/**\n * SHA-512 hash algorithm.\n */\nclass SHA512Algo extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"] {\n  constructor() {\n    super();\n\n    this.blockSize = 1024 / 32;\n  }\n\n  _doReset() {\n    this._hash = new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64WordArray\"]([\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x6a09e667, 0xf3bcc908),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xbb67ae85, 0x84caa73b),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x3c6ef372, 0xfe94f82b),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0xa54ff53a, 0x5f1d36f1),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x510e527f, 0xade682d1),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x9b05688c, 0x2b3e6c1f),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x1f83d9ab, 0xfb41bd6b),\n      new _x64_core_js__WEBPACK_IMPORTED_MODULE_1__[\"X64Word\"](0x5be0cd19, 0x137e2179),\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    // Shortcuts\n    const H = this._hash.words;\n\n    const H0 = H[0];\n    const H1 = H[1];\n    const H2 = H[2];\n    const H3 = H[3];\n    const H4 = H[4];\n    const H5 = H[5];\n    const H6 = H[6];\n    const H7 = H[7];\n\n    const H0h = H0.high;\n    let H0l = H0.low;\n    const H1h = H1.high;\n    let H1l = H1.low;\n    const H2h = H2.high;\n    let H2l = H2.low;\n    const H3h = H3.high;\n    let H3l = H3.low;\n    const H4h = H4.high;\n    let H4l = H4.low;\n    const H5h = H5.high;\n    let H5l = H5.low;\n    const H6h = H6.high;\n    let H6l = H6.low;\n    const H7h = H7.high;\n    let H7l = H7.low;\n\n    // Working variables\n    let ah = H0h;\n    let al = H0l;\n    let bh = H1h;\n    let bl = H1l;\n    let ch = H2h;\n    let cl = H2l;\n    let dh = H3h;\n    let dl = H3l;\n    let eh = H4h;\n    let el = H4l;\n    let fh = H5h;\n    let fl = H5l;\n    let gh = H6h;\n    let gl = H6l;\n    let hh = H7h;\n    let hl = H7l;\n\n    // Rounds\n    for (let i = 0; i < 80; i += 1) {\n      let Wil;\n      let Wih;\n\n      // Shortcut\n      const Wi = W[i];\n\n      // Extend message\n      if (i < 16) {\n        Wi.high = M[offset + i * 2] | 0;\n        Wih = Wi.high;\n        Wi.low = M[offset + i * 2 + 1] | 0;\n        Wil = Wi.low;\n      } else {\n        // Gamma0\n        const gamma0x = W[i - 15];\n        const gamma0xh = gamma0x.high;\n        const gamma0xl = gamma0x.low;\n        const gamma0h = ((gamma0xh >>> 1) | (gamma0xl << 31))\n          ^ ((gamma0xh >>> 8) | (gamma0xl << 24))\n          ^ (gamma0xh >>> 7);\n        const gamma0l = ((gamma0xl >>> 1) | (gamma0xh << 31))\n          ^ ((gamma0xl >>> 8) | (gamma0xh << 24))\n          ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n        // Gamma1\n        const gamma1x = W[i - 2];\n        const gamma1xh = gamma1x.high;\n        const gamma1xl = gamma1x.low;\n        const gamma1h = ((gamma1xh >>> 19) | (gamma1xl << 13))\n          ^ ((gamma1xh << 3) | (gamma1xl >>> 29))\n          ^ (gamma1xh >>> 6);\n        const gamma1l = ((gamma1xl >>> 19) | (gamma1xh << 13))\n          ^ ((gamma1xl << 3) | (gamma1xh >>> 29))\n          ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n        const Wi7 = W[i - 7];\n        const Wi7h = Wi7.high;\n        const Wi7l = Wi7.low;\n\n        const Wi16 = W[i - 16];\n        const Wi16h = Wi16.high;\n        const Wi16l = Wi16.low;\n\n        Wil = gamma0l + Wi7l;\n        Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n        Wil += gamma1l;\n        Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n        Wil += Wi16l;\n        Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n        Wi.high = Wih;\n        Wi.low = Wil;\n      }\n\n      const chh = (eh & fh) ^ (~eh & gh);\n      const chl = (el & fl) ^ (~el & gl);\n      const majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n      const majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n      const sigma0h = ((ah >>> 28) | (al << 4))\n        ^ ((ah << 30) | (al >>> 2))\n        ^ ((ah << 25) | (al >>> 7));\n      const sigma0l = ((al >>> 28) | (ah << 4))\n        ^ ((al << 30) | (ah >>> 2))\n        ^ ((al << 25) | (ah >>> 7));\n      const sigma1h = ((eh >>> 14) | (el << 18))\n        ^ ((eh >>> 18) | (el << 14))\n        ^ ((eh << 23) | (el >>> 9));\n      const sigma1l = ((el >>> 14) | (eh << 18))\n        ^ ((el >>> 18) | (eh << 14))\n        ^ ((el << 23) | (eh >>> 9));\n\n      // t1 = h + sigma1 + ch + K[i] + W[i]\n      const Ki = K[i];\n      const Kih = Ki.high;\n      const Kil = Ki.low;\n\n      let t1l = hl + sigma1l;\n      let t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n      t1l += chl;\n      t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n      t1l += Kil;\n      t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n      t1l += Wil;\n      t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n      // t2 = sigma0 + maj\n      const t2l = sigma0l + majl;\n      const t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n      // Update working variables\n      hh = gh;\n      hl = gl;\n      gh = fh;\n      gl = fl;\n      fh = eh;\n      fl = el;\n      el = (dl + t1l) | 0;\n      eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n      dh = ch;\n      dl = cl;\n      ch = bh;\n      cl = bl;\n      bh = ah;\n      bl = al;\n      al = (t1l + t2l) | 0;\n      ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n    }\n\n    // Intermediate hash value\n    H0.low = (H0l + al);\n    H0l = H0.low;\n    H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n    H1.low = (H1l + bl);\n    H1l = H1.low;\n    H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n    H2.low = (H2l + cl);\n    H2l = H2.low;\n    H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n    H3.low = (H3l + dl);\n    H3l = H3.low;\n    H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n    H4.low = (H4l + el);\n    H4l = H4.low;\n    H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n    H5.low = (H5l + fl);\n    H5l = H5.low;\n    H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n    H6.low = (H6l + gl);\n    H6l = H6.low;\n    H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n    H7.low = (H7l + hl);\n    H7l = H7.low;\n    H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Convert hash to 32-bit word array before returning\n    const hash = this._hash.toX32();\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA512('message');\n *     var hash = CryptoJS.SHA512(wordArray);\n */\nconst SHA512 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHelper(SHA512Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA512(message, key);\n */\nconst HmacSHA512 = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Hasher\"]._createHmacHelper(SHA512Algo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/sha512.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/tripledes.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-es/lib/tripledes.js ***!
  \*************************************************/
/*! exports provided: DESAlgo, DES, TripleDESAlgo, TripleDES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DESAlgo\", function() { return DESAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DES\", function() { return DES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TripleDESAlgo\", function() { return TripleDESAlgo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TripleDES\", function() { return TripleDES; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n/* harmony import */ var _cipher_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cipher-core.js */ \"./node_modules/crypto-es/lib/cipher-core.js\");\n\n\n\n// Permuted Choice 1 constants\nconst PC1 = [\n  57, 49, 41, 33, 25, 17, 9, 1,\n  58, 50, 42, 34, 26, 18, 10, 2,\n  59, 51, 43, 35, 27, 19, 11, 3,\n  60, 52, 44, 36, 63, 55, 47, 39,\n  31, 23, 15, 7, 62, 54, 46, 38,\n  30, 22, 14, 6, 61, 53, 45, 37,\n  29, 21, 13, 5, 28, 20, 12, 4,\n];\n\n// Permuted Choice 2 constants\nconst PC2 = [\n  14, 17, 11, 24, 1, 5,\n  3, 28, 15, 6, 21, 10,\n  23, 19, 12, 4, 26, 8,\n  16, 7, 27, 20, 13, 2,\n  41, 52, 31, 37, 47, 55,\n  30, 40, 51, 45, 33, 48,\n  44, 49, 39, 56, 34, 53,\n  46, 42, 50, 36, 29, 32,\n];\n\n// Cumulative bit shift constants\nconst BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n// SBOXes and round permutation constants\nconst SBOX_P = [\n  {\n    0x0: 0x808200,\n    0x10000000: 0x8000,\n    0x20000000: 0x808002,\n    0x30000000: 0x2,\n    0x40000000: 0x200,\n    0x50000000: 0x808202,\n    0x60000000: 0x800202,\n    0x70000000: 0x800000,\n    0x80000000: 0x202,\n    0x90000000: 0x800200,\n    0xa0000000: 0x8200,\n    0xb0000000: 0x808000,\n    0xc0000000: 0x8002,\n    0xd0000000: 0x800002,\n    0xe0000000: 0x0,\n    0xf0000000: 0x8202,\n    0x8000000: 0x0,\n    0x18000000: 0x808202,\n    0x28000000: 0x8202,\n    0x38000000: 0x8000,\n    0x48000000: 0x808200,\n    0x58000000: 0x200,\n    0x68000000: 0x808002,\n    0x78000000: 0x2,\n    0x88000000: 0x800200,\n    0x98000000: 0x8200,\n    0xa8000000: 0x808000,\n    0xb8000000: 0x800202,\n    0xc8000000: 0x800002,\n    0xd8000000: 0x8002,\n    0xe8000000: 0x202,\n    0xf8000000: 0x800000,\n    0x1: 0x8000,\n    0x10000001: 0x2,\n    0x20000001: 0x808200,\n    0x30000001: 0x800000,\n    0x40000001: 0x808002,\n    0x50000001: 0x8200,\n    0x60000001: 0x200,\n    0x70000001: 0x800202,\n    0x80000001: 0x808202,\n    0x90000001: 0x808000,\n    0xa0000001: 0x800002,\n    0xb0000001: 0x8202,\n    0xc0000001: 0x202,\n    0xd0000001: 0x800200,\n    0xe0000001: 0x8002,\n    0xf0000001: 0x0,\n    0x8000001: 0x808202,\n    0x18000001: 0x808000,\n    0x28000001: 0x800000,\n    0x38000001: 0x200,\n    0x48000001: 0x8000,\n    0x58000001: 0x800002,\n    0x68000001: 0x2,\n    0x78000001: 0x8202,\n    0x88000001: 0x8002,\n    0x98000001: 0x800202,\n    0xa8000001: 0x202,\n    0xb8000001: 0x808200,\n    0xc8000001: 0x800200,\n    0xd8000001: 0x0,\n    0xe8000001: 0x8200,\n    0xf8000001: 0x808002,\n  },\n  {\n    0x0: 0x40084010,\n    0x1000000: 0x4000,\n    0x2000000: 0x80000,\n    0x3000000: 0x40080010,\n    0x4000000: 0x40000010,\n    0x5000000: 0x40084000,\n    0x6000000: 0x40004000,\n    0x7000000: 0x10,\n    0x8000000: 0x84000,\n    0x9000000: 0x40004010,\n    0xa000000: 0x40000000,\n    0xb000000: 0x84010,\n    0xc000000: 0x80010,\n    0xd000000: 0x0,\n    0xe000000: 0x4010,\n    0xf000000: 0x40080000,\n    0x800000: 0x40004000,\n    0x1800000: 0x84010,\n    0x2800000: 0x10,\n    0x3800000: 0x40004010,\n    0x4800000: 0x40084010,\n    0x5800000: 0x40000000,\n    0x6800000: 0x80000,\n    0x7800000: 0x40080010,\n    0x8800000: 0x80010,\n    0x9800000: 0x0,\n    0xa800000: 0x4000,\n    0xb800000: 0x40080000,\n    0xc800000: 0x40000010,\n    0xd800000: 0x84000,\n    0xe800000: 0x40084000,\n    0xf800000: 0x4010,\n    0x10000000: 0x0,\n    0x11000000: 0x40080010,\n    0x12000000: 0x40004010,\n    0x13000000: 0x40084000,\n    0x14000000: 0x40080000,\n    0x15000000: 0x10,\n    0x16000000: 0x84010,\n    0x17000000: 0x4000,\n    0x18000000: 0x4010,\n    0x19000000: 0x80000,\n    0x1a000000: 0x80010,\n    0x1b000000: 0x40000010,\n    0x1c000000: 0x84000,\n    0x1d000000: 0x40004000,\n    0x1e000000: 0x40000000,\n    0x1f000000: 0x40084010,\n    0x10800000: 0x84010,\n    0x11800000: 0x80000,\n    0x12800000: 0x40080000,\n    0x13800000: 0x4000,\n    0x14800000: 0x40004000,\n    0x15800000: 0x40084010,\n    0x16800000: 0x10,\n    0x17800000: 0x40000000,\n    0x18800000: 0x40084000,\n    0x19800000: 0x40000010,\n    0x1a800000: 0x40004010,\n    0x1b800000: 0x80010,\n    0x1c800000: 0x0,\n    0x1d800000: 0x4010,\n    0x1e800000: 0x40080010,\n    0x1f800000: 0x84000,\n  },\n  {\n    0x0: 0x104,\n    0x100000: 0x0,\n    0x200000: 0x4000100,\n    0x300000: 0x10104,\n    0x400000: 0x10004,\n    0x500000: 0x4000004,\n    0x600000: 0x4010104,\n    0x700000: 0x4010000,\n    0x800000: 0x4000000,\n    0x900000: 0x4010100,\n    0xa00000: 0x10100,\n    0xb00000: 0x4010004,\n    0xc00000: 0x4000104,\n    0xd00000: 0x10000,\n    0xe00000: 0x4,\n    0xf00000: 0x100,\n    0x80000: 0x4010100,\n    0x180000: 0x4010004,\n    0x280000: 0x0,\n    0x380000: 0x4000100,\n    0x480000: 0x4000004,\n    0x580000: 0x10000,\n    0x680000: 0x10004,\n    0x780000: 0x104,\n    0x880000: 0x4,\n    0x980000: 0x100,\n    0xa80000: 0x4010000,\n    0xb80000: 0x10104,\n    0xc80000: 0x10100,\n    0xd80000: 0x4000104,\n    0xe80000: 0x4010104,\n    0xf80000: 0x4000000,\n    0x1000000: 0x4010100,\n    0x1100000: 0x10004,\n    0x1200000: 0x10000,\n    0x1300000: 0x4000100,\n    0x1400000: 0x100,\n    0x1500000: 0x4010104,\n    0x1600000: 0x4000004,\n    0x1700000: 0x0,\n    0x1800000: 0x4000104,\n    0x1900000: 0x4000000,\n    0x1a00000: 0x4,\n    0x1b00000: 0x10100,\n    0x1c00000: 0x4010000,\n    0x1d00000: 0x104,\n    0x1e00000: 0x10104,\n    0x1f00000: 0x4010004,\n    0x1080000: 0x4000000,\n    0x1180000: 0x104,\n    0x1280000: 0x4010100,\n    0x1380000: 0x0,\n    0x1480000: 0x10004,\n    0x1580000: 0x4000100,\n    0x1680000: 0x100,\n    0x1780000: 0x4010004,\n    0x1880000: 0x10000,\n    0x1980000: 0x4010104,\n    0x1a80000: 0x10104,\n    0x1b80000: 0x4000004,\n    0x1c80000: 0x4000104,\n    0x1d80000: 0x4010000,\n    0x1e80000: 0x4,\n    0x1f80000: 0x10100,\n  },\n  {\n    0x0: 0x80401000,\n    0x10000: 0x80001040,\n    0x20000: 0x401040,\n    0x30000: 0x80400000,\n    0x40000: 0x0,\n    0x50000: 0x401000,\n    0x60000: 0x80000040,\n    0x70000: 0x400040,\n    0x80000: 0x80000000,\n    0x90000: 0x400000,\n    0xa0000: 0x40,\n    0xb0000: 0x80001000,\n    0xc0000: 0x80400040,\n    0xd0000: 0x1040,\n    0xe0000: 0x1000,\n    0xf0000: 0x80401040,\n    0x8000: 0x80001040,\n    0x18000: 0x40,\n    0x28000: 0x80400040,\n    0x38000: 0x80001000,\n    0x48000: 0x401000,\n    0x58000: 0x80401040,\n    0x68000: 0x0,\n    0x78000: 0x80400000,\n    0x88000: 0x1000,\n    0x98000: 0x80401000,\n    0xa8000: 0x400000,\n    0xb8000: 0x1040,\n    0xc8000: 0x80000000,\n    0xd8000: 0x400040,\n    0xe8000: 0x401040,\n    0xf8000: 0x80000040,\n    0x100000: 0x400040,\n    0x110000: 0x401000,\n    0x120000: 0x80000040,\n    0x130000: 0x0,\n    0x140000: 0x1040,\n    0x150000: 0x80400040,\n    0x160000: 0x80401000,\n    0x170000: 0x80001040,\n    0x180000: 0x80401040,\n    0x190000: 0x80000000,\n    0x1a0000: 0x80400000,\n    0x1b0000: 0x401040,\n    0x1c0000: 0x80001000,\n    0x1d0000: 0x400000,\n    0x1e0000: 0x40,\n    0x1f0000: 0x1000,\n    0x108000: 0x80400000,\n    0x118000: 0x80401040,\n    0x128000: 0x0,\n    0x138000: 0x401000,\n    0x148000: 0x400040,\n    0x158000: 0x80000000,\n    0x168000: 0x80001040,\n    0x178000: 0x40,\n    0x188000: 0x80000040,\n    0x198000: 0x1000,\n    0x1a8000: 0x80001000,\n    0x1b8000: 0x80400040,\n    0x1c8000: 0x1040,\n    0x1d8000: 0x80401000,\n    0x1e8000: 0x400000,\n    0x1f8000: 0x401040,\n  },\n  {\n    0x0: 0x80,\n    0x1000: 0x1040000,\n    0x2000: 0x40000,\n    0x3000: 0x20000000,\n    0x4000: 0x20040080,\n    0x5000: 0x1000080,\n    0x6000: 0x21000080,\n    0x7000: 0x40080,\n    0x8000: 0x1000000,\n    0x9000: 0x20040000,\n    0xa000: 0x20000080,\n    0xb000: 0x21040080,\n    0xc000: 0x21040000,\n    0xd000: 0x0,\n    0xe000: 0x1040080,\n    0xf000: 0x21000000,\n    0x800: 0x1040080,\n    0x1800: 0x21000080,\n    0x2800: 0x80,\n    0x3800: 0x1040000,\n    0x4800: 0x40000,\n    0x5800: 0x20040080,\n    0x6800: 0x21040000,\n    0x7800: 0x20000000,\n    0x8800: 0x20040000,\n    0x9800: 0x0,\n    0xa800: 0x21040080,\n    0xb800: 0x1000080,\n    0xc800: 0x20000080,\n    0xd800: 0x21000000,\n    0xe800: 0x1000000,\n    0xf800: 0x40080,\n    0x10000: 0x40000,\n    0x11000: 0x80,\n    0x12000: 0x20000000,\n    0x13000: 0x21000080,\n    0x14000: 0x1000080,\n    0x15000: 0x21040000,\n    0x16000: 0x20040080,\n    0x17000: 0x1000000,\n    0x18000: 0x21040080,\n    0x19000: 0x21000000,\n    0x1a000: 0x1040000,\n    0x1b000: 0x20040000,\n    0x1c000: 0x40080,\n    0x1d000: 0x20000080,\n    0x1e000: 0x0,\n    0x1f000: 0x1040080,\n    0x10800: 0x21000080,\n    0x11800: 0x1000000,\n    0x12800: 0x1040000,\n    0x13800: 0x20040080,\n    0x14800: 0x20000000,\n    0x15800: 0x1040080,\n    0x16800: 0x80,\n    0x17800: 0x21040000,\n    0x18800: 0x40080,\n    0x19800: 0x21040080,\n    0x1a800: 0x0,\n    0x1b800: 0x21000000,\n    0x1c800: 0x1000080,\n    0x1d800: 0x40000,\n    0x1e800: 0x20040000,\n    0x1f800: 0x20000080,\n  },\n  {\n    0x0: 0x10000008,\n    0x100: 0x2000,\n    0x200: 0x10200000,\n    0x300: 0x10202008,\n    0x400: 0x10002000,\n    0x500: 0x200000,\n    0x600: 0x200008,\n    0x700: 0x10000000,\n    0x800: 0x0,\n    0x900: 0x10002008,\n    0xa00: 0x202000,\n    0xb00: 0x8,\n    0xc00: 0x10200008,\n    0xd00: 0x202008,\n    0xe00: 0x2008,\n    0xf00: 0x10202000,\n    0x80: 0x10200000,\n    0x180: 0x10202008,\n    0x280: 0x8,\n    0x380: 0x200000,\n    0x480: 0x202008,\n    0x580: 0x10000008,\n    0x680: 0x10002000,\n    0x780: 0x2008,\n    0x880: 0x200008,\n    0x980: 0x2000,\n    0xa80: 0x10002008,\n    0xb80: 0x10200008,\n    0xc80: 0x0,\n    0xd80: 0x10202000,\n    0xe80: 0x202000,\n    0xf80: 0x10000000,\n    0x1000: 0x10002000,\n    0x1100: 0x10200008,\n    0x1200: 0x10202008,\n    0x1300: 0x2008,\n    0x1400: 0x200000,\n    0x1500: 0x10000000,\n    0x1600: 0x10000008,\n    0x1700: 0x202000,\n    0x1800: 0x202008,\n    0x1900: 0x0,\n    0x1a00: 0x8,\n    0x1b00: 0x10200000,\n    0x1c00: 0x2000,\n    0x1d00: 0x10002008,\n    0x1e00: 0x10202000,\n    0x1f00: 0x200008,\n    0x1080: 0x8,\n    0x1180: 0x202000,\n    0x1280: 0x200000,\n    0x1380: 0x10000008,\n    0x1480: 0x10002000,\n    0x1580: 0x2008,\n    0x1680: 0x10202008,\n    0x1780: 0x10200000,\n    0x1880: 0x10202000,\n    0x1980: 0x10200008,\n    0x1a80: 0x2000,\n    0x1b80: 0x202008,\n    0x1c80: 0x200008,\n    0x1d80: 0x0,\n    0x1e80: 0x10000000,\n    0x1f80: 0x10002008,\n  },\n  {\n    0x0: 0x100000,\n    0x10: 0x2000401,\n    0x20: 0x400,\n    0x30: 0x100401,\n    0x40: 0x2100401,\n    0x50: 0x0,\n    0x60: 0x1,\n    0x70: 0x2100001,\n    0x80: 0x2000400,\n    0x90: 0x100001,\n    0xa0: 0x2000001,\n    0xb0: 0x2100400,\n    0xc0: 0x2100000,\n    0xd0: 0x401,\n    0xe0: 0x100400,\n    0xf0: 0x2000000,\n    0x8: 0x2100001,\n    0x18: 0x0,\n    0x28: 0x2000401,\n    0x38: 0x2100400,\n    0x48: 0x100000,\n    0x58: 0x2000001,\n    0x68: 0x2000000,\n    0x78: 0x401,\n    0x88: 0x100401,\n    0x98: 0x2000400,\n    0xa8: 0x2100000,\n    0xb8: 0x100001,\n    0xc8: 0x400,\n    0xd8: 0x2100401,\n    0xe8: 0x1,\n    0xf8: 0x100400,\n    0x100: 0x2000000,\n    0x110: 0x100000,\n    0x120: 0x2000401,\n    0x130: 0x2100001,\n    0x140: 0x100001,\n    0x150: 0x2000400,\n    0x160: 0x2100400,\n    0x170: 0x100401,\n    0x180: 0x401,\n    0x190: 0x2100401,\n    0x1a0: 0x100400,\n    0x1b0: 0x1,\n    0x1c0: 0x0,\n    0x1d0: 0x2100000,\n    0x1e0: 0x2000001,\n    0x1f0: 0x400,\n    0x108: 0x100400,\n    0x118: 0x2000401,\n    0x128: 0x2100001,\n    0x138: 0x1,\n    0x148: 0x2000000,\n    0x158: 0x100000,\n    0x168: 0x401,\n    0x178: 0x2100400,\n    0x188: 0x2000001,\n    0x198: 0x2100000,\n    0x1a8: 0x0,\n    0x1b8: 0x2100401,\n    0x1c8: 0x100401,\n    0x1d8: 0x400,\n    0x1e8: 0x2000400,\n    0x1f8: 0x100001,\n  },\n  {\n    0x0: 0x8000820,\n    0x1: 0x20000,\n    0x2: 0x8000000,\n    0x3: 0x20,\n    0x4: 0x20020,\n    0x5: 0x8020820,\n    0x6: 0x8020800,\n    0x7: 0x800,\n    0x8: 0x8020000,\n    0x9: 0x8000800,\n    0xa: 0x20800,\n    0xb: 0x8020020,\n    0xc: 0x820,\n    0xd: 0x0,\n    0xe: 0x8000020,\n    0xf: 0x20820,\n    0x80000000: 0x800,\n    0x80000001: 0x8020820,\n    0x80000002: 0x8000820,\n    0x80000003: 0x8000000,\n    0x80000004: 0x8020000,\n    0x80000005: 0x20800,\n    0x80000006: 0x20820,\n    0x80000007: 0x20,\n    0x80000008: 0x8000020,\n    0x80000009: 0x820,\n    0x8000000a: 0x20020,\n    0x8000000b: 0x8020800,\n    0x8000000c: 0x0,\n    0x8000000d: 0x8020020,\n    0x8000000e: 0x8000800,\n    0x8000000f: 0x20000,\n    0x10: 0x20820,\n    0x11: 0x8020800,\n    0x12: 0x20,\n    0x13: 0x800,\n    0x14: 0x8000800,\n    0x15: 0x8000020,\n    0x16: 0x8020020,\n    0x17: 0x20000,\n    0x18: 0x0,\n    0x19: 0x20020,\n    0x1a: 0x8020000,\n    0x1b: 0x8000820,\n    0x1c: 0x8020820,\n    0x1d: 0x20800,\n    0x1e: 0x820,\n    0x1f: 0x8000000,\n    0x80000010: 0x20000,\n    0x80000011: 0x800,\n    0x80000012: 0x8020020,\n    0x80000013: 0x20820,\n    0x80000014: 0x20,\n    0x80000015: 0x8020000,\n    0x80000016: 0x8000000,\n    0x80000017: 0x8000820,\n    0x80000018: 0x8020820,\n    0x80000019: 0x8000020,\n    0x8000001a: 0x8000800,\n    0x8000001b: 0x0,\n    0x8000001c: 0x20800,\n    0x8000001d: 0x820,\n    0x8000001e: 0x20020,\n    0x8000001f: 0x8020800,\n  },\n];\n\n// Masks that select the SBOX input\nconst SBOX_MASK = [\n  0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n  0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f,\n];\n\n// Swap bits across the left and right words\nfunction exchangeLR(offset, mask) {\n  const t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n  this._rBlock ^= t;\n  this._lBlock ^= t << offset;\n}\n\nfunction exchangeRL(offset, mask) {\n  const t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n  this._lBlock ^= t;\n  this._rBlock ^= t << offset;\n}\n\n/**\n * DES block cipher algorithm.\n */\nclass DESAlgo extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_1__[\"BlockCipher\"] {\n  _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n\n    // Select 56 bits according to PC1\n    const keyBits = [];\n    for (let i = 0; i < 56; i += 1) {\n      const keyBitPos = PC1[i] - 1;\n      keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - (keyBitPos % 32))) & 1;\n    }\n\n    // Assemble 16 subkeys\n    this._subKeys = [];\n    const subKeys = this._subKeys;\n    for (let nSubKey = 0; nSubKey < 16; nSubKey += 1) {\n      // Create subkey\n      subKeys[nSubKey] = [];\n      const subKey = subKeys[nSubKey];\n\n      // Shortcut\n      const bitShift = BIT_SHIFTS[nSubKey];\n\n      // Select 48 bits according to PC2\n      for (let i = 0; i < 24; i += 1) {\n        // Select from the left 28 key bits\n        subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - (i % 6));\n\n        // Select from the right 28 key bits\n        subKey[4 + ((i / 6) | 0)]\n          |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)]\n          << (31 - (i % 6));\n      }\n\n      // Since each subkey is applied to an expanded 32-bit input,\n      // the subkey can be broken into 8 values scaled to 32-bits,\n      // which allows the key to be used without expansion\n      subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n      for (let i = 1; i < 7; i += 1) {\n        subKey[i] >>>= ((i - 1) * 4 + 3);\n      }\n      subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n    }\n\n    // Compute inverse subkeys\n    this._invSubKeys = [];\n    const invSubKeys = this._invSubKeys;\n    for (let i = 0; i < 16; i += 1) {\n      invSubKeys[i] = subKeys[15 - i];\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(M, offset, this._subKeys);\n  }\n\n  decryptBlock(M, offset) {\n    this._doCryptBlock(M, offset, this._invSubKeys);\n  }\n\n  _doCryptBlock(M, offset, subKeys) {\n    const _M = M;\n\n    // Get input\n    this._lBlock = M[offset];\n    this._rBlock = M[offset + 1];\n\n    // Initial permutation\n    exchangeLR.call(this, 4, 0x0f0f0f0f);\n    exchangeLR.call(this, 16, 0x0000ffff);\n    exchangeRL.call(this, 2, 0x33333333);\n    exchangeRL.call(this, 8, 0x00ff00ff);\n    exchangeLR.call(this, 1, 0x55555555);\n\n    // Rounds\n    for (let round = 0; round < 16; round += 1) {\n      // Shortcuts\n      const subKey = subKeys[round];\n      const lBlock = this._lBlock;\n      const rBlock = this._rBlock;\n\n      // Feistel function\n      let f = 0;\n      for (let i = 0; i < 8; i += 1) {\n        f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n      }\n      this._lBlock = rBlock;\n      this._rBlock = lBlock ^ f;\n    }\n\n    // Undo swap from last round\n    const t = this._lBlock;\n    this._lBlock = this._rBlock;\n    this._rBlock = t;\n\n    // Final permutation\n    exchangeLR.call(this, 1, 0x55555555);\n    exchangeRL.call(this, 8, 0x00ff00ff);\n    exchangeRL.call(this, 2, 0x33333333);\n    exchangeLR.call(this, 16, 0x0000ffff);\n    exchangeLR.call(this, 4, 0x0f0f0f0f);\n\n    // Set output\n    _M[offset] = this._lBlock;\n    _M[offset + 1] = this._rBlock;\n  }\n}\nDESAlgo.keySize = 64 / 32;\nDESAlgo.ivSize = 64 / 32;\nDESAlgo.blockSize = 64 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n */\nconst DES = _cipher_core_js__WEBPACK_IMPORTED_MODULE_1__[\"BlockCipher\"]._createHelper(DESAlgo);\n\n/**\n * Triple-DES block cipher algorithm.\n */\nclass TripleDESAlgo extends _cipher_core_js__WEBPACK_IMPORTED_MODULE_1__[\"BlockCipher\"] {\n  _doReset() {\n    // Shortcuts\n    const key = this._key;\n    const keyWords = key.words;\n    // Make sure the key length is valid (64, 128 or >= 192 bit)\n    if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n      throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n    }\n\n    // Extend the key according to the keying options defined in 3DES standard\n    const key1 = keyWords.slice(0, 2);\n    const key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n    const key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n    // Create DES instances\n    this._des1 = DESAlgo.createEncryptor(_core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(key1));\n    this._des2 = DESAlgo.createEncryptor(_core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(key2));\n    this._des3 = DESAlgo.createEncryptor(_core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"].create(key3));\n  }\n\n  encryptBlock(M, offset) {\n    this._des1.encryptBlock(M, offset);\n    this._des2.decryptBlock(M, offset);\n    this._des3.encryptBlock(M, offset);\n  }\n\n  decryptBlock(M, offset) {\n    this._des3.decryptBlock(M, offset);\n    this._des2.encryptBlock(M, offset);\n    this._des1.decryptBlock(M, offset);\n  }\n}\nTripleDESAlgo.keySize = 192 / 32;\nTripleDESAlgo.ivSize = 64 / 32;\nTripleDESAlgo.blockSize = 64 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n */\nconst TripleDES = _cipher_core_js__WEBPACK_IMPORTED_MODULE_1__[\"BlockCipher\"]._createHelper(TripleDESAlgo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIvdHJpcGxlZGVzLmpzP2ZiMGMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFbUI7QUFHTzs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDTyxzQkFBc0IsMkRBQVc7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixRQUFRO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsY0FBYztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixRQUFRO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixPQUFPO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixRQUFRO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QixZQUFZO0FBQ25DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsT0FBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxZQUFZLDJEQUFXOztBQUU5QjtBQUNBO0FBQ0E7QUFDTyw0QkFBNEIsMkRBQVc7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlDQUF5QyxrREFBUztBQUNsRCx5Q0FBeUMsa0RBQVM7QUFDbEQseUNBQXlDLGtEQUFTO0FBQ2xEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrQkFBa0IsMkRBQVciLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3J5cHRvLWVzL2xpYi90cmlwbGVkZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBXb3JkQXJyYXksXG59IGZyb20gJy4vY29yZS5qcyc7XG5pbXBvcnQge1xuICBCbG9ja0NpcGhlcixcbn0gZnJvbSAnLi9jaXBoZXItY29yZS5qcyc7XG5cbi8vIFBlcm11dGVkIENob2ljZSAxIGNvbnN0YW50c1xuY29uc3QgUEMxID0gW1xuICA1NywgNDksIDQxLCAzMywgMjUsIDE3LCA5LCAxLFxuICA1OCwgNTAsIDQyLCAzNCwgMjYsIDE4LCAxMCwgMixcbiAgNTksIDUxLCA0MywgMzUsIDI3LCAxOSwgMTEsIDMsXG4gIDYwLCA1MiwgNDQsIDM2LCA2MywgNTUsIDQ3LCAzOSxcbiAgMzEsIDIzLCAxNSwgNywgNjIsIDU0LCA0NiwgMzgsXG4gIDMwLCAyMiwgMTQsIDYsIDYxLCA1MywgNDUsIDM3LFxuICAyOSwgMjEsIDEzLCA1LCAyOCwgMjAsIDEyLCA0LFxuXTtcblxuLy8gUGVybXV0ZWQgQ2hvaWNlIDIgY29uc3RhbnRzXG5jb25zdCBQQzIgPSBbXG4gIDE0LCAxNywgMTEsIDI0LCAxLCA1LFxuICAzLCAyOCwgMTUsIDYsIDIxLCAxMCxcbiAgMjMsIDE5LCAxMiwgNCwgMjYsIDgsXG4gIDE2LCA3LCAyNywgMjAsIDEzLCAyLFxuICA0MSwgNTIsIDMxLCAzNywgNDcsIDU1LFxuICAzMCwgNDAsIDUxLCA0NSwgMzMsIDQ4LFxuICA0NCwgNDksIDM5LCA1NiwgMzQsIDUzLFxuICA0NiwgNDIsIDUwLCAzNiwgMjksIDMyLFxuXTtcblxuLy8gQ3VtdWxhdGl2ZSBiaXQgc2hpZnQgY29uc3RhbnRzXG5jb25zdCBCSVRfU0hJRlRTID0gWzEsIDIsIDQsIDYsIDgsIDEwLCAxMiwgMTQsIDE1LCAxNywgMTksIDIxLCAyMywgMjUsIDI3LCAyOF07XG5cbi8vIFNCT1hlcyBhbmQgcm91bmQgcGVybXV0YXRpb24gY29uc3RhbnRzXG5jb25zdCBTQk9YX1AgPSBbXG4gIHtcbiAgICAweDA6IDB4ODA4MjAwLFxuICAgIDB4MTAwMDAwMDA6IDB4ODAwMCxcbiAgICAweDIwMDAwMDAwOiAweDgwODAwMixcbiAgICAweDMwMDAwMDAwOiAweDIsXG4gICAgMHg0MDAwMDAwMDogMHgyMDAsXG4gICAgMHg1MDAwMDAwMDogMHg4MDgyMDIsXG4gICAgMHg2MDAwMDAwMDogMHg4MDAyMDIsXG4gICAgMHg3MDAwMDAwMDogMHg4MDAwMDAsXG4gICAgMHg4MDAwMDAwMDogMHgyMDIsXG4gICAgMHg5MDAwMDAwMDogMHg4MDAyMDAsXG4gICAgMHhhMDAwMDAwMDogMHg4MjAwLFxuICAgIDB4YjAwMDAwMDA6IDB4ODA4MDAwLFxuICAgIDB4YzAwMDAwMDA6IDB4ODAwMixcbiAgICAweGQwMDAwMDAwOiAweDgwMDAwMixcbiAgICAweGUwMDAwMDAwOiAweDAsXG4gICAgMHhmMDAwMDAwMDogMHg4MjAyLFxuICAgIDB4ODAwMDAwMDogMHgwLFxuICAgIDB4MTgwMDAwMDA6IDB4ODA4MjAyLFxuICAgIDB4MjgwMDAwMDA6IDB4ODIwMixcbiAgICAweDM4MDAwMDAwOiAweDgwMDAsXG4gICAgMHg0ODAwMDAwMDogMHg4MDgyMDAsXG4gICAgMHg1ODAwMDAwMDogMHgyMDAsXG4gICAgMHg2ODAwMDAwMDogMHg4MDgwMDIsXG4gICAgMHg3ODAwMDAwMDogMHgyLFxuICAgIDB4ODgwMDAwMDA6IDB4ODAwMjAwLFxuICAgIDB4OTgwMDAwMDA6IDB4ODIwMCxcbiAgICAweGE4MDAwMDAwOiAweDgwODAwMCxcbiAgICAweGI4MDAwMDAwOiAweDgwMDIwMixcbiAgICAweGM4MDAwMDAwOiAweDgwMDAwMixcbiAgICAweGQ4MDAwMDAwOiAweDgwMDIsXG4gICAgMHhlODAwMDAwMDogMHgyMDIsXG4gICAgMHhmODAwMDAwMDogMHg4MDAwMDAsXG4gICAgMHgxOiAweDgwMDAsXG4gICAgMHgxMDAwMDAwMTogMHgyLFxuICAgIDB4MjAwMDAwMDE6IDB4ODA4MjAwLFxuICAgIDB4MzAwMDAwMDE6IDB4ODAwMDAwLFxuICAgIDB4NDAwMDAwMDE6IDB4ODA4MDAyLFxuICAgIDB4NTAwMDAwMDE6IDB4ODIwMCxcbiAgICAweDYwMDAwMDAxOiAweDIwMCxcbiAgICAweDcwMDAwMDAxOiAweDgwMDIwMixcbiAgICAweDgwMDAwMDAxOiAweDgwODIwMixcbiAgICAweDkwMDAwMDAxOiAweDgwODAwMCxcbiAgICAweGEwMDAwMDAxOiAweDgwMDAwMixcbiAgICAweGIwMDAwMDAxOiAweDgyMDIsXG4gICAgMHhjMDAwMDAwMTogMHgyMDIsXG4gICAgMHhkMDAwMDAwMTogMHg4MDAyMDAsXG4gICAgMHhlMDAwMDAwMTogMHg4MDAyLFxuICAgIDB4ZjAwMDAwMDE6IDB4MCxcbiAgICAweDgwMDAwMDE6IDB4ODA4MjAyLFxuICAgIDB4MTgwMDAwMDE6IDB4ODA4MDAwLFxuICAgIDB4MjgwMDAwMDE6IDB4ODAwMDAwLFxuICAgIDB4MzgwMDAwMDE6IDB4MjAwLFxuICAgIDB4NDgwMDAwMDE6IDB4ODAwMCxcbiAgICAweDU4MDAwMDAxOiAweDgwMDAwMixcbiAgICAweDY4MDAwMDAxOiAweDIsXG4gICAgMHg3ODAwMDAwMTogMHg4MjAyLFxuICAgIDB4ODgwMDAwMDE6IDB4ODAwMixcbiAgICAweDk4MDAwMDAxOiAweDgwMDIwMixcbiAgICAweGE4MDAwMDAxOiAweDIwMixcbiAgICAweGI4MDAwMDAxOiAweDgwODIwMCxcbiAgICAweGM4MDAwMDAxOiAweDgwMDIwMCxcbiAgICAweGQ4MDAwMDAxOiAweDAsXG4gICAgMHhlODAwMDAwMTogMHg4MjAwLFxuICAgIDB4ZjgwMDAwMDE6IDB4ODA4MDAyLFxuICB9LFxuICB7XG4gICAgMHgwOiAweDQwMDg0MDEwLFxuICAgIDB4MTAwMDAwMDogMHg0MDAwLFxuICAgIDB4MjAwMDAwMDogMHg4MDAwMCxcbiAgICAweDMwMDAwMDA6IDB4NDAwODAwMTAsXG4gICAgMHg0MDAwMDAwOiAweDQwMDAwMDEwLFxuICAgIDB4NTAwMDAwMDogMHg0MDA4NDAwMCxcbiAgICAweDYwMDAwMDA6IDB4NDAwMDQwMDAsXG4gICAgMHg3MDAwMDAwOiAweDEwLFxuICAgIDB4ODAwMDAwMDogMHg4NDAwMCxcbiAgICAweDkwMDAwMDA6IDB4NDAwMDQwMTAsXG4gICAgMHhhMDAwMDAwOiAweDQwMDAwMDAwLFxuICAgIDB4YjAwMDAwMDogMHg4NDAxMCxcbiAgICAweGMwMDAwMDA6IDB4ODAwMTAsXG4gICAgMHhkMDAwMDAwOiAweDAsXG4gICAgMHhlMDAwMDAwOiAweDQwMTAsXG4gICAgMHhmMDAwMDAwOiAweDQwMDgwMDAwLFxuICAgIDB4ODAwMDAwOiAweDQwMDA0MDAwLFxuICAgIDB4MTgwMDAwMDogMHg4NDAxMCxcbiAgICAweDI4MDAwMDA6IDB4MTAsXG4gICAgMHgzODAwMDAwOiAweDQwMDA0MDEwLFxuICAgIDB4NDgwMDAwMDogMHg0MDA4NDAxMCxcbiAgICAweDU4MDAwMDA6IDB4NDAwMDAwMDAsXG4gICAgMHg2ODAwMDAwOiAweDgwMDAwLFxuICAgIDB4NzgwMDAwMDogMHg0MDA4MDAxMCxcbiAgICAweDg4MDAwMDA6IDB4ODAwMTAsXG4gICAgMHg5ODAwMDAwOiAweDAsXG4gICAgMHhhODAwMDAwOiAweDQwMDAsXG4gICAgMHhiODAwMDAwOiAweDQwMDgwMDAwLFxuICAgIDB4YzgwMDAwMDogMHg0MDAwMDAxMCxcbiAgICAweGQ4MDAwMDA6IDB4ODQwMDAsXG4gICAgMHhlODAwMDAwOiAweDQwMDg0MDAwLFxuICAgIDB4ZjgwMDAwMDogMHg0MDEwLFxuICAgIDB4MTAwMDAwMDA6IDB4MCxcbiAgICAweDExMDAwMDAwOiAweDQwMDgwMDEwLFxuICAgIDB4MTIwMDAwMDA6IDB4NDAwMDQwMTAsXG4gICAgMHgxMzAwMDAwMDogMHg0MDA4NDAwMCxcbiAgICAweDE0MDAwMDAwOiAweDQwMDgwMDAwLFxuICAgIDB4MTUwMDAwMDA6IDB4MTAsXG4gICAgMHgxNjAwMDAwMDogMHg4NDAxMCxcbiAgICAweDE3MDAwMDAwOiAweDQwMDAsXG4gICAgMHgxODAwMDAwMDogMHg0MDEwLFxuICAgIDB4MTkwMDAwMDA6IDB4ODAwMDAsXG4gICAgMHgxYTAwMDAwMDogMHg4MDAxMCxcbiAgICAweDFiMDAwMDAwOiAweDQwMDAwMDEwLFxuICAgIDB4MWMwMDAwMDA6IDB4ODQwMDAsXG4gICAgMHgxZDAwMDAwMDogMHg0MDAwNDAwMCxcbiAgICAweDFlMDAwMDAwOiAweDQwMDAwMDAwLFxuICAgIDB4MWYwMDAwMDA6IDB4NDAwODQwMTAsXG4gICAgMHgxMDgwMDAwMDogMHg4NDAxMCxcbiAgICAweDExODAwMDAwOiAweDgwMDAwLFxuICAgIDB4MTI4MDAwMDA6IDB4NDAwODAwMDAsXG4gICAgMHgxMzgwMDAwMDogMHg0MDAwLFxuICAgIDB4MTQ4MDAwMDA6IDB4NDAwMDQwMDAsXG4gICAgMHgxNTgwMDAwMDogMHg0MDA4NDAxMCxcbiAgICAweDE2ODAwMDAwOiAweDEwLFxuICAgIDB4MTc4MDAwMDA6IDB4NDAwMDAwMDAsXG4gICAgMHgxODgwMDAwMDogMHg0MDA4NDAwMCxcbiAgICAweDE5ODAwMDAwOiAweDQwMDAwMDEwLFxuICAgIDB4MWE4MDAwMDA6IDB4NDAwMDQwMTAsXG4gICAgMHgxYjgwMDAwMDogMHg4MDAxMCxcbiAgICAweDFjODAwMDAwOiAweDAsXG4gICAgMHgxZDgwMDAwMDogMHg0MDEwLFxuICAgIDB4MWU4MDAwMDA6IDB4NDAwODAwMTAsXG4gICAgMHgxZjgwMDAwMDogMHg4NDAwMCxcbiAgfSxcbiAge1xuICAgIDB4MDogMHgxMDQsXG4gICAgMHgxMDAwMDA6IDB4MCxcbiAgICAweDIwMDAwMDogMHg0MDAwMTAwLFxuICAgIDB4MzAwMDAwOiAweDEwMTA0LFxuICAgIDB4NDAwMDAwOiAweDEwMDA0LFxuICAgIDB4NTAwMDAwOiAweDQwMDAwMDQsXG4gICAgMHg2MDAwMDA6IDB4NDAxMDEwNCxcbiAgICAweDcwMDAwMDogMHg0MDEwMDAwLFxuICAgIDB4ODAwMDAwOiAweDQwMDAwMDAsXG4gICAgMHg5MDAwMDA6IDB4NDAxMDEwMCxcbiAgICAweGEwMDAwMDogMHgxMDEwMCxcbiAgICAweGIwMDAwMDogMHg0MDEwMDA0LFxuICAgIDB4YzAwMDAwOiAweDQwMDAxMDQsXG4gICAgMHhkMDAwMDA6IDB4MTAwMDAsXG4gICAgMHhlMDAwMDA6IDB4NCxcbiAgICAweGYwMDAwMDogMHgxMDAsXG4gICAgMHg4MDAwMDogMHg0MDEwMTAwLFxuICAgIDB4MTgwMDAwOiAweDQwMTAwMDQsXG4gICAgMHgyODAwMDA6IDB4MCxcbiAgICAweDM4MDAwMDogMHg0MDAwMTAwLFxuICAgIDB4NDgwMDAwOiAweDQwMDAwMDQsXG4gICAgMHg1ODAwMDA6IDB4MTAwMDAsXG4gICAgMHg2ODAwMDA6IDB4MTAwMDQsXG4gICAgMHg3ODAwMDA6IDB4MTA0LFxuICAgIDB4ODgwMDAwOiAweDQsXG4gICAgMHg5ODAwMDA6IDB4MTAwLFxuICAgIDB4YTgwMDAwOiAweDQwMTAwMDAsXG4gICAgMHhiODAwMDA6IDB4MTAxMDQsXG4gICAgMHhjODAwMDA6IDB4MTAxMDAsXG4gICAgMHhkODAwMDA6IDB4NDAwMDEwNCxcbiAgICAweGU4MDAwMDogMHg0MDEwMTA0LFxuICAgIDB4ZjgwMDAwOiAweDQwMDAwMDAsXG4gICAgMHgxMDAwMDAwOiAweDQwMTAxMDAsXG4gICAgMHgxMTAwMDAwOiAweDEwMDA0LFxuICAgIDB4MTIwMDAwMDogMHgxMDAwMCxcbiAgICAweDEzMDAwMDA6IDB4NDAwMDEwMCxcbiAgICAweDE0MDAwMDA6IDB4MTAwLFxuICAgIDB4MTUwMDAwMDogMHg0MDEwMTA0LFxuICAgIDB4MTYwMDAwMDogMHg0MDAwMDA0LFxuICAgIDB4MTcwMDAwMDogMHgwLFxuICAgIDB4MTgwMDAwMDogMHg0MDAwMTA0LFxuICAgIDB4MTkwMDAwMDogMHg0MDAwMDAwLFxuICAgIDB4MWEwMDAwMDogMHg0LFxuICAgIDB4MWIwMDAwMDogMHgxMDEwMCxcbiAgICAweDFjMDAwMDA6IDB4NDAxMDAwMCxcbiAgICAweDFkMDAwMDA6IDB4MTA0LFxuICAgIDB4MWUwMDAwMDogMHgxMDEwNCxcbiAgICAweDFmMDAwMDA6IDB4NDAxMDAwNCxcbiAgICAweDEwODAwMDA6IDB4NDAwMDAwMCxcbiAgICAweDExODAwMDA6IDB4MTA0LFxuICAgIDB4MTI4MDAwMDogMHg0MDEwMTAwLFxuICAgIDB4MTM4MDAwMDogMHgwLFxuICAgIDB4MTQ4MDAwMDogMHgxMDAwNCxcbiAgICAweDE1ODAwMDA6IDB4NDAwMDEwMCxcbiAgICAweDE2ODAwMDA6IDB4MTAwLFxuICAgIDB4MTc4MDAwMDogMHg0MDEwMDA0LFxuICAgIDB4MTg4MDAwMDogMHgxMDAwMCxcbiAgICAweDE5ODAwMDA6IDB4NDAxMDEwNCxcbiAgICAweDFhODAwMDA6IDB4MTAxMDQsXG4gICAgMHgxYjgwMDAwOiAweDQwMDAwMDQsXG4gICAgMHgxYzgwMDAwOiAweDQwMDAxMDQsXG4gICAgMHgxZDgwMDAwOiAweDQwMTAwMDAsXG4gICAgMHgxZTgwMDAwOiAweDQsXG4gICAgMHgxZjgwMDAwOiAweDEwMTAwLFxuICB9LFxuICB7XG4gICAgMHgwOiAweDgwNDAxMDAwLFxuICAgIDB4MTAwMDA6IDB4ODAwMDEwNDAsXG4gICAgMHgyMDAwMDogMHg0MDEwNDAsXG4gICAgMHgzMDAwMDogMHg4MDQwMDAwMCxcbiAgICAweDQwMDAwOiAweDAsXG4gICAgMHg1MDAwMDogMHg0MDEwMDAsXG4gICAgMHg2MDAwMDogMHg4MDAwMDA0MCxcbiAgICAweDcwMDAwOiAweDQwMDA0MCxcbiAgICAweDgwMDAwOiAweDgwMDAwMDAwLFxuICAgIDB4OTAwMDA6IDB4NDAwMDAwLFxuICAgIDB4YTAwMDA6IDB4NDAsXG4gICAgMHhiMDAwMDogMHg4MDAwMTAwMCxcbiAgICAweGMwMDAwOiAweDgwNDAwMDQwLFxuICAgIDB4ZDAwMDA6IDB4MTA0MCxcbiAgICAweGUwMDAwOiAweDEwMDAsXG4gICAgMHhmMDAwMDogMHg4MDQwMTA0MCxcbiAgICAweDgwMDA6IDB4ODAwMDEwNDAsXG4gICAgMHgxODAwMDogMHg0MCxcbiAgICAweDI4MDAwOiAweDgwNDAwMDQwLFxuICAgIDB4MzgwMDA6IDB4ODAwMDEwMDAsXG4gICAgMHg0ODAwMDogMHg0MDEwMDAsXG4gICAgMHg1ODAwMDogMHg4MDQwMTA0MCxcbiAgICAweDY4MDAwOiAweDAsXG4gICAgMHg3ODAwMDogMHg4MDQwMDAwMCxcbiAgICAweDg4MDAwOiAweDEwMDAsXG4gICAgMHg5ODAwMDogMHg4MDQwMTAwMCxcbiAgICAweGE4MDAwOiAweDQwMDAwMCxcbiAgICAweGI4MDAwOiAweDEwNDAsXG4gICAgMHhjODAwMDogMHg4MDAwMDAwMCxcbiAgICAweGQ4MDAwOiAweDQwMDA0MCxcbiAgICAweGU4MDAwOiAweDQwMTA0MCxcbiAgICAweGY4MDAwOiAweDgwMDAwMDQwLFxuICAgIDB4MTAwMDAwOiAweDQwMDA0MCxcbiAgICAweDExMDAwMDogMHg0MDEwMDAsXG4gICAgMHgxMjAwMDA6IDB4ODAwMDAwNDAsXG4gICAgMHgxMzAwMDA6IDB4MCxcbiAgICAweDE0MDAwMDogMHgxMDQwLFxuICAgIDB4MTUwMDAwOiAweDgwNDAwMDQwLFxuICAgIDB4MTYwMDAwOiAweDgwNDAxMDAwLFxuICAgIDB4MTcwMDAwOiAweDgwMDAxMDQwLFxuICAgIDB4MTgwMDAwOiAweDgwNDAxMDQwLFxuICAgIDB4MTkwMDAwOiAweDgwMDAwMDAwLFxuICAgIDB4MWEwMDAwOiAweDgwNDAwMDAwLFxuICAgIDB4MWIwMDAwOiAweDQwMTA0MCxcbiAgICAweDFjMDAwMDogMHg4MDAwMTAwMCxcbiAgICAweDFkMDAwMDogMHg0MDAwMDAsXG4gICAgMHgxZTAwMDA6IDB4NDAsXG4gICAgMHgxZjAwMDA6IDB4MTAwMCxcbiAgICAweDEwODAwMDogMHg4MDQwMDAwMCxcbiAgICAweDExODAwMDogMHg4MDQwMTA0MCxcbiAgICAweDEyODAwMDogMHgwLFxuICAgIDB4MTM4MDAwOiAweDQwMTAwMCxcbiAgICAweDE0ODAwMDogMHg0MDAwNDAsXG4gICAgMHgxNTgwMDA6IDB4ODAwMDAwMDAsXG4gICAgMHgxNjgwMDA6IDB4ODAwMDEwNDAsXG4gICAgMHgxNzgwMDA6IDB4NDAsXG4gICAgMHgxODgwMDA6IDB4ODAwMDAwNDAsXG4gICAgMHgxOTgwMDA6IDB4MTAwMCxcbiAgICAweDFhODAwMDogMHg4MDAwMTAwMCxcbiAgICAweDFiODAwMDogMHg4MDQwMDA0MCxcbiAgICAweDFjODAwMDogMHgxMDQwLFxuICAgIDB4MWQ4MDAwOiAweDgwNDAxMDAwLFxuICAgIDB4MWU4MDAwOiAweDQwMDAwMCxcbiAgICAweDFmODAwMDogMHg0MDEwNDAsXG4gIH0sXG4gIHtcbiAgICAweDA6IDB4ODAsXG4gICAgMHgxMDAwOiAweDEwNDAwMDAsXG4gICAgMHgyMDAwOiAweDQwMDAwLFxuICAgIDB4MzAwMDogMHgyMDAwMDAwMCxcbiAgICAweDQwMDA6IDB4MjAwNDAwODAsXG4gICAgMHg1MDAwOiAweDEwMDAwODAsXG4gICAgMHg2MDAwOiAweDIxMDAwMDgwLFxuICAgIDB4NzAwMDogMHg0MDA4MCxcbiAgICAweDgwMDA6IDB4MTAwMDAwMCxcbiAgICAweDkwMDA6IDB4MjAwNDAwMDAsXG4gICAgMHhhMDAwOiAweDIwMDAwMDgwLFxuICAgIDB4YjAwMDogMHgyMTA0MDA4MCxcbiAgICAweGMwMDA6IDB4MjEwNDAwMDAsXG4gICAgMHhkMDAwOiAweDAsXG4gICAgMHhlMDAwOiAweDEwNDAwODAsXG4gICAgMHhmMDAwOiAweDIxMDAwMDAwLFxuICAgIDB4ODAwOiAweDEwNDAwODAsXG4gICAgMHgxODAwOiAweDIxMDAwMDgwLFxuICAgIDB4MjgwMDogMHg4MCxcbiAgICAweDM4MDA6IDB4MTA0MDAwMCxcbiAgICAweDQ4MDA6IDB4NDAwMDAsXG4gICAgMHg1ODAwOiAweDIwMDQwMDgwLFxuICAgIDB4NjgwMDogMHgyMTA0MDAwMCxcbiAgICAweDc4MDA6IDB4MjAwMDAwMDAsXG4gICAgMHg4ODAwOiAweDIwMDQwMDAwLFxuICAgIDB4OTgwMDogMHgwLFxuICAgIDB4YTgwMDogMHgyMTA0MDA4MCxcbiAgICAweGI4MDA6IDB4MTAwMDA4MCxcbiAgICAweGM4MDA6IDB4MjAwMDAwODAsXG4gICAgMHhkODAwOiAweDIxMDAwMDAwLFxuICAgIDB4ZTgwMDogMHgxMDAwMDAwLFxuICAgIDB4ZjgwMDogMHg0MDA4MCxcbiAgICAweDEwMDAwOiAweDQwMDAwLFxuICAgIDB4MTEwMDA6IDB4ODAsXG4gICAgMHgxMjAwMDogMHgyMDAwMDAwMCxcbiAgICAweDEzMDAwOiAweDIxMDAwMDgwLFxuICAgIDB4MTQwMDA6IDB4MTAwMDA4MCxcbiAgICAweDE1MDAwOiAweDIxMDQwMDAwLFxuICAgIDB4MTYwMDA6IDB4MjAwNDAwODAsXG4gICAgMHgxNzAwMDogMHgxMDAwMDAwLFxuICAgIDB4MTgwMDA6IDB4MjEwNDAwODAsXG4gICAgMHgxOTAwMDogMHgyMTAwMDAwMCxcbiAgICAweDFhMDAwOiAweDEwNDAwMDAsXG4gICAgMHgxYjAwMDogMHgyMDA0MDAwMCxcbiAgICAweDFjMDAwOiAweDQwMDgwLFxuICAgIDB4MWQwMDA6IDB4MjAwMDAwODAsXG4gICAgMHgxZTAwMDogMHgwLFxuICAgIDB4MWYwMDA6IDB4MTA0MDA4MCxcbiAgICAweDEwODAwOiAweDIxMDAwMDgwLFxuICAgIDB4MTE4MDA6IDB4MTAwMDAwMCxcbiAgICAweDEyODAwOiAweDEwNDAwMDAsXG4gICAgMHgxMzgwMDogMHgyMDA0MDA4MCxcbiAgICAweDE0ODAwOiAweDIwMDAwMDAwLFxuICAgIDB4MTU4MDA6IDB4MTA0MDA4MCxcbiAgICAweDE2ODAwOiAweDgwLFxuICAgIDB4MTc4MDA6IDB4MjEwNDAwMDAsXG4gICAgMHgxODgwMDogMHg0MDA4MCxcbiAgICAweDE5ODAwOiAweDIxMDQwMDgwLFxuICAgIDB4MWE4MDA6IDB4MCxcbiAgICAweDFiODAwOiAweDIxMDAwMDAwLFxuICAgIDB4MWM4MDA6IDB4MTAwMDA4MCxcbiAgICAweDFkODAwOiAweDQwMDAwLFxuICAgIDB4MWU4MDA6IDB4MjAwNDAwMDAsXG4gICAgMHgxZjgwMDogMHgyMDAwMDA4MCxcbiAgfSxcbiAge1xuICAgIDB4MDogMHgxMDAwMDAwOCxcbiAgICAweDEwMDogMHgyMDAwLFxuICAgIDB4MjAwOiAweDEwMjAwMDAwLFxuICAgIDB4MzAwOiAweDEwMjAyMDA4LFxuICAgIDB4NDAwOiAweDEwMDAyMDAwLFxuICAgIDB4NTAwOiAweDIwMDAwMCxcbiAgICAweDYwMDogMHgyMDAwMDgsXG4gICAgMHg3MDA6IDB4MTAwMDAwMDAsXG4gICAgMHg4MDA6IDB4MCxcbiAgICAweDkwMDogMHgxMDAwMjAwOCxcbiAgICAweGEwMDogMHgyMDIwMDAsXG4gICAgMHhiMDA6IDB4OCxcbiAgICAweGMwMDogMHgxMDIwMDAwOCxcbiAgICAweGQwMDogMHgyMDIwMDgsXG4gICAgMHhlMDA6IDB4MjAwOCxcbiAgICAweGYwMDogMHgxMDIwMjAwMCxcbiAgICAweDgwOiAweDEwMjAwMDAwLFxuICAgIDB4MTgwOiAweDEwMjAyMDA4LFxuICAgIDB4MjgwOiAweDgsXG4gICAgMHgzODA6IDB4MjAwMDAwLFxuICAgIDB4NDgwOiAweDIwMjAwOCxcbiAgICAweDU4MDogMHgxMDAwMDAwOCxcbiAgICAweDY4MDogMHgxMDAwMjAwMCxcbiAgICAweDc4MDogMHgyMDA4LFxuICAgIDB4ODgwOiAweDIwMDAwOCxcbiAgICAweDk4MDogMHgyMDAwLFxuICAgIDB4YTgwOiAweDEwMDAyMDA4LFxuICAgIDB4YjgwOiAweDEwMjAwMDA4LFxuICAgIDB4YzgwOiAweDAsXG4gICAgMHhkODA6IDB4MTAyMDIwMDAsXG4gICAgMHhlODA6IDB4MjAyMDAwLFxuICAgIDB4ZjgwOiAweDEwMDAwMDAwLFxuICAgIDB4MTAwMDogMHgxMDAwMjAwMCxcbiAgICAweDExMDA6IDB4MTAyMDAwMDgsXG4gICAgMHgxMjAwOiAweDEwMjAyMDA4LFxuICAgIDB4MTMwMDogMHgyMDA4LFxuICAgIDB4MTQwMDogMHgyMDAwMDAsXG4gICAgMHgxNTAwOiAweDEwMDAwMDAwLFxuICAgIDB4MTYwMDogMHgxMDAwMDAwOCxcbiAgICAweDE3MDA6IDB4MjAyMDAwLFxuICAgIDB4MTgwMDogMHgyMDIwMDgsXG4gICAgMHgxOTAwOiAweDAsXG4gICAgMHgxYTAwOiAweDgsXG4gICAgMHgxYjAwOiAweDEwMjAwMDAwLFxuICAgIDB4MWMwMDogMHgyMDAwLFxuICAgIDB4MWQwMDogMHgxMDAwMjAwOCxcbiAgICAweDFlMDA6IDB4MTAyMDIwMDAsXG4gICAgMHgxZjAwOiAweDIwMDAwOCxcbiAgICAweDEwODA6IDB4OCxcbiAgICAweDExODA6IDB4MjAyMDAwLFxuICAgIDB4MTI4MDogMHgyMDAwMDAsXG4gICAgMHgxMzgwOiAweDEwMDAwMDA4LFxuICAgIDB4MTQ4MDogMHgxMDAwMjAwMCxcbiAgICAweDE1ODA6IDB4MjAwOCxcbiAgICAweDE2ODA6IDB4MTAyMDIwMDgsXG4gICAgMHgxNzgwOiAweDEwMjAwMDAwLFxuICAgIDB4MTg4MDogMHgxMDIwMjAwMCxcbiAgICAweDE5ODA6IDB4MTAyMDAwMDgsXG4gICAgMHgxYTgwOiAweDIwMDAsXG4gICAgMHgxYjgwOiAweDIwMjAwOCxcbiAgICAweDFjODA6IDB4MjAwMDA4LFxuICAgIDB4MWQ4MDogMHgwLFxuICAgIDB4MWU4MDogMHgxMDAwMDAwMCxcbiAgICAweDFmODA6IDB4MTAwMDIwMDgsXG4gIH0sXG4gIHtcbiAgICAweDA6IDB4MTAwMDAwLFxuICAgIDB4MTA6IDB4MjAwMDQwMSxcbiAgICAweDIwOiAweDQwMCxcbiAgICAweDMwOiAweDEwMDQwMSxcbiAgICAweDQwOiAweDIxMDA0MDEsXG4gICAgMHg1MDogMHgwLFxuICAgIDB4NjA6IDB4MSxcbiAgICAweDcwOiAweDIxMDAwMDEsXG4gICAgMHg4MDogMHgyMDAwNDAwLFxuICAgIDB4OTA6IDB4MTAwMDAxLFxuICAgIDB4YTA6IDB4MjAwMDAwMSxcbiAgICAweGIwOiAweDIxMDA0MDAsXG4gICAgMHhjMDogMHgyMTAwMDAwLFxuICAgIDB4ZDA6IDB4NDAxLFxuICAgIDB4ZTA6IDB4MTAwNDAwLFxuICAgIDB4ZjA6IDB4MjAwMDAwMCxcbiAgICAweDg6IDB4MjEwMDAwMSxcbiAgICAweDE4OiAweDAsXG4gICAgMHgyODogMHgyMDAwNDAxLFxuICAgIDB4Mzg6IDB4MjEwMDQwMCxcbiAgICAweDQ4OiAweDEwMDAwMCxcbiAgICAweDU4OiAweDIwMDAwMDEsXG4gICAgMHg2ODogMHgyMDAwMDAwLFxuICAgIDB4Nzg6IDB4NDAxLFxuICAgIDB4ODg6IDB4MTAwNDAxLFxuICAgIDB4OTg6IDB4MjAwMDQwMCxcbiAgICAweGE4OiAweDIxMDAwMDAsXG4gICAgMHhiODogMHgxMDAwMDEsXG4gICAgMHhjODogMHg0MDAsXG4gICAgMHhkODogMHgyMTAwNDAxLFxuICAgIDB4ZTg6IDB4MSxcbiAgICAweGY4OiAweDEwMDQwMCxcbiAgICAweDEwMDogMHgyMDAwMDAwLFxuICAgIDB4MTEwOiAweDEwMDAwMCxcbiAgICAweDEyMDogMHgyMDAwNDAxLFxuICAgIDB4MTMwOiAweDIxMDAwMDEsXG4gICAgMHgxNDA6IDB4MTAwMDAxLFxuICAgIDB4MTUwOiAweDIwMDA0MDAsXG4gICAgMHgxNjA6IDB4MjEwMDQwMCxcbiAgICAweDE3MDogMHgxMDA0MDEsXG4gICAgMHgxODA6IDB4NDAxLFxuICAgIDB4MTkwOiAweDIxMDA0MDEsXG4gICAgMHgxYTA6IDB4MTAwNDAwLFxuICAgIDB4MWIwOiAweDEsXG4gICAgMHgxYzA6IDB4MCxcbiAgICAweDFkMDogMHgyMTAwMDAwLFxuICAgIDB4MWUwOiAweDIwMDAwMDEsXG4gICAgMHgxZjA6IDB4NDAwLFxuICAgIDB4MTA4OiAweDEwMDQwMCxcbiAgICAweDExODogMHgyMDAwNDAxLFxuICAgIDB4MTI4OiAweDIxMDAwMDEsXG4gICAgMHgxMzg6IDB4MSxcbiAgICAweDE0ODogMHgyMDAwMDAwLFxuICAgIDB4MTU4OiAweDEwMDAwMCxcbiAgICAweDE2ODogMHg0MDEsXG4gICAgMHgxNzg6IDB4MjEwMDQwMCxcbiAgICAweDE4ODogMHgyMDAwMDAxLFxuICAgIDB4MTk4OiAweDIxMDAwMDAsXG4gICAgMHgxYTg6IDB4MCxcbiAgICAweDFiODogMHgyMTAwNDAxLFxuICAgIDB4MWM4OiAweDEwMDQwMSxcbiAgICAweDFkODogMHg0MDAsXG4gICAgMHgxZTg6IDB4MjAwMDQwMCxcbiAgICAweDFmODogMHgxMDAwMDEsXG4gIH0sXG4gIHtcbiAgICAweDA6IDB4ODAwMDgyMCxcbiAgICAweDE6IDB4MjAwMDAsXG4gICAgMHgyOiAweDgwMDAwMDAsXG4gICAgMHgzOiAweDIwLFxuICAgIDB4NDogMHgyMDAyMCxcbiAgICAweDU6IDB4ODAyMDgyMCxcbiAgICAweDY6IDB4ODAyMDgwMCxcbiAgICAweDc6IDB4ODAwLFxuICAgIDB4ODogMHg4MDIwMDAwLFxuICAgIDB4OTogMHg4MDAwODAwLFxuICAgIDB4YTogMHgyMDgwMCxcbiAgICAweGI6IDB4ODAyMDAyMCxcbiAgICAweGM6IDB4ODIwLFxuICAgIDB4ZDogMHgwLFxuICAgIDB4ZTogMHg4MDAwMDIwLFxuICAgIDB4ZjogMHgyMDgyMCxcbiAgICAweDgwMDAwMDAwOiAweDgwMCxcbiAgICAweDgwMDAwMDAxOiAweDgwMjA4MjAsXG4gICAgMHg4MDAwMDAwMjogMHg4MDAwODIwLFxuICAgIDB4ODAwMDAwMDM6IDB4ODAwMDAwMCxcbiAgICAweDgwMDAwMDA0OiAweDgwMjAwMDAsXG4gICAgMHg4MDAwMDAwNTogMHgyMDgwMCxcbiAgICAweDgwMDAwMDA2OiAweDIwODIwLFxuICAgIDB4ODAwMDAwMDc6IDB4MjAsXG4gICAgMHg4MDAwMDAwODogMHg4MDAwMDIwLFxuICAgIDB4ODAwMDAwMDk6IDB4ODIwLFxuICAgIDB4ODAwMDAwMGE6IDB4MjAwMjAsXG4gICAgMHg4MDAwMDAwYjogMHg4MDIwODAwLFxuICAgIDB4ODAwMDAwMGM6IDB4MCxcbiAgICAweDgwMDAwMDBkOiAweDgwMjAwMjAsXG4gICAgMHg4MDAwMDAwZTogMHg4MDAwODAwLFxuICAgIDB4ODAwMDAwMGY6IDB4MjAwMDAsXG4gICAgMHgxMDogMHgyMDgyMCxcbiAgICAweDExOiAweDgwMjA4MDAsXG4gICAgMHgxMjogMHgyMCxcbiAgICAweDEzOiAweDgwMCxcbiAgICAweDE0OiAweDgwMDA4MDAsXG4gICAgMHgxNTogMHg4MDAwMDIwLFxuICAgIDB4MTY6IDB4ODAyMDAyMCxcbiAgICAweDE3OiAweDIwMDAwLFxuICAgIDB4MTg6IDB4MCxcbiAgICAweDE5OiAweDIwMDIwLFxuICAgIDB4MWE6IDB4ODAyMDAwMCxcbiAgICAweDFiOiAweDgwMDA4MjAsXG4gICAgMHgxYzogMHg4MDIwODIwLFxuICAgIDB4MWQ6IDB4MjA4MDAsXG4gICAgMHgxZTogMHg4MjAsXG4gICAgMHgxZjogMHg4MDAwMDAwLFxuICAgIDB4ODAwMDAwMTA6IDB4MjAwMDAsXG4gICAgMHg4MDAwMDAxMTogMHg4MDAsXG4gICAgMHg4MDAwMDAxMjogMHg4MDIwMDIwLFxuICAgIDB4ODAwMDAwMTM6IDB4MjA4MjAsXG4gICAgMHg4MDAwMDAxNDogMHgyMCxcbiAgICAweDgwMDAwMDE1OiAweDgwMjAwMDAsXG4gICAgMHg4MDAwMDAxNjogMHg4MDAwMDAwLFxuICAgIDB4ODAwMDAwMTc6IDB4ODAwMDgyMCxcbiAgICAweDgwMDAwMDE4OiAweDgwMjA4MjAsXG4gICAgMHg4MDAwMDAxOTogMHg4MDAwMDIwLFxuICAgIDB4ODAwMDAwMWE6IDB4ODAwMDgwMCxcbiAgICAweDgwMDAwMDFiOiAweDAsXG4gICAgMHg4MDAwMDAxYzogMHgyMDgwMCxcbiAgICAweDgwMDAwMDFkOiAweDgyMCxcbiAgICAweDgwMDAwMDFlOiAweDIwMDIwLFxuICAgIDB4ODAwMDAwMWY6IDB4ODAyMDgwMCxcbiAgfSxcbl07XG5cbi8vIE1hc2tzIHRoYXQgc2VsZWN0IHRoZSBTQk9YIGlucHV0XG5jb25zdCBTQk9YX01BU0sgPSBbXG4gIDB4ZjgwMDAwMDEsIDB4MWY4MDAwMDAsIDB4MDFmODAwMDAsIDB4MDAxZjgwMDAsXG4gIDB4MDAwMWY4MDAsIDB4MDAwMDFmODAsIDB4MDAwMDAxZjgsIDB4ODAwMDAwMWYsXG5dO1xuXG4vLyBTd2FwIGJpdHMgYWNyb3NzIHRoZSBsZWZ0IGFuZCByaWdodCB3b3Jkc1xuZnVuY3Rpb24gZXhjaGFuZ2VMUihvZmZzZXQsIG1hc2spIHtcbiAgY29uc3QgdCA9ICgodGhpcy5fbEJsb2NrID4+PiBvZmZzZXQpIF4gdGhpcy5fckJsb2NrKSAmIG1hc2s7XG4gIHRoaXMuX3JCbG9jayBePSB0O1xuICB0aGlzLl9sQmxvY2sgXj0gdCA8PCBvZmZzZXQ7XG59XG5cbmZ1bmN0aW9uIGV4Y2hhbmdlUkwob2Zmc2V0LCBtYXNrKSB7XG4gIGNvbnN0IHQgPSAoKHRoaXMuX3JCbG9jayA+Pj4gb2Zmc2V0KSBeIHRoaXMuX2xCbG9jaykgJiBtYXNrO1xuICB0aGlzLl9sQmxvY2sgXj0gdDtcbiAgdGhpcy5fckJsb2NrIF49IHQgPDwgb2Zmc2V0O1xufVxuXG4vKipcbiAqIERFUyBibG9jayBjaXBoZXIgYWxnb3JpdGhtLlxuICovXG5leHBvcnQgY2xhc3MgREVTQWxnbyBleHRlbmRzIEJsb2NrQ2lwaGVyIHtcbiAgX2RvUmVzZXQoKSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3Qga2V5ID0gdGhpcy5fa2V5O1xuICAgIGNvbnN0IGtleVdvcmRzID0ga2V5LndvcmRzO1xuXG4gICAgLy8gU2VsZWN0IDU2IGJpdHMgYWNjb3JkaW5nIHRvIFBDMVxuICAgIGNvbnN0IGtleUJpdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU2OyBpICs9IDEpIHtcbiAgICAgIGNvbnN0IGtleUJpdFBvcyA9IFBDMVtpXSAtIDE7XG4gICAgICBrZXlCaXRzW2ldID0gKGtleVdvcmRzW2tleUJpdFBvcyA+Pj4gNV0gPj4+ICgzMSAtIChrZXlCaXRQb3MgJSAzMikpKSAmIDE7XG4gICAgfVxuXG4gICAgLy8gQXNzZW1ibGUgMTYgc3Via2V5c1xuICAgIHRoaXMuX3N1YktleXMgPSBbXTtcbiAgICBjb25zdCBzdWJLZXlzID0gdGhpcy5fc3ViS2V5cztcbiAgICBmb3IgKGxldCBuU3ViS2V5ID0gMDsgblN1YktleSA8IDE2OyBuU3ViS2V5ICs9IDEpIHtcbiAgICAgIC8vIENyZWF0ZSBzdWJrZXlcbiAgICAgIHN1YktleXNbblN1YktleV0gPSBbXTtcbiAgICAgIGNvbnN0IHN1YktleSA9IHN1YktleXNbblN1YktleV07XG5cbiAgICAgIC8vIFNob3J0Y3V0XG4gICAgICBjb25zdCBiaXRTaGlmdCA9IEJJVF9TSElGVFNbblN1YktleV07XG5cbiAgICAgIC8vIFNlbGVjdCA0OCBiaXRzIGFjY29yZGluZyB0byBQQzJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMjQ7IGkgKz0gMSkge1xuICAgICAgICAvLyBTZWxlY3QgZnJvbSB0aGUgbGVmdCAyOCBrZXkgYml0c1xuICAgICAgICBzdWJLZXlbKGkgLyA2KSB8IDBdIHw9IGtleUJpdHNbKChQQzJbaV0gLSAxKSArIGJpdFNoaWZ0KSAlIDI4XSA8PCAoMzEgLSAoaSAlIDYpKTtcblxuICAgICAgICAvLyBTZWxlY3QgZnJvbSB0aGUgcmlnaHQgMjgga2V5IGJpdHNcbiAgICAgICAgc3ViS2V5WzQgKyAoKGkgLyA2KSB8IDApXVxuICAgICAgICAgIHw9IGtleUJpdHNbMjggKyAoKChQQzJbaSArIDI0XSAtIDEpICsgYml0U2hpZnQpICUgMjgpXVxuICAgICAgICAgIDw8ICgzMSAtIChpICUgNikpO1xuICAgICAgfVxuXG4gICAgICAvLyBTaW5jZSBlYWNoIHN1YmtleSBpcyBhcHBsaWVkIHRvIGFuIGV4cGFuZGVkIDMyLWJpdCBpbnB1dCxcbiAgICAgIC8vIHRoZSBzdWJrZXkgY2FuIGJlIGJyb2tlbiBpbnRvIDggdmFsdWVzIHNjYWxlZCB0byAzMi1iaXRzLFxuICAgICAgLy8gd2hpY2ggYWxsb3dzIHRoZSBrZXkgdG8gYmUgdXNlZCB3aXRob3V0IGV4cGFuc2lvblxuICAgICAgc3ViS2V5WzBdID0gKHN1YktleVswXSA8PCAxKSB8IChzdWJLZXlbMF0gPj4+IDMxKTtcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgNzsgaSArPSAxKSB7XG4gICAgICAgIHN1YktleVtpXSA+Pj49ICgoaSAtIDEpICogNCArIDMpO1xuICAgICAgfVxuICAgICAgc3ViS2V5WzddID0gKHN1YktleVs3XSA8PCA1KSB8IChzdWJLZXlbN10gPj4+IDI3KTtcbiAgICB9XG5cbiAgICAvLyBDb21wdXRlIGludmVyc2Ugc3Via2V5c1xuICAgIHRoaXMuX2ludlN1YktleXMgPSBbXTtcbiAgICBjb25zdCBpbnZTdWJLZXlzID0gdGhpcy5faW52U3ViS2V5cztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyBpICs9IDEpIHtcbiAgICAgIGludlN1YktleXNbaV0gPSBzdWJLZXlzWzE1IC0gaV07XG4gICAgfVxuICB9XG5cbiAgZW5jcnlwdEJsb2NrKE0sIG9mZnNldCkge1xuICAgIHRoaXMuX2RvQ3J5cHRCbG9jayhNLCBvZmZzZXQsIHRoaXMuX3N1YktleXMpO1xuICB9XG5cbiAgZGVjcnlwdEJsb2NrKE0sIG9mZnNldCkge1xuICAgIHRoaXMuX2RvQ3J5cHRCbG9jayhNLCBvZmZzZXQsIHRoaXMuX2ludlN1YktleXMpO1xuICB9XG5cbiAgX2RvQ3J5cHRCbG9jayhNLCBvZmZzZXQsIHN1YktleXMpIHtcbiAgICBjb25zdCBfTSA9IE07XG5cbiAgICAvLyBHZXQgaW5wdXRcbiAgICB0aGlzLl9sQmxvY2sgPSBNW29mZnNldF07XG4gICAgdGhpcy5fckJsb2NrID0gTVtvZmZzZXQgKyAxXTtcblxuICAgIC8vIEluaXRpYWwgcGVybXV0YXRpb25cbiAgICBleGNoYW5nZUxSLmNhbGwodGhpcywgNCwgMHgwZjBmMGYwZik7XG4gICAgZXhjaGFuZ2VMUi5jYWxsKHRoaXMsIDE2LCAweDAwMDBmZmZmKTtcbiAgICBleGNoYW5nZVJMLmNhbGwodGhpcywgMiwgMHgzMzMzMzMzMyk7XG4gICAgZXhjaGFuZ2VSTC5jYWxsKHRoaXMsIDgsIDB4MDBmZjAwZmYpO1xuICAgIGV4Y2hhbmdlTFIuY2FsbCh0aGlzLCAxLCAweDU1NTU1NTU1KTtcblxuICAgIC8vIFJvdW5kc1xuICAgIGZvciAobGV0IHJvdW5kID0gMDsgcm91bmQgPCAxNjsgcm91bmQgKz0gMSkge1xuICAgICAgLy8gU2hvcnRjdXRzXG4gICAgICBjb25zdCBzdWJLZXkgPSBzdWJLZXlzW3JvdW5kXTtcbiAgICAgIGNvbnN0IGxCbG9jayA9IHRoaXMuX2xCbG9jaztcbiAgICAgIGNvbnN0IHJCbG9jayA9IHRoaXMuX3JCbG9jaztcblxuICAgICAgLy8gRmVpc3RlbCBmdW5jdGlvblxuICAgICAgbGV0IGYgPSAwO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4OyBpICs9IDEpIHtcbiAgICAgICAgZiB8PSBTQk9YX1BbaV1bKChyQmxvY2sgXiBzdWJLZXlbaV0pICYgU0JPWF9NQVNLW2ldKSA+Pj4gMF07XG4gICAgICB9XG4gICAgICB0aGlzLl9sQmxvY2sgPSByQmxvY2s7XG4gICAgICB0aGlzLl9yQmxvY2sgPSBsQmxvY2sgXiBmO1xuICAgIH1cblxuICAgIC8vIFVuZG8gc3dhcCBmcm9tIGxhc3Qgcm91bmRcbiAgICBjb25zdCB0ID0gdGhpcy5fbEJsb2NrO1xuICAgIHRoaXMuX2xCbG9jayA9IHRoaXMuX3JCbG9jaztcbiAgICB0aGlzLl9yQmxvY2sgPSB0O1xuXG4gICAgLy8gRmluYWwgcGVybXV0YXRpb25cbiAgICBleGNoYW5nZUxSLmNhbGwodGhpcywgMSwgMHg1NTU1NTU1NSk7XG4gICAgZXhjaGFuZ2VSTC5jYWxsKHRoaXMsIDgsIDB4MDBmZjAwZmYpO1xuICAgIGV4Y2hhbmdlUkwuY2FsbCh0aGlzLCAyLCAweDMzMzMzMzMzKTtcbiAgICBleGNoYW5nZUxSLmNhbGwodGhpcywgMTYsIDB4MDAwMGZmZmYpO1xuICAgIGV4Y2hhbmdlTFIuY2FsbCh0aGlzLCA0LCAweDBmMGYwZjBmKTtcblxuICAgIC8vIFNldCBvdXRwdXRcbiAgICBfTVtvZmZzZXRdID0gdGhpcy5fbEJsb2NrO1xuICAgIF9NW29mZnNldCArIDFdID0gdGhpcy5fckJsb2NrO1xuICB9XG59XG5ERVNBbGdvLmtleVNpemUgPSA2NCAvIDMyO1xuREVTQWxnby5pdlNpemUgPSA2NCAvIDMyO1xuREVTQWxnby5ibG9ja1NpemUgPSA2NCAvIDMyO1xuXG4vKipcbiAqIFNob3J0Y3V0IGZ1bmN0aW9ucyB0byB0aGUgY2lwaGVyJ3Mgb2JqZWN0IGludGVyZmFjZS5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqICAgICB2YXIgY2lwaGVydGV4dCA9IENyeXB0b0pTLkRFUy5lbmNyeXB0KG1lc3NhZ2UsIGtleSwgY2ZnKTtcbiAqICAgICB2YXIgcGxhaW50ZXh0ICA9IENyeXB0b0pTLkRFUy5kZWNyeXB0KGNpcGhlcnRleHQsIGtleSwgY2ZnKTtcbiAqL1xuZXhwb3J0IGNvbnN0IERFUyA9IEJsb2NrQ2lwaGVyLl9jcmVhdGVIZWxwZXIoREVTQWxnbyk7XG5cbi8qKlxuICogVHJpcGxlLURFUyBibG9jayBjaXBoZXIgYWxnb3JpdGhtLlxuICovXG5leHBvcnQgY2xhc3MgVHJpcGxlREVTQWxnbyBleHRlbmRzIEJsb2NrQ2lwaGVyIHtcbiAgX2RvUmVzZXQoKSB7XG4gICAgLy8gU2hvcnRjdXRzXG4gICAgY29uc3Qga2V5ID0gdGhpcy5fa2V5O1xuICAgIGNvbnN0IGtleVdvcmRzID0ga2V5LndvcmRzO1xuICAgIC8vIE1ha2Ugc3VyZSB0aGUga2V5IGxlbmd0aCBpcyB2YWxpZCAoNjQsIDEyOCBvciA+PSAxOTIgYml0KVxuICAgIGlmIChrZXlXb3Jkcy5sZW5ndGggIT09IDIgJiYga2V5V29yZHMubGVuZ3RoICE9PSA0ICYmIGtleVdvcmRzLmxlbmd0aCA8IDYpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBrZXkgbGVuZ3RoIC0gM0RFUyByZXF1aXJlcyB0aGUga2V5IGxlbmd0aCB0byBiZSA2NCwgMTI4LCAxOTIgb3IgPjE5Mi4nKTtcbiAgICB9XG5cbiAgICAvLyBFeHRlbmQgdGhlIGtleSBhY2NvcmRpbmcgdG8gdGhlIGtleWluZyBvcHRpb25zIGRlZmluZWQgaW4gM0RFUyBzdGFuZGFyZFxuICAgIGNvbnN0IGtleTEgPSBrZXlXb3Jkcy5zbGljZSgwLCAyKTtcbiAgICBjb25zdCBrZXkyID0ga2V5V29yZHMubGVuZ3RoIDwgNCA/IGtleVdvcmRzLnNsaWNlKDAsIDIpIDoga2V5V29yZHMuc2xpY2UoMiwgNCk7XG4gICAgY29uc3Qga2V5MyA9IGtleVdvcmRzLmxlbmd0aCA8IDYgPyBrZXlXb3Jkcy5zbGljZSgwLCAyKSA6IGtleVdvcmRzLnNsaWNlKDQsIDYpO1xuXG4gICAgLy8gQ3JlYXRlIERFUyBpbnN0YW5jZXNcbiAgICB0aGlzLl9kZXMxID0gREVTQWxnby5jcmVhdGVFbmNyeXB0b3IoV29yZEFycmF5LmNyZWF0ZShrZXkxKSk7XG4gICAgdGhpcy5fZGVzMiA9IERFU0FsZ28uY3JlYXRlRW5jcnlwdG9yKFdvcmRBcnJheS5jcmVhdGUoa2V5MikpO1xuICAgIHRoaXMuX2RlczMgPSBERVNBbGdvLmNyZWF0ZUVuY3J5cHRvcihXb3JkQXJyYXkuY3JlYXRlKGtleTMpKTtcbiAgfVxuXG4gIGVuY3J5cHRCbG9jayhNLCBvZmZzZXQpIHtcbiAgICB0aGlzLl9kZXMxLmVuY3J5cHRCbG9jayhNLCBvZmZzZXQpO1xuICAgIHRoaXMuX2RlczIuZGVjcnlwdEJsb2NrKE0sIG9mZnNldCk7XG4gICAgdGhpcy5fZGVzMy5lbmNyeXB0QmxvY2soTSwgb2Zmc2V0KTtcbiAgfVxuXG4gIGRlY3J5cHRCbG9jayhNLCBvZmZzZXQpIHtcbiAgICB0aGlzLl9kZXMzLmRlY3J5cHRCbG9jayhNLCBvZmZzZXQpO1xuICAgIHRoaXMuX2RlczIuZW5jcnlwdEJsb2NrKE0sIG9mZnNldCk7XG4gICAgdGhpcy5fZGVzMS5kZWNyeXB0QmxvY2soTSwgb2Zmc2V0KTtcbiAgfVxufVxuVHJpcGxlREVTQWxnby5rZXlTaXplID0gMTkyIC8gMzI7XG5UcmlwbGVERVNBbGdvLml2U2l6ZSA9IDY0IC8gMzI7XG5UcmlwbGVERVNBbGdvLmJsb2NrU2l6ZSA9IDY0IC8gMzI7XG5cbi8qKlxuICogU2hvcnRjdXQgZnVuY3Rpb25zIHRvIHRoZSBjaXBoZXIncyBvYmplY3QgaW50ZXJmYWNlLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogICAgIHZhciBjaXBoZXJ0ZXh0ID0gQ3J5cHRvSlMuVHJpcGxlREVTLmVuY3J5cHQobWVzc2FnZSwga2V5LCBjZmcpO1xuICogICAgIHZhciBwbGFpbnRleHQgID0gQ3J5cHRvSlMuVHJpcGxlREVTLmRlY3J5cHQoY2lwaGVydGV4dCwga2V5LCBjZmcpO1xuICovXG5leHBvcnQgY29uc3QgVHJpcGxlREVTID0gQmxvY2tDaXBoZXIuX2NyZWF0ZUhlbHBlcihUcmlwbGVERVNBbGdvKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/tripledes.js\n");

/***/ }),

/***/ "./node_modules/crypto-es/lib/x64-core.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-es/lib/x64-core.js ***!
  \************************************************/
/*! exports provided: X64Word, X64WordArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"X64Word\", function() { return X64Word; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"X64WordArray\", function() { return X64WordArray; });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"./node_modules/crypto-es/lib/core.js\");\n\n\nconst X32WordArray = _core_js__WEBPACK_IMPORTED_MODULE_0__[\"WordArray\"];\n\n/**\n * A 64-bit word.\n */\nclass X64Word extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Initializes a newly created 64-bit word.\n   *\n   * @param {number} high The high 32 bits.\n   * @param {number} low The low 32 bits.\n   *\n   * @example\n   *\n   *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n   */\n  constructor(high, low) {\n    super();\n\n    this.high = high;\n    this.low = low;\n  }\n}\n\n/**\n * An array of 64-bit words.\n *\n * @property {Array} words The array of CryptoJS.x64.Word objects.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nclass X64WordArray extends _core_js__WEBPACK_IMPORTED_MODULE_0__[\"Base\"] {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.x64.WordArray.create();\n   *\n   *     var wordArray = CryptoJS.x64.WordArray.create([\n   *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n   *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n   *     ]);\n   *\n   *     var wordArray = CryptoJS.x64.WordArray.create([\n   *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n   *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n   *     ], 10);\n   */\n  constructor(words = [], sigBytes = words.length * 8) {\n    super();\n\n    this.words = words;\n    this.sigBytes = sigBytes;\n  }\n\n  /**\n   * Converts this 64-bit word array to a 32-bit word array.\n   *\n   * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n   *\n   * @example\n   *\n   *     var x32WordArray = x64WordArray.toX32();\n   */\n  toX32() {\n    // Shortcuts\n    const x64Words = this.words;\n    const x64WordsLength = x64Words.length;\n\n    // Convert\n    const x32Words = [];\n    for (let i = 0; i < x64WordsLength; i += 1) {\n      const x64Word = x64Words[i];\n      x32Words.push(x64Word.high);\n      x32Words.push(x64Word.low);\n    }\n\n    return X32WordArray.create(x32Words, this.sigBytes);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {X64WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = x64WordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n\n    // Clone \"words\" array\n    clone.words = this.words.slice(0);\n    const { words } = clone;\n\n    // Clone each X64Word object\n    const wordsLength = words.length;\n    for (let i = 0; i < wordsLength; i += 1) {\n      words[i] = words[i].clone();\n    }\n\n    return clone;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIveDY0LWNvcmUuanM/NzY2ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdtQjs7QUFFbkIscUJBQXFCLGtEQUFTOztBQUU5QjtBQUNBO0FBQ0E7QUFDTyxzQkFBc0IsNkNBQUk7QUFDakM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE1BQU07QUFDcEIsY0FBYyxPQUFPO0FBQ3JCO0FBQ08sMkJBQTJCLDZDQUFJO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyx1QkFBdUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsb0JBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxhQUFhO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7O0FBRW5CO0FBQ0E7QUFDQSxtQkFBbUIsaUJBQWlCO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2NyeXB0by1lcy9saWIveDY0LWNvcmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCYXNlLFxuICBXb3JkQXJyYXksXG59IGZyb20gJy4vY29yZS5qcyc7XG5cbmNvbnN0IFgzMldvcmRBcnJheSA9IFdvcmRBcnJheTtcblxuLyoqXG4gKiBBIDY0LWJpdCB3b3JkLlxuICovXG5leHBvcnQgY2xhc3MgWDY0V29yZCBleHRlbmRzIEJhc2Uge1xuICAvKipcbiAgICogSW5pdGlhbGl6ZXMgYSBuZXdseSBjcmVhdGVkIDY0LWJpdCB3b3JkLlxuICAgKlxuICAgKiBAcGFyYW0ge251bWJlcn0gaGlnaCBUaGUgaGlnaCAzMiBiaXRzLlxuICAgKiBAcGFyYW0ge251bWJlcn0gbG93IFRoZSBsb3cgMzIgYml0cy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogICAgIHZhciB4NjRXb3JkID0gQ3J5cHRvSlMueDY0LldvcmQuY3JlYXRlKDB4MDAwMTAyMDMsIDB4MDQwNTA2MDcpO1xuICAgKi9cbiAgY29uc3RydWN0b3IoaGlnaCwgbG93KSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuaGlnaCA9IGhpZ2g7XG4gICAgdGhpcy5sb3cgPSBsb3c7XG4gIH1cbn1cblxuLyoqXG4gKiBBbiBhcnJheSBvZiA2NC1iaXQgd29yZHMuXG4gKlxuICogQHByb3BlcnR5IHtBcnJheX0gd29yZHMgVGhlIGFycmF5IG9mIENyeXB0b0pTLng2NC5Xb3JkIG9iamVjdHMuXG4gKiBAcHJvcGVydHkge251bWJlcn0gc2lnQnl0ZXMgVGhlIG51bWJlciBvZiBzaWduaWZpY2FudCBieXRlcyBpbiB0aGlzIHdvcmQgYXJyYXkuXG4gKi9cbmV4cG9ydCBjbGFzcyBYNjRXb3JkQXJyYXkgZXh0ZW5kcyBCYXNlIHtcbiAgLyoqXG4gICAqIEluaXRpYWxpemVzIGEgbmV3bHkgY3JlYXRlZCB3b3JkIGFycmF5LlxuICAgKlxuICAgKiBAcGFyYW0ge0FycmF5fSB3b3JkcyAoT3B0aW9uYWwpIEFuIGFycmF5IG9mIENyeXB0b0pTLng2NC5Xb3JkIG9iamVjdHMuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzaWdCeXRlcyAoT3B0aW9uYWwpIFRoZSBudW1iZXIgb2Ygc2lnbmlmaWNhbnQgYnl0ZXMgaW4gdGhlIHdvcmRzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKlxuICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLng2NC5Xb3JkQXJyYXkuY3JlYXRlKCk7XG4gICAqXG4gICAqICAgICB2YXIgd29yZEFycmF5ID0gQ3J5cHRvSlMueDY0LldvcmRBcnJheS5jcmVhdGUoW1xuICAgKiAgICAgICAgIENyeXB0b0pTLng2NC5Xb3JkLmNyZWF0ZSgweDAwMDEwMjAzLCAweDA0MDUwNjA3KSxcbiAgICogICAgICAgICBDcnlwdG9KUy54NjQuV29yZC5jcmVhdGUoMHgxODE5MWExYiwgMHgxYzFkMWUxZilcbiAgICogICAgIF0pO1xuICAgKlxuICAgKiAgICAgdmFyIHdvcmRBcnJheSA9IENyeXB0b0pTLng2NC5Xb3JkQXJyYXkuY3JlYXRlKFtcbiAgICogICAgICAgICBDcnlwdG9KUy54NjQuV29yZC5jcmVhdGUoMHgwMDAxMDIwMywgMHgwNDA1MDYwNyksXG4gICAqICAgICAgICAgQ3J5cHRvSlMueDY0LldvcmQuY3JlYXRlKDB4MTgxOTFhMWIsIDB4MWMxZDFlMWYpXG4gICAqICAgICBdLCAxMCk7XG4gICAqL1xuICBjb25zdHJ1Y3Rvcih3b3JkcyA9IFtdLCBzaWdCeXRlcyA9IHdvcmRzLmxlbmd0aCAqIDgpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy53b3JkcyA9IHdvcmRzO1xuICAgIHRoaXMuc2lnQnl0ZXMgPSBzaWdCeXRlcztcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyB0aGlzIDY0LWJpdCB3b3JkIGFycmF5IHRvIGEgMzItYml0IHdvcmQgYXJyYXkuXG4gICAqXG4gICAqIEByZXR1cm4ge0NyeXB0b0pTLmxpYi5Xb3JkQXJyYXl9IFRoaXMgd29yZCBhcnJheSdzIGRhdGEgYXMgYSAzMi1iaXQgd29yZCBhcnJheS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICpcbiAgICogICAgIHZhciB4MzJXb3JkQXJyYXkgPSB4NjRXb3JkQXJyYXkudG9YMzIoKTtcbiAgICovXG4gIHRvWDMyKCkge1xuICAgIC8vIFNob3J0Y3V0c1xuICAgIGNvbnN0IHg2NFdvcmRzID0gdGhpcy53b3JkcztcbiAgICBjb25zdCB4NjRXb3Jkc0xlbmd0aCA9IHg2NFdvcmRzLmxlbmd0aDtcblxuICAgIC8vIENvbnZlcnRcbiAgICBjb25zdCB4MzJXb3JkcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgeDY0V29yZHNMZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY29uc3QgeDY0V29yZCA9IHg2NFdvcmRzW2ldO1xuICAgICAgeDMyV29yZHMucHVzaCh4NjRXb3JkLmhpZ2gpO1xuICAgICAgeDMyV29yZHMucHVzaCh4NjRXb3JkLmxvdyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFgzMldvcmRBcnJheS5jcmVhdGUoeDMyV29yZHMsIHRoaXMuc2lnQnl0ZXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBjb3B5IG9mIHRoaXMgd29yZCBhcnJheS5cbiAgICpcbiAgICogQHJldHVybiB7WDY0V29yZEFycmF5fSBUaGUgY2xvbmUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqICAgICB2YXIgY2xvbmUgPSB4NjRXb3JkQXJyYXkuY2xvbmUoKTtcbiAgICovXG4gIGNsb25lKCkge1xuICAgIGNvbnN0IGNsb25lID0gc3VwZXIuY2xvbmUuY2FsbCh0aGlzKTtcblxuICAgIC8vIENsb25lIFwid29yZHNcIiBhcnJheVxuICAgIGNsb25lLndvcmRzID0gdGhpcy53b3Jkcy5zbGljZSgwKTtcbiAgICBjb25zdCB7IHdvcmRzIH0gPSBjbG9uZTtcblxuICAgIC8vIENsb25lIGVhY2ggWDY0V29yZCBvYmplY3RcbiAgICBjb25zdCB3b3Jkc0xlbmd0aCA9IHdvcmRzLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdvcmRzTGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHdvcmRzW2ldID0gd29yZHNbaV0uY2xvbmUoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xvbmU7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/crypto-es/lib/x64-core.js\n");

/***/ }),

/***/ "./node_modules/lodash.defaults/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.defaults/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction assignInDefaults(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(args) {\n  args.push(undefined, assignInDefaults);\n  return apply(assignInWith, undefined, args);\n});\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = defaults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lodash.defaults/index.js\n");

/***/ }),

/***/ "./node_modules/sturdy-websocket/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/sturdy-websocket/dist/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar defaults = __webpack_require__(/*! lodash.defaults */ \"./node_modules/lodash.defaults/index.js\");\nvar SHOULD_RECONNECT_FALSE_MESSAGE = \"Provided shouldReconnect() returned false. Closing permanently.\";\nvar SHOULD_RECONNECT_PROMISE_FALSE_MESSAGE = \"Provided shouldReconnect() resolved to false. Closing permanently.\";\nvar SturdyWebSocket = /** @class */ (function () {\n    function SturdyWebSocket(url, protocolsOrOptions, options) {\n        this.url = url;\n        this.onclose = null;\n        this.onerror = null;\n        this.onmessage = null;\n        this.onopen = null;\n        this.ondown = null;\n        this.onreopen = null;\n        this.CONNECTING = SturdyWebSocket.CONNECTING;\n        this.OPEN = SturdyWebSocket.OPEN;\n        this.CLOSING = SturdyWebSocket.CLOSING;\n        this.CLOSED = SturdyWebSocket.CLOSED;\n        this.hasBeenOpened = false;\n        this.isClosed = false;\n        this.messageBuffer = [];\n        this.nextRetryTime = 0;\n        this.reconnectCount = 0;\n        this.lastKnownExtensions = \"\";\n        this.lastKnownProtocol = \"\";\n        this.listeners = {};\n        if (protocolsOrOptions == null ||\n            typeof protocolsOrOptions === \"string\" ||\n            Array.isArray(protocolsOrOptions)) {\n            this.protocols = protocolsOrOptions;\n        }\n        else {\n            options = protocolsOrOptions;\n        }\n        this.options = defaults({}, options, SturdyWebSocket.DEFAULT_OPTIONS);\n        if (!this.options.wsConstructor) {\n            if (typeof WebSocket !== \"undefined\") {\n                this.options.wsConstructor = WebSocket;\n            }\n            else {\n                throw new Error(\"WebSocket not present in global scope and no \" +\n                    \"wsConstructor option was provided.\");\n            }\n        }\n        this.openNewWebSocket();\n    }\n    Object.defineProperty(SturdyWebSocket.prototype, \"binaryType\", {\n        get: function () {\n            return this.binaryTypeInternal || \"blob\";\n        },\n        set: function (binaryType) {\n            this.binaryTypeInternal = binaryType;\n            if (this.ws) {\n                this.ws.binaryType = binaryType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SturdyWebSocket.prototype, \"bufferedAmount\", {\n        get: function () {\n            var sum = this.ws ? this.ws.bufferedAmount : 0;\n            var hasUnknownAmount = false;\n            this.messageBuffer.forEach(function (data) {\n                var byteLength = getDataByteLength(data);\n                if (byteLength != null) {\n                    sum += byteLength;\n                }\n                else {\n                    hasUnknownAmount = true;\n                }\n            });\n            if (hasUnknownAmount) {\n                this.debugLog(\"Some buffered data had unknown length. bufferedAmount()\" +\n                    \" return value may be below the correct amount.\");\n            }\n            return sum;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SturdyWebSocket.prototype, \"extensions\", {\n        get: function () {\n            return this.ws ? this.ws.extensions : this.lastKnownExtensions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SturdyWebSocket.prototype, \"protocol\", {\n        get: function () {\n            return this.ws ? this.ws.protocol : this.lastKnownProtocol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SturdyWebSocket.prototype, \"readyState\", {\n        get: function () {\n            return this.isClosed ? SturdyWebSocket.CLOSED : SturdyWebSocket.OPEN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SturdyWebSocket.prototype.close = function (code, reason) {\n        if (this.ws) {\n            this.ws.close(code, reason);\n        }\n        this.shutdown();\n        this.debugLog(\"WebSocket permanently closed by client.\");\n    };\n    SturdyWebSocket.prototype.send = function (data) {\n        if (this.ws && this.ws.readyState === this.OPEN) {\n            this.ws.send(data);\n        }\n        else {\n            this.messageBuffer.push(data);\n        }\n    };\n    SturdyWebSocket.prototype.addEventListener = function (type, listener) {\n        if (!this.listeners[type]) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n    };\n    SturdyWebSocket.prototype.dispatchEvent = function (event) {\n        return this.dispatchEventOfType(event.type, event);\n    };\n    SturdyWebSocket.prototype.removeEventListener = function (type, listener) {\n        if (this.listeners[type]) {\n            this.listeners[type] = this.listeners[type].filter(function (l) { return l !== listener; });\n        }\n    };\n    SturdyWebSocket.prototype.openNewWebSocket = function () {\n        var _this = this;\n        if (this.isClosed) {\n            return;\n        }\n        var _a = this.options, connectTimeout = _a.connectTimeout, wsConstructor = _a.wsConstructor;\n        this.debugLog(\"Opening new WebSocket to \" + this.url + \".\");\n        var ws = new wsConstructor(this.url, this.protocols);\n        ws.onclose = function (event) { return _this.handleClose(event); };\n        ws.onerror = function (event) { return _this.handleError(event); };\n        ws.onmessage = function (event) { return _this.handleMessage(event); };\n        ws.onopen = function (event) { return _this.handleOpen(event); };\n        this.connectTimeoutId = setTimeout(function () {\n            // If this is running, we still haven't opened the websocket.\n            // Kill it so we can try again.\n            _this.clearConnectTimeout();\n            ws.close();\n        }, connectTimeout);\n        this.ws = ws;\n    };\n    SturdyWebSocket.prototype.handleOpen = function (event) {\n        var _this = this;\n        if (!this.ws || this.isClosed) {\n            return;\n        }\n        var allClearResetTime = this.options.allClearResetTime;\n        this.debugLog(\"WebSocket opened.\");\n        if (this.binaryTypeInternal != null) {\n            this.ws.binaryType = this.binaryTypeInternal;\n        }\n        else {\n            this.binaryTypeInternal = this.ws.binaryType;\n        }\n        this.clearConnectTimeout();\n        if (this.hasBeenOpened) {\n            this.dispatchEventOfType(\"reopen\", event);\n        }\n        else {\n            this.dispatchEventOfType(\"open\", event);\n            this.hasBeenOpened = true;\n        }\n        this.messageBuffer.forEach(function (message) { return _this.send(message); });\n        this.messageBuffer = [];\n        this.allClearTimeoutId = setTimeout(function () {\n            _this.clearAllClearTimeout();\n            _this.nextRetryTime = 0;\n            _this.reconnectCount = 0;\n            var openTime = (allClearResetTime / 1000) | 0;\n            _this.debugLog(\"WebSocket remained open for \" + openTime + \" seconds. Resetting\" +\n                \" retry time and count.\");\n        }, allClearResetTime);\n    };\n    SturdyWebSocket.prototype.handleMessage = function (event) {\n        if (this.isClosed) {\n            return;\n        }\n        this.dispatchEventOfType(\"message\", event);\n    };\n    SturdyWebSocket.prototype.handleClose = function (event) {\n        var _this = this;\n        if (this.isClosed) {\n            return;\n        }\n        var _a = this.options, maxReconnectAttempts = _a.maxReconnectAttempts, shouldReconnect = _a.shouldReconnect;\n        this.clearConnectTimeout();\n        this.clearAllClearTimeout();\n        if (this.ws) {\n            this.lastKnownExtensions = this.ws.extensions;\n            this.lastKnownProtocol = this.ws.protocol;\n            this.ws = undefined;\n        }\n        this.dispatchEventOfType(\"down\", event);\n        if (this.reconnectCount >= maxReconnectAttempts) {\n            this.stopReconnecting(event, this.getTooManyFailedReconnectsMessage());\n            return;\n        }\n        var willReconnect = shouldReconnect(event);\n        if (typeof willReconnect === \"boolean\") {\n            this.handleWillReconnect(willReconnect, event, SHOULD_RECONNECT_FALSE_MESSAGE);\n        }\n        else {\n            willReconnect.then(function (willReconnectResolved) {\n                if (_this.isClosed) {\n                    return;\n                }\n                _this.handleWillReconnect(willReconnectResolved, event, SHOULD_RECONNECT_PROMISE_FALSE_MESSAGE);\n            });\n        }\n    };\n    SturdyWebSocket.prototype.handleError = function (event) {\n        this.dispatchEventOfType(\"error\", event);\n        this.debugLog(\"WebSocket encountered an error.\");\n    };\n    SturdyWebSocket.prototype.handleWillReconnect = function (willReconnect, event, denialReason) {\n        if (willReconnect) {\n            this.reconnect();\n        }\n        else {\n            this.stopReconnecting(event, denialReason);\n        }\n    };\n    SturdyWebSocket.prototype.reconnect = function () {\n        var _this = this;\n        var _a = this.options, minReconnectDelay = _a.minReconnectDelay, maxReconnectDelay = _a.maxReconnectDelay, reconnectBackoffFactor = _a.reconnectBackoffFactor;\n        this.reconnectCount++;\n        var retryTime = this.nextRetryTime;\n        this.nextRetryTime = Math.max(minReconnectDelay, Math.min(this.nextRetryTime * reconnectBackoffFactor, maxReconnectDelay));\n        setTimeout(function () { return _this.openNewWebSocket(); }, retryTime);\n        var retryTimeSeconds = (retryTime / 1000) | 0;\n        this.debugLog(\"WebSocket was closed. Re-opening in \" + retryTimeSeconds + \" seconds.\");\n    };\n    SturdyWebSocket.prototype.stopReconnecting = function (event, debugReason) {\n        this.debugLog(debugReason);\n        this.shutdown();\n        this.dispatchEventOfType(\"close\", event);\n    };\n    SturdyWebSocket.prototype.shutdown = function () {\n        this.isClosed = true;\n        this.clearAllTimeouts();\n        this.messageBuffer = [];\n    };\n    SturdyWebSocket.prototype.clearAllTimeouts = function () {\n        this.clearConnectTimeout();\n        this.clearAllClearTimeout();\n    };\n    SturdyWebSocket.prototype.clearConnectTimeout = function () {\n        if (this.connectTimeoutId != null) {\n            clearTimeout(this.connectTimeoutId);\n            this.connectTimeoutId = undefined;\n        }\n    };\n    SturdyWebSocket.prototype.clearAllClearTimeout = function () {\n        if (this.allClearTimeoutId != null) {\n            clearTimeout(this.allClearTimeoutId);\n            this.allClearTimeoutId = undefined;\n        }\n    };\n    SturdyWebSocket.prototype.dispatchEventOfType = function (type, event) {\n        var _this = this;\n        switch (type) {\n            case \"close\":\n                if (this.onclose) {\n                    this.onclose(event);\n                }\n                break;\n            case \"error\":\n                if (this.onerror) {\n                    this.onerror(event);\n                }\n                break;\n            case \"message\":\n                if (this.onmessage) {\n                    this.onmessage(event);\n                }\n                break;\n            case \"open\":\n                if (this.onopen) {\n                    this.onopen(event);\n                }\n                break;\n            case \"down\":\n                if (this.ondown) {\n                    this.ondown(event);\n                }\n                break;\n            case \"reopen\":\n                if (this.onreopen) {\n                    this.onreopen(event);\n                }\n                break;\n        }\n        if (type in this.listeners) {\n            this.listeners[type]\n                .slice()\n                .forEach(function (listener) { return _this.callListener(listener, event); });\n        }\n        return !event || !event.defaultPrevented;\n    };\n    SturdyWebSocket.prototype.callListener = function (listener, event) {\n        if (typeof listener === \"function\") {\n            listener.call(this, event);\n        }\n        else {\n            listener.handleEvent.call(this, event);\n        }\n    };\n    SturdyWebSocket.prototype.debugLog = function (message) {\n        if (this.options.debug) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        }\n    };\n    SturdyWebSocket.prototype.getTooManyFailedReconnectsMessage = function () {\n        var maxReconnectAttempts = this.options.maxReconnectAttempts;\n        return \"Failed to reconnect after \" + maxReconnectAttempts + \" \" + pluralize(\"attempt\", maxReconnectAttempts) + \". Closing permanently.\";\n    };\n    SturdyWebSocket.DEFAULT_OPTIONS = {\n        allClearResetTime: 5000,\n        connectTimeout: 5000,\n        debug: false,\n        minReconnectDelay: 1000,\n        maxReconnectDelay: 30000,\n        maxReconnectAttempts: Number.POSITIVE_INFINITY,\n        reconnectBackoffFactor: 1.5,\n        shouldReconnect: function () { return true; },\n        wsConstructor: undefined,\n    };\n    SturdyWebSocket.CONNECTING = 0;\n    SturdyWebSocket.OPEN = 1;\n    SturdyWebSocket.CLOSING = 2;\n    SturdyWebSocket.CLOSED = 3;\n    return SturdyWebSocket;\n}());\nexports.default = SturdyWebSocket;\nfunction getDataByteLength(data) {\n    if (typeof data === \"string\") {\n        // UTF-16 strings use two bytes per character.\n        return 2 * data.length;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return data.byteLength;\n    }\n    else if (data instanceof Blob) {\n        return data.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction pluralize(s, n) {\n    return n === 1 ? s : s + \"s\";\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sturdy-websocket/dist/index.js\n");

/***/ })

}]);